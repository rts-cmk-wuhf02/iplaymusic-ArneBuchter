"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Swiper 5.3.0
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://swiperjs.com
 *
 * Copyright 2014-2020 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: January 11, 2020
 */
var doc = "undefined" == typeof document ? {
  body: {},
  addEventListener: function addEventListener() {},
  removeEventListener: function removeEventListener() {},
  activeElement: {
    blur: function blur() {},
    nodeName: ""
  },
  querySelector: function querySelector() {
    return null;
  },
  querySelectorAll: function querySelectorAll() {
    return [];
  },
  getElementById: function getElementById() {
    return null;
  },
  createEvent: function createEvent() {
    return {
      initEvent: function initEvent() {}
    };
  },
  createElement: function createElement() {
    return {
      children: [],
      childNodes: [],
      style: {},
      setAttribute: function setAttribute() {},
      getElementsByTagName: function getElementsByTagName() {
        return [];
      }
    };
  },
  location: {
    hash: ""
  }
} : document,
    win = "undefined" == typeof window ? {
  document: doc,
  navigator: {
    userAgent: ""
  },
  location: {},
  history: {},
  CustomEvent: function CustomEvent() {
    return this;
  },
  addEventListener: function addEventListener() {},
  removeEventListener: function removeEventListener() {},
  getComputedStyle: function getComputedStyle() {
    return {
      getPropertyValue: function getPropertyValue() {
        return "";
      }
    };
  },
  Image: function Image() {},
  Date: function Date() {},
  screen: {},
  setTimeout: function setTimeout() {},
  clearTimeout: function clearTimeout() {}
} : window;

var Dom7 = function Dom7(e) {
  _classCallCheck(this, Dom7);

  var t = this;

  for (var s = 0; s < e.length; s += 1) {
    t[s] = e[s];
  }

  return t.length = e.length, this;
};

function $(e, t) {
  var s = [];
  var i = 0;
  if (e && !t && e instanceof Dom7) return e;
  if (e) if ("string" == typeof e) {
    var a, n;
    var r = e.trim();

    if (r.indexOf("<") >= 0 && r.indexOf(">") >= 0) {
      var _e = "div";

      for (0 === r.indexOf("<li") && (_e = "ul"), 0 === r.indexOf("<tr") && (_e = "tbody"), 0 !== r.indexOf("<td") && 0 !== r.indexOf("<th") || (_e = "tr"), 0 === r.indexOf("<tbody") && (_e = "table"), 0 === r.indexOf("<option") && (_e = "select"), (n = doc.createElement(_e)).innerHTML = r, i = 0; i < n.childNodes.length; i += 1) {
        s.push(n.childNodes[i]);
      }
    } else for (a = t || "#" !== e[0] || e.match(/[ .<>:~]/) ? (t || doc).querySelectorAll(e.trim()) : [doc.getElementById(e.trim().split("#")[1])], i = 0; i < a.length; i += 1) {
      a[i] && s.push(a[i]);
    }
  } else if (e.nodeType || e === win || e === doc) s.push(e);else if (e.length > 0 && e[0].nodeType) for (i = 0; i < e.length; i += 1) {
    s.push(e[i]);
  }
  return new Dom7(s);
}

function unique(e) {
  var t = [];

  for (var s = 0; s < e.length; s += 1) {
    -1 === t.indexOf(e[s]) && t.push(e[s]);
  }

  return t;
}

function addClass(e) {
  if (void 0 === e) return this;
  var t = e.split(" ");

  for (var _e2 = 0; _e2 < t.length; _e2 += 1) {
    for (var s = 0; s < this.length; s += 1) {
      void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.add(t[_e2]);
    }
  }

  return this;
}

function removeClass(e) {
  var t = e.split(" ");

  for (var _e3 = 0; _e3 < t.length; _e3 += 1) {
    for (var s = 0; s < this.length; s += 1) {
      void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.remove(t[_e3]);
    }
  }

  return this;
}

function hasClass(e) {
  return !!this[0] && this[0].classList.contains(e);
}

function toggleClass(e) {
  var t = e.split(" ");

  for (var _e4 = 0; _e4 < t.length; _e4 += 1) {
    for (var s = 0; s < this.length; s += 1) {
      void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.toggle(t[_e4]);
    }
  }

  return this;
}

function attr(e, t) {
  if (1 === arguments.length && "string" == typeof e) return this[0] ? this[0].getAttribute(e) : void 0;

  for (var s = 0; s < this.length; s += 1) {
    if (2 === arguments.length) this[s].setAttribute(e, t);else for (var _t in e) {
      this[s][_t] = e[_t], this[s].setAttribute(_t, e[_t]);
    }
  }

  return this;
}

function removeAttr(e) {
  for (var _t2 = 0; _t2 < this.length; _t2 += 1) {
    this[_t2].removeAttribute(e);
  }

  return this;
}

function data(e, t) {
  var s;

  if (void 0 !== t) {
    for (var i = 0; i < this.length; i += 1) {
      (s = this[i]).dom7ElementDataStorage || (s.dom7ElementDataStorage = {}), s.dom7ElementDataStorage[e] = t;
    }

    return this;
  }

  if (s = this[0]) {
    if (s.dom7ElementDataStorage && e in s.dom7ElementDataStorage) return s.dom7ElementDataStorage[e];

    var _t3 = s.getAttribute("data-".concat(e));

    return _t3 || void 0;
  }
}

function transform(e) {
  for (var _t4 = 0; _t4 < this.length; _t4 += 1) {
    var s = this[_t4].style;
    s.webkitTransform = e, s.transform = e;
  }

  return this;
}

function transition(e) {
  "string" != typeof e && (e = "".concat(e, "ms"));

  for (var _t5 = 0; _t5 < this.length; _t5 += 1) {
    var s = this[_t5].style;
    s.webkitTransitionDuration = e, s.transitionDuration = e;
  }

  return this;
}

function on() {
  var _e6, _e7;

  for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
    e[_key] = arguments[_key];
  }

  var t = e[0],
      s = e[1],
      i = e[2],
      a = e[3];

  function n(e) {
    var t = e.target;
    if (!t) return;
    var a = e.target.dom7EventData || [];
    if (a.indexOf(e) < 0 && a.unshift(e), $(t).is(s)) i.apply(t, a);else {
      var _e5 = $(t).parents();

      for (var _t6 = 0; _t6 < _e5.length; _t6 += 1) {
        $(_e5[_t6]).is(s) && i.apply(_e5[_t6], a);
      }
    }
  }

  function r(e) {
    var t = e && e.target && e.target.dom7EventData || [];
    t.indexOf(e) < 0 && t.unshift(e), i.apply(this, t);
  }

  "function" == typeof e[1] && ((_e6 = e, _e7 = _slicedToArray(_e6, 3), t = _e7[0], i = _e7[1], a = _e7[2], _e6), s = void 0), a || (a = !1);
  var l = t.split(" ");
  var o;

  for (var _e8 = 0; _e8 < this.length; _e8 += 1) {
    var _t7 = this[_e8];
    if (s) for (o = 0; o < l.length; o += 1) {
      var _e9 = l[o];
      _t7.dom7LiveListeners || (_t7.dom7LiveListeners = {}), _t7.dom7LiveListeners[_e9] || (_t7.dom7LiveListeners[_e9] = []), _t7.dom7LiveListeners[_e9].push({
        listener: i,
        proxyListener: n
      }), _t7.addEventListener(_e9, n, a);
    } else for (o = 0; o < l.length; o += 1) {
      var _e10 = l[o];
      _t7.dom7Listeners || (_t7.dom7Listeners = {}), _t7.dom7Listeners[_e10] || (_t7.dom7Listeners[_e10] = []), _t7.dom7Listeners[_e10].push({
        listener: i,
        proxyListener: r
      }), _t7.addEventListener(_e10, r, a);
    }
  }

  return this;
}

function off() {
  var _e11, _e12;

  for (var _len2 = arguments.length, e = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    e[_key2] = arguments[_key2];
  }

  var t = e[0],
      s = e[1],
      i = e[2],
      a = e[3];
  "function" == typeof e[1] && ((_e11 = e, _e12 = _slicedToArray(_e11, 3), t = _e12[0], i = _e12[1], a = _e12[2], _e11), s = void 0), a || (a = !1);
  var n = t.split(" ");

  for (var _e13 = 0; _e13 < n.length; _e13 += 1) {
    var _t8 = n[_e13];

    for (var _e14 = 0; _e14 < this.length; _e14 += 1) {
      var _n2 = this[_e14];
      var r = void 0;
      if (!s && _n2.dom7Listeners ? r = _n2.dom7Listeners[_t8] : s && _n2.dom7LiveListeners && (r = _n2.dom7LiveListeners[_t8]), r && r.length) for (var _e15 = r.length - 1; _e15 >= 0; _e15 -= 1) {
        var _s2 = r[_e15];
        i && _s2.listener === i ? (_n2.removeEventListener(_t8, _s2.proxyListener, a), r.splice(_e15, 1)) : i && _s2.listener && _s2.listener.dom7proxy && _s2.listener.dom7proxy === i ? (_n2.removeEventListener(_t8, _s2.proxyListener, a), r.splice(_e15, 1)) : i || (_n2.removeEventListener(_t8, _s2.proxyListener, a), r.splice(_e15, 1));
      }
    }
  }

  return this;
}

function trigger() {
  for (var _len3 = arguments.length, e = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    e[_key3] = arguments[_key3];
  }

  var t = e[0].split(" "),
      s = e[1];

  for (var i = 0; i < t.length; i += 1) {
    var a = t[i];

    for (var _t9 = 0; _t9 < this.length; _t9 += 1) {
      var _i2 = this[_t9];
      var n = void 0;

      try {
        n = new win.CustomEvent(a, {
          detail: s,
          bubbles: !0,
          cancelable: !0
        });
      } catch (e) {
        (n = doc.createEvent("Event")).initEvent(a, !0, !0), n.detail = s;
      }

      _i2.dom7EventData = e.filter(function (e, t) {
        return t > 0;
      }), _i2.dispatchEvent(n), _i2.dom7EventData = [], delete _i2.dom7EventData;
    }
  }

  return this;
}

function transitionEnd(e) {
  var t = ["webkitTransitionEnd", "transitionend"],
      s = this;
  var i;

  function a(n) {
    if (n.target === this) for (e.call(this, n), i = 0; i < t.length; i += 1) {
      s.off(t[i], a);
    }
  }

  if (e) for (i = 0; i < t.length; i += 1) {
    s.on(t[i], a);
  }
  return this;
}

function outerWidth(e) {
  if (this.length > 0) {
    if (e) {
      var _e16 = this.styles();

      return this[0].offsetWidth + parseFloat(_e16.getPropertyValue("margin-right")) + parseFloat(_e16.getPropertyValue("margin-left"));
    }

    return this[0].offsetWidth;
  }

  return null;
}

function outerHeight(e) {
  if (this.length > 0) {
    if (e) {
      var _e17 = this.styles();

      return this[0].offsetHeight + parseFloat(_e17.getPropertyValue("margin-top")) + parseFloat(_e17.getPropertyValue("margin-bottom"));
    }

    return this[0].offsetHeight;
  }

  return null;
}

function offset() {
  if (this.length > 0) {
    var e = this[0],
        _t10 = e.getBoundingClientRect(),
        s = doc.body,
        i = e.clientTop || s.clientTop || 0,
        a = e.clientLeft || s.clientLeft || 0,
        n = e === win ? win.scrollY : e.scrollTop,
        r = e === win ? win.scrollX : e.scrollLeft;

    return {
      top: _t10.top + n - i,
      left: _t10.left + r - a
    };
  }

  return null;
}

function styles() {
  return this[0] ? win.getComputedStyle(this[0], null) : {};
}

function css(e, t) {
  var s;

  if (1 === arguments.length) {
    if ("string" != typeof e) {
      for (s = 0; s < this.length; s += 1) {
        for (var _t11 in e) {
          this[s].style[_t11] = e[_t11];
        }
      }

      return this;
    }

    if (this[0]) return win.getComputedStyle(this[0], null).getPropertyValue(e);
  }

  if (2 === arguments.length && "string" == typeof e) {
    for (s = 0; s < this.length; s += 1) {
      this[s].style[e] = t;
    }

    return this;
  }

  return this;
}

function each(e) {
  if (!e) return this;

  for (var _t12 = 0; _t12 < this.length; _t12 += 1) {
    if (!1 === e.call(this[_t12], _t12, this[_t12])) return this;
  }

  return this;
}

function filter(e) {
  var t = [],
      s = this;

  for (var i = 0; i < s.length; i += 1) {
    e.call(s[i], i, s[i]) && t.push(s[i]);
  }

  return new Dom7(t);
}

function html(e) {
  if (void 0 === e) return this[0] ? this[0].innerHTML : void 0;

  for (var _t13 = 0; _t13 < this.length; _t13 += 1) {
    this[_t13].innerHTML = e;
  }

  return this;
}

function text(e) {
  if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;

  for (var _t14 = 0; _t14 < this.length; _t14 += 1) {
    this[_t14].textContent = e;
  }

  return this;
}

function is(e) {
  var t = this[0];
  var s, i;
  if (!t || void 0 === e) return !1;

  if ("string" == typeof e) {
    if (t.matches) return t.matches(e);
    if (t.webkitMatchesSelector) return t.webkitMatchesSelector(e);
    if (t.msMatchesSelector) return t.msMatchesSelector(e);

    for (s = $(e), i = 0; i < s.length; i += 1) {
      if (s[i] === t) return !0;
    }

    return !1;
  }

  if (e === doc) return t === doc;
  if (e === win) return t === win;

  if (e.nodeType || e instanceof Dom7) {
    for (s = e.nodeType ? [e] : e, i = 0; i < s.length; i += 1) {
      if (s[i] === t) return !0;
    }

    return !1;
  }

  return !1;
}

function index() {
  var e,
      t = this[0];

  if (t) {
    for (e = 0; null !== (t = t.previousSibling);) {
      1 === t.nodeType && (e += 1);
    }

    return e;
  }
}

function eq(e) {
  if (void 0 === e) return this;
  var t = this.length;
  var s;
  return new Dom7(e > t - 1 ? [] : e < 0 ? (s = t + e) < 0 ? [] : [this[s]] : [this[e]]);
}

function append() {
  var t;

  for (var s = 0; s < arguments.length; s += 1) {
    t = s < 0 || arguments.length <= s ? undefined : arguments[s];

    for (var e = 0; e < this.length; e += 1) {
      if ("string" == typeof t) {
        var _s3 = doc.createElement("div");

        for (_s3.innerHTML = t; _s3.firstChild;) {
          this[e].appendChild(_s3.firstChild);
        }
      } else if (t instanceof Dom7) for (var _s4 = 0; _s4 < t.length; _s4 += 1) {
        this[e].appendChild(t[_s4]);
      } else this[e].appendChild(t);
    }
  }

  return this;
}

function prepend(e) {
  var t, s;

  for (t = 0; t < this.length; t += 1) {
    if ("string" == typeof e) {
      var i = doc.createElement("div");

      for (i.innerHTML = e, s = i.childNodes.length - 1; s >= 0; s -= 1) {
        this[t].insertBefore(i.childNodes[s], this[t].childNodes[0]);
      }
    } else if (e instanceof Dom7) for (s = 0; s < e.length; s += 1) {
      this[t].insertBefore(e[s], this[t].childNodes[0]);
    } else this[t].insertBefore(e, this[t].childNodes[0]);
  }

  return this;
}

function next(e) {
  return this.length > 0 ? e ? this[0].nextElementSibling && $(this[0].nextElementSibling).is(e) ? new Dom7([this[0].nextElementSibling]) : new Dom7([]) : this[0].nextElementSibling ? new Dom7([this[0].nextElementSibling]) : new Dom7([]) : new Dom7([]);
}

function nextAll(e) {
  var t = [];
  var s = this[0];
  if (!s) return new Dom7([]);

  for (; s.nextElementSibling;) {
    var i = s.nextElementSibling;
    e ? $(i).is(e) && t.push(i) : t.push(i), s = i;
  }

  return new Dom7(t);
}

function prev(e) {
  if (this.length > 0) {
    var _t15 = this[0];
    return e ? _t15.previousElementSibling && $(_t15.previousElementSibling).is(e) ? new Dom7([_t15.previousElementSibling]) : new Dom7([]) : _t15.previousElementSibling ? new Dom7([_t15.previousElementSibling]) : new Dom7([]);
  }

  return new Dom7([]);
}

function prevAll(e) {
  var t = [];
  var s = this[0];
  if (!s) return new Dom7([]);

  for (; s.previousElementSibling;) {
    var i = s.previousElementSibling;
    e ? $(i).is(e) && t.push(i) : t.push(i), s = i;
  }

  return new Dom7(t);
}

function parent(e) {
  var t = [];

  for (var s = 0; s < this.length; s += 1) {
    null !== this[s].parentNode && (e ? $(this[s].parentNode).is(e) && t.push(this[s].parentNode) : t.push(this[s].parentNode));
  }

  return $(unique(t));
}

function parents(e) {
  var t = [];

  for (var s = 0; s < this.length; s += 1) {
    var i = this[s].parentNode;

    for (; i;) {
      e ? $(i).is(e) && t.push(i) : t.push(i), i = i.parentNode;
    }
  }

  return $(unique(t));
}

function closest(e) {
  var t = this;
  return void 0 === e ? new Dom7([]) : (t.is(e) || (t = t.parents(e).eq(0)), t);
}

function find(e) {
  var t = [];

  for (var s = 0; s < this.length; s += 1) {
    var i = this[s].querySelectorAll(e);

    for (var _e18 = 0; _e18 < i.length; _e18 += 1) {
      t.push(i[_e18]);
    }
  }

  return new Dom7(t);
}

function children(e) {
  var t = [];

  for (var s = 0; s < this.length; s += 1) {
    var i = this[s].childNodes;

    for (var _s5 = 0; _s5 < i.length; _s5 += 1) {
      e ? 1 === i[_s5].nodeType && $(i[_s5]).is(e) && t.push(i[_s5]) : 1 === i[_s5].nodeType && t.push(i[_s5]);
    }
  }

  return new Dom7(unique(t));
}

function remove() {
  for (var e = 0; e < this.length; e += 1) {
    this[e].parentNode && this[e].parentNode.removeChild(this[e]);
  }

  return this;
}

function add() {
  var t = this;
  var s, i;

  for (var _len4 = arguments.length, e = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    e[_key4] = arguments[_key4];
  }

  for (s = 0; s < e.length; s += 1) {
    var a = $(e[s]);

    for (i = 0; i < a.length; i += 1) {
      t[t.length] = a[i], t.length += 1;
    }
  }

  return t;
}

$.fn = Dom7.prototype, $.Class = Dom7, $.Dom7 = Dom7;
var Methods = {
  addClass: addClass,
  removeClass: removeClass,
  hasClass: hasClass,
  toggleClass: toggleClass,
  attr: attr,
  removeAttr: removeAttr,
  data: data,
  transform: transform,
  transition: transition,
  on: on,
  off: off,
  trigger: trigger,
  transitionEnd: transitionEnd,
  outerWidth: outerWidth,
  outerHeight: outerHeight,
  offset: offset,
  css: css,
  each: each,
  html: html,
  text: text,
  is: is,
  index: index,
  eq: eq,
  append: append,
  prepend: prepend,
  next: next,
  nextAll: nextAll,
  prev: prev,
  prevAll: prevAll,
  parent: parent,
  parents: parents,
  closest: closest,
  find: find,
  children: children,
  filter: filter,
  remove: remove,
  add: add,
  styles: styles
};
Object.keys(Methods).forEach(function (e) {
  $.fn[e] = $.fn[e] || Methods[e];
});
var Utils = {
  deleteProps: function deleteProps(e) {
    var t = e;
    Object.keys(t).forEach(function (e) {
      try {
        t[e] = null;
      } catch (e) {}

      try {
        delete t[e];
      } catch (e) {}
    });
  },
  nextTick: function nextTick(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return setTimeout(e, t);
  },
  now: function now() {
    return Date.now();
  },
  getTranslate: function getTranslate(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "x";
    var s, i, a;
    var n = win.getComputedStyle(e, null);
    return win.WebKitCSSMatrix ? ((i = n.transform || n.webkitTransform).split(",").length > 6 && (i = i.split(", ").map(function (e) {
      return e.replace(",", ".");
    }).join(", ")), a = new win.WebKitCSSMatrix("none" === i ? "" : i)) : s = (a = n.MozTransform || n.OTransform || n.MsTransform || n.msTransform || n.transform || n.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(","), "x" === t && (i = win.WebKitCSSMatrix ? a.m41 : 16 === s.length ? parseFloat(s[12]) : parseFloat(s[4])), "y" === t && (i = win.WebKitCSSMatrix ? a.m42 : 16 === s.length ? parseFloat(s[13]) : parseFloat(s[5])), i || 0;
  },
  parseUrlQuery: function parseUrlQuery(e) {
    var t = {};
    var s,
        i,
        a,
        n,
        r = e || win.location.href;
    if ("string" == typeof r && r.length) for (n = (i = (r = r.indexOf("?") > -1 ? r.replace(/\S*\?/, "") : "").split("&").filter(function (e) {
      return "" !== e;
    })).length, s = 0; s < n; s += 1) {
      a = i[s].replace(/#\S+/g, "").split("="), t[decodeURIComponent(a[0])] = void 0 === a[1] ? void 0 : decodeURIComponent(a[1]) || "";
    }
    return t;
  },
  isObject: function isObject(e) {
    return "object" == _typeof(e) && null !== e && e.constructor && e.constructor === Object;
  },
  extend: function extend() {
    var t = Object(arguments.length <= 0 ? undefined : arguments[0]);

    for (var s = 1; s < arguments.length; s += 1) {
      var i = s < 0 || arguments.length <= s ? undefined : arguments[s];

      if (null != i) {
        var e = Object.keys(Object(i));

        for (var _s6 = 0, a = e.length; _s6 < a; _s6 += 1) {
          var _a = e[_s6],
              n = Object.getOwnPropertyDescriptor(i, _a);
          void 0 !== n && n.enumerable && (Utils.isObject(t[_a]) && Utils.isObject(i[_a]) ? Utils.extend(t[_a], i[_a]) : !Utils.isObject(t[_a]) && Utils.isObject(i[_a]) ? (t[_a] = {}, Utils.extend(t[_a], i[_a])) : t[_a] = i[_a]);
        }
      }
    }

    return t;
  }
},
    Support = {
  touch: win.Modernizr && !0 === win.Modernizr.touch || !!(win.navigator.maxTouchPoints > 0 || "ontouchstart" in win || win.DocumentTouch && doc instanceof win.DocumentTouch),
  pointerEvents: !!win.PointerEvent && "maxTouchPoints" in win.navigator && win.navigator.maxTouchPoints > 0,
  observer: "MutationObserver" in win || "WebkitMutationObserver" in win,
  passiveListener: function () {
    var e = !1;

    try {
      var _t16 = Object.defineProperty({}, "passive", {
        get: function get() {
          e = !0;
        }
      });

      win.addEventListener("testPassiveListener", null, _t16);
    } catch (e) {}

    return e;
  }(),
  gestures: "ongesturestart" in win
};

var SwiperClass =
/*#__PURE__*/
function () {
  function SwiperClass() {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, SwiperClass);

    var t = this;
    t.params = e, t.eventsListeners = {}, t.params && t.params.on && Object.keys(t.params.on).forEach(function (e) {
      t.on(e, t.params.on[e]);
    });
  }

  _createClass(SwiperClass, [{
    key: "on",
    value: function on(e, t, s) {
      var i = this;
      if ("function" != typeof t) return i;
      var a = s ? "unshift" : "push";
      return e.split(" ").forEach(function (e) {
        i.eventsListeners[e] || (i.eventsListeners[e] = []), i.eventsListeners[e][a](t);
      }), i;
    }
  }, {
    key: "once",
    value: function once(e, t, s) {
      var i = this;
      if ("function" != typeof t) return i;

      function a() {
        for (var _len5 = arguments.length, s = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
          s[_key5] = arguments[_key5];
        }

        i.off(e, a), a.f7proxy && delete a.f7proxy, t.apply(i, s);
      }

      return a.f7proxy = t, i.on(e, a, s);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      var s = this;
      return s.eventsListeners ? (e.split(" ").forEach(function (e) {
        void 0 === t ? s.eventsListeners[e] = [] : s.eventsListeners[e] && s.eventsListeners[e].length && s.eventsListeners[e].forEach(function (i, a) {
          (i === t || i.f7proxy && i.f7proxy === t) && s.eventsListeners[e].splice(a, 1);
        });
      }), s) : s;
    }
  }, {
    key: "emit",
    value: function emit() {
      var t = this;
      if (!t.eventsListeners) return t;
      var s, i, a;

      for (var _len6 = arguments.length, e = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        e[_key6] = arguments[_key6];
      }

      return "string" == typeof e[0] || Array.isArray(e[0]) ? (s = e[0], i = e.slice(1, e.length), a = t) : (s = e[0].events, i = e[0].data, a = e[0].context || t), (Array.isArray(s) ? s : s.split(" ")).forEach(function (e) {
        if (t.eventsListeners && t.eventsListeners[e]) {
          var _s7 = [];
          t.eventsListeners[e].forEach(function (e) {
            _s7.push(e);
          }), _s7.forEach(function (e) {
            e.apply(a, i);
          });
        }
      }), t;
    }
  }, {
    key: "useModulesParams",
    value: function useModulesParams(e) {
      var t = this;
      t.modules && Object.keys(t.modules).forEach(function (s) {
        var i = t.modules[s];
        i.params && Utils.extend(e, i.params);
      });
    }
  }, {
    key: "useModules",
    value: function useModules() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = this;
      t.modules && Object.keys(t.modules).forEach(function (s) {
        var i = t.modules[s],
            a = e[s] || {};
        i.instance && Object.keys(i.instance).forEach(function (e) {
          var s = i.instance[e];
          t[e] = "function" == typeof s ? s.bind(t) : s;
        }), i.on && t.on && Object.keys(i.on).forEach(function (e) {
          t.on(e, i.on[e]);
        }), i.create && i.create.bind(t)(a);
      });
    }
  }], [{
    key: "installModule",
    value: function installModule(e) {
      var s = this;
      s.prototype.modules || (s.prototype.modules = {});
      var i = e.name || "".concat(Object.keys(s.prototype.modules).length, "_").concat(Utils.now());

      for (var _len7 = arguments.length, t = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
        t[_key7 - 1] = arguments[_key7];
      }

      return s.prototype.modules[i] = e, e.proto && Object.keys(e.proto).forEach(function (t) {
        s.prototype[t] = e.proto[t];
      }), e["static"] && Object.keys(e["static"]).forEach(function (t) {
        s[t] = e["static"][t];
      }), e.install && e.install.apply(s, t), s;
    }
  }, {
    key: "use",
    value: function use(e) {
      var s = this;

      for (var _len8 = arguments.length, t = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {
        t[_key8 - 1] = arguments[_key8];
      }

      return Array.isArray(e) ? (e.forEach(function (e) {
        return s.installModule(e);
      }), s) : s.installModule.apply(s, [e].concat(t));
    }
  }, {
    key: "components",
    set: function set(e) {
      this.use && this.use(e);
    }
  }]);

  return SwiperClass;
}();

function updateSize() {
  var e = this;
  var t, s;
  var i = e.$el;
  t = void 0 !== e.params.width ? e.params.width : i[0].clientWidth, s = void 0 !== e.params.height ? e.params.height : i[0].clientHeight, 0 === t && e.isHorizontal() || 0 === s && e.isVertical() || (t = t - parseInt(i.css("padding-left"), 10) - parseInt(i.css("padding-right"), 10), s = s - parseInt(i.css("padding-top"), 10) - parseInt(i.css("padding-bottom"), 10), Utils.extend(e, {
    width: t,
    height: s,
    size: e.isHorizontal() ? t : s
  }));
}

function updateSlides() {
  var e = this,
      t = e.params,
      s = e.$wrapperEl,
      i = e.size,
      a = e.rtlTranslate,
      n = e.wrongRTL,
      r = e.virtual && t.virtual.enabled,
      l = r ? e.virtual.slides.length : e.slides.length,
      o = s.children(".".concat(e.params.slideClass)),
      d = r ? e.virtual.slides.length : o.length;
  var p = [];
  var c = [],
      h = [];

  function u(e) {
    return !t.cssMode || e !== o.length - 1;
  }

  var m = t.slidesOffsetBefore;
  "function" == typeof m && (m = t.slidesOffsetBefore.call(e));
  var f = t.slidesOffsetAfter;
  "function" == typeof f && (f = t.slidesOffsetAfter.call(e));
  var g = e.snapGrid.length,
      v = e.snapGrid.length;
  var w,
      b,
      y = t.spaceBetween,
      x = -m,
      S = 0,
      T = 0;
  if (void 0 === i) return;
  "string" == typeof y && y.indexOf("%") >= 0 && (y = parseFloat(y.replace("%", "")) / 100 * i), e.virtualSize = -y, a ? o.css({
    marginLeft: "",
    marginTop: ""
  }) : o.css({
    marginRight: "",
    marginBottom: ""
  }), t.slidesPerColumn > 1 && (w = Math.floor(d / t.slidesPerColumn) === d / e.params.slidesPerColumn ? d : Math.ceil(d / t.slidesPerColumn) * t.slidesPerColumn, "auto" !== t.slidesPerView && "row" === t.slidesPerColumnFill && (w = Math.max(w, t.slidesPerView * t.slidesPerColumn)));
  var E = t.slidesPerColumn,
      C = w / E,
      $ = Math.floor(d / t.slidesPerColumn);

  for (var _s8 = 0; _s8 < d; _s8 += 1) {
    b = 0;

    var _a2 = o.eq(_s8);

    if (t.slidesPerColumn > 1) {
      var _i3 = void 0,
          _n3 = void 0,
          _r = void 0;

      if ("row" === t.slidesPerColumnFill && t.slidesPerGroup > 1) {
        var _e19 = Math.floor(_s8 / (t.slidesPerGroup * t.slidesPerColumn)),
            _l = _s8 - t.slidesPerColumn * t.slidesPerGroup * _e19,
            _o = 0 === _e19 ? t.slidesPerGroup : Math.min(Math.ceil((d - _e19 * E * t.slidesPerGroup) / E), t.slidesPerGroup);

        _i3 = (_n3 = _l - (_r = Math.floor(_l / _o)) * _o + _e19 * t.slidesPerGroup) + _r * w / E, _a2.css({
          "-webkit-box-ordinal-group": _i3,
          "-moz-box-ordinal-group": _i3,
          "-ms-flex-order": _i3,
          "-webkit-order": _i3,
          order: _i3
        });
      } else "column" === t.slidesPerColumnFill ? (_r = _s8 - (_n3 = Math.floor(_s8 / E)) * E, (_n3 > $ || _n3 === $ && _r === E - 1) && (_r += 1) >= E && (_r = 0, _n3 += 1)) : _n3 = _s8 - (_r = Math.floor(_s8 / C)) * C;

      _a2.css("margin-".concat(e.isHorizontal() ? "top" : "left"), 0 !== _r && t.spaceBetween && "".concat(t.spaceBetween, "px"));
    }

    if ("none" !== _a2.css("display")) {
      if ("auto" === t.slidesPerView) {
        var _s9 = win.getComputedStyle(_a2[0], null),
            _i4 = _a2[0].style.transform,
            _n4 = _a2[0].style.webkitTransform;

        if (_i4 && (_a2[0].style.transform = "none"), _n4 && (_a2[0].style.webkitTransform = "none"), t.roundLengths) b = e.isHorizontal() ? _a2.outerWidth(!0) : _a2.outerHeight(!0);else if (e.isHorizontal()) {
          var _e20 = parseFloat(_s9.getPropertyValue("width")),
              _t17 = parseFloat(_s9.getPropertyValue("padding-left")),
              _i5 = parseFloat(_s9.getPropertyValue("padding-right")),
              _a3 = parseFloat(_s9.getPropertyValue("margin-left")),
              _n5 = parseFloat(_s9.getPropertyValue("margin-right")),
              _r2 = _s9.getPropertyValue("box-sizing");

          b = _r2 && "border-box" === _r2 ? _e20 + _a3 + _n5 : _e20 + _t17 + _i5 + _a3 + _n5;
        } else {
          var _e21 = parseFloat(_s9.getPropertyValue("height")),
              _t18 = parseFloat(_s9.getPropertyValue("padding-top")),
              _i6 = parseFloat(_s9.getPropertyValue("padding-bottom")),
              _a4 = parseFloat(_s9.getPropertyValue("margin-top")),
              _n6 = parseFloat(_s9.getPropertyValue("margin-bottom")),
              _r3 = _s9.getPropertyValue("box-sizing");

          b = _r3 && "border-box" === _r3 ? _e21 + _a4 + _n6 : _e21 + _t18 + _i6 + _a4 + _n6;
        }
        _i4 && (_a2[0].style.transform = _i4), _n4 && (_a2[0].style.webkitTransform = _n4), t.roundLengths && (b = Math.floor(b));
      } else b = (i - (t.slidesPerView - 1) * y) / t.slidesPerView, t.roundLengths && (b = Math.floor(b)), o[_s8] && (e.isHorizontal() ? o[_s8].style.width = "".concat(b, "px") : o[_s8].style.height = "".concat(b, "px"));

      o[_s8] && (o[_s8].swiperSlideSize = b), h.push(b), t.centeredSlides ? (x = x + b / 2 + S / 2 + y, 0 === S && 0 !== _s8 && (x = x - i / 2 - y), 0 === _s8 && (x = x - i / 2 - y), Math.abs(x) < .001 && (x = 0), t.roundLengths && (x = Math.floor(x)), T % t.slidesPerGroup == 0 && p.push(x), c.push(x)) : (t.roundLengths && (x = Math.floor(x)), (T - Math.min(e.params.slidesPerGroupSkip, T)) % e.params.slidesPerGroup == 0 && p.push(x), c.push(x), x = x + b + y), e.virtualSize += b + y, S = b, T += 1;
    }
  }

  var M;

  if (e.virtualSize = Math.max(e.virtualSize, i) + f, a && n && ("slide" === t.effect || "coverflow" === t.effect) && s.css({
    width: "".concat(e.virtualSize + t.spaceBetween, "px")
  }), t.setWrapperSize && (e.isHorizontal() ? s.css({
    width: "".concat(e.virtualSize + t.spaceBetween, "px")
  }) : s.css({
    height: "".concat(e.virtualSize + t.spaceBetween, "px")
  })), t.slidesPerColumn > 1 && (e.virtualSize = (b + t.spaceBetween) * w, e.virtualSize = Math.ceil(e.virtualSize / t.slidesPerColumn) - t.spaceBetween, e.isHorizontal() ? s.css({
    width: "".concat(e.virtualSize + t.spaceBetween, "px")
  }) : s.css({
    height: "".concat(e.virtualSize + t.spaceBetween, "px")
  }), t.centeredSlides)) {
    M = [];

    for (var _s10 = 0; _s10 < p.length; _s10 += 1) {
      var _i7 = p[_s10];
      t.roundLengths && (_i7 = Math.floor(_i7)), p[_s10] < e.virtualSize + p[0] && M.push(_i7);
    }

    p = M;
  }

  if (!t.centeredSlides) {
    M = [];

    for (var _s11 = 0; _s11 < p.length; _s11 += 1) {
      var _a5 = p[_s11];
      t.roundLengths && (_a5 = Math.floor(_a5)), p[_s11] <= e.virtualSize - i && M.push(_a5);
    }

    p = M, Math.floor(e.virtualSize - i) - Math.floor(p[p.length - 1]) > 1 && p.push(e.virtualSize - i);
  }

  if (0 === p.length && (p = [0]), 0 !== t.spaceBetween && (e.isHorizontal() ? a ? o.filter(u).css({
    marginLeft: "".concat(y, "px")
  }) : o.filter(u).css({
    marginRight: "".concat(y, "px")
  }) : o.filter(u).css({
    marginBottom: "".concat(y, "px")
  })), t.centeredSlides && t.centeredSlidesBounds) {
    var _e22 = 0;
    h.forEach(function (s) {
      _e22 += s + (t.spaceBetween ? t.spaceBetween : 0);
    });

    var _s12 = (_e22 -= t.spaceBetween) - i;

    p = p.map(function (e) {
      return e < 0 ? -m : e > _s12 ? _s12 + f : e;
    });
  }

  if (t.centerInsufficientSlides) {
    var _e23 = 0;

    if (h.forEach(function (s) {
      _e23 += s + (t.spaceBetween ? t.spaceBetween : 0);
    }), (_e23 -= t.spaceBetween) < i) {
      var _t19 = (i - _e23) / 2;

      p.forEach(function (e, s) {
        p[s] = e - _t19;
      }), c.forEach(function (e, s) {
        c[s] = e + _t19;
      });
    }
  }

  Utils.extend(e, {
    slides: o,
    snapGrid: p,
    slidesGrid: c,
    slidesSizesGrid: h
  }), d !== l && e.emit("slidesLengthChange"), p.length !== g && (e.params.watchOverflow && e.checkOverflow(), e.emit("snapGridLengthChange")), c.length !== v && e.emit("slidesGridLengthChange"), (t.watchSlidesProgress || t.watchSlidesVisibility) && e.updateSlidesOffset();
}

function updateAutoHeight(e) {
  var t = this,
      s = [];
  var i,
      a = 0;
  if ("number" == typeof e ? t.setTransition(e) : !0 === e && t.setTransition(t.params.speed), "auto" !== t.params.slidesPerView && t.params.slidesPerView > 1) for (i = 0; i < Math.ceil(t.params.slidesPerView); i += 1) {
    var _e24 = t.activeIndex + i;

    if (_e24 > t.slides.length) break;
    s.push(t.slides.eq(_e24)[0]);
  } else s.push(t.slides.eq(t.activeIndex)[0]);

  for (i = 0; i < s.length; i += 1) {
    if (void 0 !== s[i]) {
      var _e25 = s[i].offsetHeight;
      a = _e25 > a ? _e25 : a;
    }
  }

  a && t.$wrapperEl.css("height", "".concat(a, "px"));
}

function updateSlidesOffset() {
  var e = this,
      t = e.slides;

  for (var s = 0; s < t.length; s += 1) {
    t[s].swiperSlideOffset = e.isHorizontal() ? t[s].offsetLeft : t[s].offsetTop;
  }
}

function updateSlidesProgress() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this && this.translate || 0;
  var t = this,
      s = t.params,
      i = t.slides,
      a = t.rtlTranslate;
  if (0 === i.length) return;
  void 0 === i[0].swiperSlideOffset && t.updateSlidesOffset();
  var n = -e;
  a && (n = e), i.removeClass(s.slideVisibleClass), t.visibleSlidesIndexes = [], t.visibleSlides = [];

  for (var _e26 = 0; _e26 < i.length; _e26 += 1) {
    var r = i[_e26],
        l = (n + (s.centeredSlides ? t.minTranslate() : 0) - r.swiperSlideOffset) / (r.swiperSlideSize + s.spaceBetween);

    if (s.watchSlidesVisibility) {
      var _a6 = -(n - r.swiperSlideOffset),
          _l2 = _a6 + t.slidesSizesGrid[_e26];

      (_a6 >= 0 && _a6 < t.size - 1 || _l2 > 1 && _l2 <= t.size || _a6 <= 0 && _l2 >= t.size) && (t.visibleSlides.push(r), t.visibleSlidesIndexes.push(_e26), i.eq(_e26).addClass(s.slideVisibleClass));
    }

    r.progress = a ? -l : l;
  }

  t.visibleSlides = $(t.visibleSlides);
}

function updateProgress(e) {
  var t = this;

  if (void 0 === e) {
    var _s13 = t.rtlTranslate ? -1 : 1;

    e = t && t.translate && t.translate * _s13 || 0;
  }

  var s = t.params,
      i = t.maxTranslate() - t.minTranslate();
  var a = t.progress,
      n = t.isBeginning,
      r = t.isEnd;
  var l = n,
      o = r;
  0 === i ? (a = 0, n = !0, r = !0) : (n = (a = (e - t.minTranslate()) / i) <= 0, r = a >= 1), Utils.extend(t, {
    progress: a,
    isBeginning: n,
    isEnd: r
  }), (s.watchSlidesProgress || s.watchSlidesVisibility) && t.updateSlidesProgress(e), n && !l && t.emit("reachBeginning toEdge"), r && !o && t.emit("reachEnd toEdge"), (l && !n || o && !r) && t.emit("fromEdge"), t.emit("progress", a);
}

function updateSlidesClasses() {
  var e = this,
      t = e.slides,
      s = e.params,
      i = e.$wrapperEl,
      a = e.activeIndex,
      n = e.realIndex,
      r = e.virtual && s.virtual.enabled;
  var l;
  t.removeClass("".concat(s.slideActiveClass, " ").concat(s.slideNextClass, " ").concat(s.slidePrevClass, " ").concat(s.slideDuplicateActiveClass, " ").concat(s.slideDuplicateNextClass, " ").concat(s.slideDuplicatePrevClass)), (l = r ? e.$wrapperEl.find(".".concat(s.slideClass, "[data-swiper-slide-index=\"").concat(a, "\"]")) : t.eq(a)).addClass(s.slideActiveClass), s.loop && (l.hasClass(s.slideDuplicateClass) ? i.children(".".concat(s.slideClass, ":not(.").concat(s.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(n, "\"]")).addClass(s.slideDuplicateActiveClass) : i.children(".".concat(s.slideClass, ".").concat(s.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(n, "\"]")).addClass(s.slideDuplicateActiveClass));
  var o = l.nextAll(".".concat(s.slideClass)).eq(0).addClass(s.slideNextClass);
  s.loop && 0 === o.length && (o = t.eq(0)).addClass(s.slideNextClass);
  var d = l.prevAll(".".concat(s.slideClass)).eq(0).addClass(s.slidePrevClass);
  s.loop && 0 === d.length && (d = t.eq(-1)).addClass(s.slidePrevClass), s.loop && (o.hasClass(s.slideDuplicateClass) ? i.children(".".concat(s.slideClass, ":not(.").concat(s.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(o.attr("data-swiper-slide-index"), "\"]")).addClass(s.slideDuplicateNextClass) : i.children(".".concat(s.slideClass, ".").concat(s.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(o.attr("data-swiper-slide-index"), "\"]")).addClass(s.slideDuplicateNextClass), d.hasClass(s.slideDuplicateClass) ? i.children(".".concat(s.slideClass, ":not(.").concat(s.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(d.attr("data-swiper-slide-index"), "\"]")).addClass(s.slideDuplicatePrevClass) : i.children(".".concat(s.slideClass, ".").concat(s.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(d.attr("data-swiper-slide-index"), "\"]")).addClass(s.slideDuplicatePrevClass));
}

function updateActiveIndex(e) {
  var t = this,
      s = t.rtlTranslate ? t.translate : -t.translate,
      i = t.slidesGrid,
      a = t.snapGrid,
      n = t.params,
      r = t.activeIndex,
      l = t.realIndex,
      o = t.snapIndex;
  var d,
      p = e;

  if (void 0 === p) {
    for (var _e27 = 0; _e27 < i.length; _e27 += 1) {
      void 0 !== i[_e27 + 1] ? s >= i[_e27] && s < i[_e27 + 1] - (i[_e27 + 1] - i[_e27]) / 2 ? p = _e27 : s >= i[_e27] && s < i[_e27 + 1] && (p = _e27 + 1) : s >= i[_e27] && (p = _e27);
    }

    n.normalizeSlideIndex && (p < 0 || void 0 === p) && (p = 0);
  }

  if (a.indexOf(s) >= 0) d = a.indexOf(s);else {
    var _e28 = Math.min(n.slidesPerGroupSkip, p);

    d = _e28 + Math.floor((p - _e28) / n.slidesPerGroup);
  }
  if (d >= a.length && (d = a.length - 1), p === r) return void (d !== o && (t.snapIndex = d, t.emit("snapIndexChange")));
  var c = parseInt(t.slides.eq(p).attr("data-swiper-slide-index") || p, 10);
  Utils.extend(t, {
    snapIndex: d,
    realIndex: c,
    previousIndex: r,
    activeIndex: p
  }), t.emit("activeIndexChange"), t.emit("snapIndexChange"), l !== c && t.emit("realIndexChange"), (t.initialized || t.runCallbacksOnInit) && t.emit("slideChange");
}

function updateClickedSlide(e) {
  var t = this,
      s = t.params,
      i = $(e.target).closest(".".concat(s.slideClass))[0];
  var a = !1;
  if (i) for (var _e29 = 0; _e29 < t.slides.length; _e29 += 1) {
    t.slides[_e29] === i && (a = !0);
  }
  if (!i || !a) return t.clickedSlide = void 0, void (t.clickedIndex = void 0);
  t.clickedSlide = i, t.virtual && t.params.virtual.enabled ? t.clickedIndex = parseInt($(i).attr("data-swiper-slide-index"), 10) : t.clickedIndex = $(i).index(), s.slideToClickedSlide && void 0 !== t.clickedIndex && t.clickedIndex !== t.activeIndex && t.slideToClickedSlide();
}

var update = {
  updateSize: updateSize,
  updateSlides: updateSlides,
  updateAutoHeight: updateAutoHeight,
  updateSlidesOffset: updateSlidesOffset,
  updateSlidesProgress: updateSlidesProgress,
  updateProgress: updateProgress,
  updateSlidesClasses: updateSlidesClasses,
  updateActiveIndex: updateActiveIndex,
  updateClickedSlide: updateClickedSlide
};

function getTranslate() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.isHorizontal() ? "x" : "y";
  var t = this.params,
      s = this.rtlTranslate,
      i = this.translate,
      a = this.$wrapperEl;
  if (t.virtualTranslate) return s ? -i : i;
  if (t.cssMode) return i;
  var n = Utils.getTranslate(a[0], e);
  return s && (n = -n), n || 0;
}

function setTranslate(e, t) {
  var s = this,
      i = s.rtlTranslate,
      a = s.params,
      n = s.$wrapperEl,
      r = s.wrapperEl,
      l = s.progress;
  var o = 0,
      d = 0;
  var p;
  s.isHorizontal() ? o = i ? -e : e : d = e, a.roundLengths && (o = Math.floor(o), d = Math.floor(d)), a.cssMode ? r[s.isHorizontal() ? "scrollLeft" : "scrollTop"] = s.isHorizontal() ? -o : -d : a.virtualTranslate || n.transform("translate3d(".concat(o, "px, ").concat(d, "px, 0px)")), s.previousTranslate = s.translate, s.translate = s.isHorizontal() ? o : d;
  var c = s.maxTranslate() - s.minTranslate();
  (p = 0 === c ? 0 : (e - s.minTranslate()) / c) !== l && s.updateProgress(e), s.emit("setTranslate", s.translate, t);
}

function minTranslate() {
  return -this.snapGrid[0];
}

function maxTranslate() {
  return -this.snapGrid[this.snapGrid.length - 1];
}

function translateTo() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
  var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
  var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;
  var a = arguments.length > 4 ? arguments[4] : undefined;
  var n = this,
      r = n.params,
      l = n.wrapperEl;
  if (n.animating && r.preventInteractionOnTransition) return !1;
  var o = n.minTranslate(),
      d = n.maxTranslate();
  var p;

  if (p = i && e > o ? o : i && e < d ? d : e, n.updateProgress(p), r.cssMode) {
    var _l$scrollTo;

    var _e30 = n.isHorizontal();

    return 0 === t ? l[_e30 ? "scrollLeft" : "scrollTop"] = -p : l.scrollTo ? l.scrollTo((_l$scrollTo = {}, _defineProperty(_l$scrollTo, _e30 ? "left" : "top", -p), _defineProperty(_l$scrollTo, "behavior", "smooth"), _l$scrollTo)) : l[_e30 ? "scrollLeft" : "scrollTop"] = -p, !0;
  }

  return 0 === t ? (n.setTransition(0), n.setTranslate(p), s && (n.emit("beforeTransitionStart", t, a), n.emit("transitionEnd"))) : (n.setTransition(t), n.setTranslate(p), s && (n.emit("beforeTransitionStart", t, a), n.emit("transitionStart")), n.animating || (n.animating = !0, n.onTranslateToWrapperTransitionEnd || (n.onTranslateToWrapperTransitionEnd = function (e) {
    n && !n.destroyed && e.target === this && (n.$wrapperEl[0].removeEventListener("transitionend", n.onTranslateToWrapperTransitionEnd), n.$wrapperEl[0].removeEventListener("webkitTransitionEnd", n.onTranslateToWrapperTransitionEnd), n.onTranslateToWrapperTransitionEnd = null, delete n.onTranslateToWrapperTransitionEnd, s && n.emit("transitionEnd"));
  }), n.$wrapperEl[0].addEventListener("transitionend", n.onTranslateToWrapperTransitionEnd), n.$wrapperEl[0].addEventListener("webkitTransitionEnd", n.onTranslateToWrapperTransitionEnd))), !0;
}

var translate = {
  getTranslate: getTranslate,
  setTranslate: setTranslate,
  minTranslate: minTranslate,
  maxTranslate: maxTranslate,
  translateTo: translateTo
};

function setTransition(e, t) {
  var s = this;
  s.params.cssMode || s.$wrapperEl.transition(e), s.emit("setTransition", e, t);
}

function transitionStart() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
  var t = arguments.length > 1 ? arguments[1] : undefined;
  var s = this,
      i = s.activeIndex,
      a = s.params,
      n = s.previousIndex;
  if (a.cssMode) return;
  a.autoHeight && s.updateAutoHeight();
  var r = t;

  if (r || (r = i > n ? "next" : i < n ? "prev" : "reset"), s.emit("transitionStart"), e && i !== n) {
    if ("reset" === r) return void s.emit("slideResetTransitionStart");
    s.emit("slideChangeTransitionStart"), "next" === r ? s.emit("slideNextTransitionStart") : s.emit("slidePrevTransitionStart");
  }
}

function transitionEnd$1() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
  var t = arguments.length > 1 ? arguments[1] : undefined;
  var s = this,
      i = s.activeIndex,
      a = s.previousIndex,
      n = s.params;
  if (s.animating = !1, n.cssMode) return;
  s.setTransition(0);
  var r = t;

  if (r || (r = i > a ? "next" : i < a ? "prev" : "reset"), s.emit("transitionEnd"), e && i !== a) {
    if ("reset" === r) return void s.emit("slideResetTransitionEnd");
    s.emit("slideChangeTransitionEnd"), "next" === r ? s.emit("slideNextTransitionEnd") : s.emit("slidePrevTransitionEnd");
  }
}

var transition$1 = {
  setTransition: setTransition,
  transitionStart: transitionStart,
  transitionEnd: transitionEnd$1
};

function slideTo() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
  var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
  var i = arguments.length > 3 ? arguments[3] : undefined;
  var a = this;
  var n = e;
  n < 0 && (n = 0);
  var r = a.params,
      l = a.snapGrid,
      o = a.slidesGrid,
      d = a.previousIndex,
      p = a.activeIndex,
      c = a.rtlTranslate,
      h = a.wrapperEl;
  if (a.animating && r.preventInteractionOnTransition) return !1;
  var u = Math.min(a.params.slidesPerGroupSkip, n);
  var m = u + Math.floor((n - u) / a.params.slidesPerGroup);
  m >= o.length && (m = o.length - 1), (p || r.initialSlide || 0) === (d || 0) && s && a.emit("beforeSlideChangeStart");
  var f = -l[m];
  if (a.updateProgress(f), r.normalizeSlideIndex) for (var _e31 = 0; _e31 < o.length; _e31 += 1) {
    -Math.floor(100 * f) >= Math.floor(100 * o[_e31]) && (n = _e31);
  }

  if (a.initialized && n !== p) {
    if (!a.allowSlideNext && f < a.translate && f < a.minTranslate()) return !1;
    if (!a.allowSlidePrev && f > a.translate && f > a.maxTranslate() && (p || 0) !== n) return !1;
  }

  var g;
  if (g = n > p ? "next" : n < p ? "prev" : "reset", c && -f === a.translate || !c && f === a.translate) return a.updateActiveIndex(n), r.autoHeight && a.updateAutoHeight(), a.updateSlidesClasses(), "slide" !== r.effect && a.setTranslate(f), "reset" !== g && (a.transitionStart(s, g), a.transitionEnd(s, g)), !1;

  if (r.cssMode) {
    var _h$scrollTo;

    var _e32 = a.isHorizontal();

    return 0 === t ? h[_e32 ? "scrollLeft" : "scrollTop"] = -f : h.scrollTo ? h.scrollTo((_h$scrollTo = {}, _defineProperty(_h$scrollTo, _e32 ? "left" : "top", -f), _defineProperty(_h$scrollTo, "behavior", "smooth"), _h$scrollTo)) : h[_e32 ? "scrollLeft" : "scrollTop"] = -f, !0;
  }

  return 0 === t ? (a.setTransition(0), a.setTranslate(f), a.updateActiveIndex(n), a.updateSlidesClasses(), a.emit("beforeTransitionStart", t, i), a.transitionStart(s, g), a.transitionEnd(s, g)) : (a.setTransition(t), a.setTranslate(f), a.updateActiveIndex(n), a.updateSlidesClasses(), a.emit("beforeTransitionStart", t, i), a.transitionStart(s, g), a.animating || (a.animating = !0, a.onSlideToWrapperTransitionEnd || (a.onSlideToWrapperTransitionEnd = function (e) {
    a && !a.destroyed && e.target === this && (a.$wrapperEl[0].removeEventListener("transitionend", a.onSlideToWrapperTransitionEnd), a.$wrapperEl[0].removeEventListener("webkitTransitionEnd", a.onSlideToWrapperTransitionEnd), a.onSlideToWrapperTransitionEnd = null, delete a.onSlideToWrapperTransitionEnd, a.transitionEnd(s, g));
  }), a.$wrapperEl[0].addEventListener("transitionend", a.onSlideToWrapperTransitionEnd), a.$wrapperEl[0].addEventListener("webkitTransitionEnd", a.onSlideToWrapperTransitionEnd))), !0;
}

function slideToLoop() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
  var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
  var i = arguments.length > 3 ? arguments[3] : undefined;
  var a = this;
  var n = e;
  return a.params.loop && (n += a.loopedSlides), a.slideTo(n, t, s, i);
}

function slideNext() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
  var s = arguments.length > 2 ? arguments[2] : undefined;
  var i = this,
      a = i.params,
      n = i.animating,
      r = i.activeIndex < a.slidesPerGroupSkip ? 1 : a.slidesPerGroup;

  if (a.loop) {
    if (n) return !1;
    i.loopFix(), i._clientLeft = i.$wrapperEl[0].clientLeft;
  }

  return i.slideTo(i.activeIndex + r, e, t, s);
}

function slidePrev() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
  var s = arguments.length > 2 ? arguments[2] : undefined;
  var i = this,
      a = i.params,
      n = i.animating,
      r = i.snapGrid,
      l = i.slidesGrid,
      o = i.rtlTranslate;

  if (a.loop) {
    if (n) return !1;
    i.loopFix(), i._clientLeft = i.$wrapperEl[0].clientLeft;
  }

  function d(e) {
    return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
  }

  var p = d(o ? i.translate : -i.translate),
      c = r.map(function (e) {
    return d(e);
  });
  l.map(function (e) {
    return d(e);
  }), r[c.indexOf(p)];
  var h,
      u = r[c.indexOf(p) - 1];
  return void 0 === u && a.cssMode && r.forEach(function (e) {
    !u && p >= e && (u = e);
  }), void 0 !== u && (h = l.indexOf(u)) < 0 && (h = i.activeIndex - 1), i.slideTo(h, e, t, s);
}

function slideReset() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
  var s = arguments.length > 2 ? arguments[2] : undefined;
  return this.slideTo(this.activeIndex, e, t, s);
}

function slideToClosest() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
  var s = arguments.length > 2 ? arguments[2] : undefined;
  var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : .5;
  var a = this;
  var n = a.activeIndex;
  var r = Math.min(a.params.slidesPerGroupSkip, n),
      l = r + Math.floor((n - r) / a.params.slidesPerGroup),
      o = a.rtlTranslate ? a.translate : -a.translate;

  if (o >= a.snapGrid[l]) {
    var _e33 = a.snapGrid[l];
    o - _e33 > (a.snapGrid[l + 1] - _e33) * i && (n += a.params.slidesPerGroup);
  } else {
    var _e34 = a.snapGrid[l - 1];
    o - _e34 <= (a.snapGrid[l] - _e34) * i && (n -= a.params.slidesPerGroup);
  }

  return n = Math.max(n, 0), n = Math.min(n, a.slidesGrid.length - 1), a.slideTo(n, e, t, s);
}

function slideToClickedSlide() {
  var e = this,
      t = e.params,
      s = e.$wrapperEl,
      i = "auto" === t.slidesPerView ? e.slidesPerViewDynamic() : t.slidesPerView;
  var a,
      n = e.clickedIndex;

  if (t.loop) {
    if (e.animating) return;
    a = parseInt($(e.clickedSlide).attr("data-swiper-slide-index"), 10), t.centeredSlides ? n < e.loopedSlides - i / 2 || n > e.slides.length - e.loopedSlides + i / 2 ? (e.loopFix(), n = s.children(".".concat(t.slideClass, "[data-swiper-slide-index=\"").concat(a, "\"]:not(.").concat(t.slideDuplicateClass, ")")).eq(0).index(), Utils.nextTick(function () {
      e.slideTo(n);
    })) : e.slideTo(n) : n > e.slides.length - i ? (e.loopFix(), n = s.children(".".concat(t.slideClass, "[data-swiper-slide-index=\"").concat(a, "\"]:not(.").concat(t.slideDuplicateClass, ")")).eq(0).index(), Utils.nextTick(function () {
      e.slideTo(n);
    })) : e.slideTo(n);
  } else e.slideTo(n);
}

var slide = {
  slideTo: slideTo,
  slideToLoop: slideToLoop,
  slideNext: slideNext,
  slidePrev: slidePrev,
  slideReset: slideReset,
  slideToClosest: slideToClosest,
  slideToClickedSlide: slideToClickedSlide
};

function loopCreate() {
  var e = this,
      t = e.params,
      s = e.$wrapperEl;
  s.children(".".concat(t.slideClass, ".").concat(t.slideDuplicateClass)).remove();
  var i = s.children(".".concat(t.slideClass));

  if (t.loopFillGroupWithBlank) {
    var _e35 = t.slidesPerGroup - i.length % t.slidesPerGroup;

    if (_e35 !== t.slidesPerGroup) {
      for (var _i8 = 0; _i8 < _e35; _i8 += 1) {
        var _e36 = $(doc.createElement("div")).addClass("".concat(t.slideClass, " ").concat(t.slideBlankClass));

        s.append(_e36);
      }

      i = s.children(".".concat(t.slideClass));
    }
  }

  "auto" !== t.slidesPerView || t.loopedSlides || (t.loopedSlides = i.length), e.loopedSlides = Math.ceil(parseFloat(t.loopedSlides || t.slidesPerView, 10)), e.loopedSlides += t.loopAdditionalSlides, e.loopedSlides > i.length && (e.loopedSlides = i.length);
  var a = [],
      n = [];
  i.each(function (t, s) {
    var r = $(s);
    t < e.loopedSlides && n.push(s), t < i.length && t >= i.length - e.loopedSlides && a.push(s), r.attr("data-swiper-slide-index", t);
  });

  for (var _e37 = 0; _e37 < n.length; _e37 += 1) {
    s.append($(n[_e37].cloneNode(!0)).addClass(t.slideDuplicateClass));
  }

  for (var _e38 = a.length - 1; _e38 >= 0; _e38 -= 1) {
    s.prepend($(a[_e38].cloneNode(!0)).addClass(t.slideDuplicateClass));
  }
}

function loopFix() {
  var e = this;
  e.emit("beforeLoopFix");
  var t = e.activeIndex,
      s = e.slides,
      i = e.loopedSlides,
      a = e.allowSlidePrev,
      n = e.allowSlideNext,
      r = e.snapGrid,
      l = e.rtlTranslate;
  var o;
  e.allowSlidePrev = !0, e.allowSlideNext = !0;
  var d = -r[t] - e.getTranslate();

  if (t < i) {
    o = s.length - 3 * i + t, o += i, e.slideTo(o, 0, !1, !0) && 0 !== d && e.setTranslate((l ? -e.translate : e.translate) - d);
  } else if (t >= s.length - i) {
    o = -s.length + t + i, o += i, e.slideTo(o, 0, !1, !0) && 0 !== d && e.setTranslate((l ? -e.translate : e.translate) - d);
  }

  e.allowSlidePrev = a, e.allowSlideNext = n, e.emit("loopFix");
}

function loopDestroy() {
  var e = this.$wrapperEl,
      t = this.params,
      s = this.slides;
  e.children(".".concat(t.slideClass, ".").concat(t.slideDuplicateClass, ",.").concat(t.slideClass, ".").concat(t.slideBlankClass)).remove(), s.removeAttr("data-swiper-slide-index");
}

var loop = {
  loopCreate: loopCreate,
  loopFix: loopFix,
  loopDestroy: loopDestroy
};

function setGrabCursor(e) {
  if (Support.touch || !this.params.simulateTouch || this.params.watchOverflow && this.isLocked || this.params.cssMode) return;
  var t = this.el;
  t.style.cursor = "move", t.style.cursor = e ? "-webkit-grabbing" : "-webkit-grab", t.style.cursor = e ? "-moz-grabbin" : "-moz-grab", t.style.cursor = e ? "grabbing" : "grab";
}

function unsetGrabCursor() {
  Support.touch || this.params.watchOverflow && this.isLocked || this.params.cssMode || (this.el.style.cursor = "");
}

var grabCursor = {
  setGrabCursor: setGrabCursor,
  unsetGrabCursor: unsetGrabCursor
};

function appendSlide(e) {
  var t = this,
      s = t.$wrapperEl,
      i = t.params;
  if (i.loop && t.loopDestroy(), "object" == _typeof(e) && "length" in e) for (var _t20 = 0; _t20 < e.length; _t20 += 1) {
    e[_t20] && s.append(e[_t20]);
  } else s.append(e);
  i.loop && t.loopCreate(), i.observer && Support.observer || t.update();
}

function prependSlide(e) {
  var t = this,
      s = t.params,
      i = t.$wrapperEl,
      a = t.activeIndex;
  s.loop && t.loopDestroy();
  var n = a + 1;

  if ("object" == _typeof(e) && "length" in e) {
    for (var _t21 = 0; _t21 < e.length; _t21 += 1) {
      e[_t21] && i.prepend(e[_t21]);
    }

    n = a + e.length;
  } else i.prepend(e);

  s.loop && t.loopCreate(), s.observer && Support.observer || t.update(), t.slideTo(n, 0, !1);
}

function addSlide(e, t) {
  var s = this,
      i = s.$wrapperEl,
      a = s.params,
      n = s.activeIndex;
  var r = n;
  a.loop && (r -= s.loopedSlides, s.loopDestroy(), s.slides = i.children(".".concat(a.slideClass)));
  var l = s.slides.length;
  if (e <= 0) return void s.prependSlide(t);
  if (e >= l) return void s.appendSlide(t);
  var o = r > e ? r + 1 : r;
  var d = [];

  for (var _t22 = l - 1; _t22 >= e; _t22 -= 1) {
    var _e39 = s.slides.eq(_t22);

    _e39.remove(), d.unshift(_e39);
  }

  if ("object" == _typeof(t) && "length" in t) {
    for (var _e40 = 0; _e40 < t.length; _e40 += 1) {
      t[_e40] && i.append(t[_e40]);
    }

    o = r > e ? r + t.length : r;
  } else i.append(t);

  for (var _e41 = 0; _e41 < d.length; _e41 += 1) {
    i.append(d[_e41]);
  }

  a.loop && s.loopCreate(), a.observer && Support.observer || s.update(), a.loop ? s.slideTo(o + s.loopedSlides, 0, !1) : s.slideTo(o, 0, !1);
}

function removeSlide(e) {
  var t = this,
      s = t.params,
      i = t.$wrapperEl,
      a = t.activeIndex;
  var n = a;
  s.loop && (n -= t.loopedSlides, t.loopDestroy(), t.slides = i.children(".".concat(s.slideClass)));
  var r,
      l = n;

  if ("object" == _typeof(e) && "length" in e) {
    for (var _s14 = 0; _s14 < e.length; _s14 += 1) {
      r = e[_s14], t.slides[r] && t.slides.eq(r).remove(), r < l && (l -= 1);
    }

    l = Math.max(l, 0);
  } else r = e, t.slides[r] && t.slides.eq(r).remove(), r < l && (l -= 1), l = Math.max(l, 0);

  s.loop && t.loopCreate(), s.observer && Support.observer || t.update(), s.loop ? t.slideTo(l + t.loopedSlides, 0, !1) : t.slideTo(l, 0, !1);
}

function removeAllSlides() {
  var e = this,
      t = [];

  for (var s = 0; s < e.slides.length; s += 1) {
    t.push(s);
  }

  e.removeSlide(t);
}

var manipulation = {
  appendSlide: appendSlide,
  prependSlide: prependSlide,
  addSlide: addSlide,
  removeSlide: removeSlide,
  removeAllSlides: removeAllSlides
};

var Device = function () {
  var e = win.navigator.platform,
      t = win.navigator.userAgent,
      s = {
    ios: !1,
    android: !1,
    androidChrome: !1,
    desktop: !1,
    iphone: !1,
    ipod: !1,
    ipad: !1,
    edge: !1,
    ie: !1,
    firefox: !1,
    macos: !1,
    windows: !1,
    cordova: !(!win.cordova && !win.phonegap),
    phonegap: !(!win.cordova && !win.phonegap),
    electron: !1
  },
      i = win.screen.width,
      a = win.screen.height,
      n = t.match(/(Android);?[\s\/]+([\d.]+)?/);
  var r = t.match(/(iPad).*OS\s([\d_]+)/);
  var l = t.match(/(iPod)(.*OS\s([\d_]+))?/),
      o = !r && t.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
      d = t.indexOf("MSIE ") >= 0 || t.indexOf("Trident/") >= 0,
      p = t.indexOf("Edge/") >= 0,
      c = t.indexOf("Gecko/") >= 0 && t.indexOf("Firefox/") >= 0,
      h = "Win32" === e,
      u = t.toLowerCase().indexOf("electron") >= 0;
  var m = "MacIntel" === e;
  return !r && m && Support.touch && (1024 === i && 1366 === a || 834 === i && 1194 === a || 834 === i && 1112 === a || 768 === i && 1024 === a) && (r = t.match(/(Version)\/([\d.]+)/), m = !1), s.ie = d, s.edge = p, s.firefox = c, n && !h && (s.os = "android", s.osVersion = n[2], s.android = !0, s.androidChrome = t.toLowerCase().indexOf("chrome") >= 0), (r || o || l) && (s.os = "ios", s.ios = !0), o && !l && (s.osVersion = o[2].replace(/_/g, "."), s.iphone = !0), r && (s.osVersion = r[2].replace(/_/g, "."), s.ipad = !0), l && (s.osVersion = l[3] ? l[3].replace(/_/g, ".") : null, s.ipod = !0), s.ios && s.osVersion && t.indexOf("Version/") >= 0 && "10" === s.osVersion.split(".")[0] && (s.osVersion = t.toLowerCase().split("version/")[1].split(" ")[0]), s.webView = !(!(o || r || l) || !t.match(/.*AppleWebKit(?!.*Safari)/i) && !win.navigator.standalone) || win.matchMedia && win.matchMedia("(display-mode: standalone)").matches, s.webview = s.webView, s.standalone = s.webView, s.desktop = !(s.ios || s.android) || u, s.desktop && (s.electron = u, s.macos = m, s.windows = h, s.macos && (s.os = "macos"), s.windows && (s.os = "windows")), s.pixelRatio = win.devicePixelRatio || 1, s;
}();

function onTouchStart(e) {
  var t = this,
      s = t.touchEventsData,
      i = t.params,
      a = t.touches;
  if (t.animating && i.preventInteractionOnTransition) return;
  var n = e;
  n.originalEvent && (n = n.originalEvent);
  var r = $(n.target);
  if ("wrapper" === i.touchEventsTarget && !r.closest(t.wrapperEl).length) return;
  if (s.isTouchEvent = "touchstart" === n.type, !s.isTouchEvent && "which" in n && 3 === n.which) return;
  if (!s.isTouchEvent && "button" in n && n.button > 0) return;
  if (s.isTouched && s.isMoved) return;
  if (i.noSwiping && r.closest(i.noSwipingSelector ? i.noSwipingSelector : ".".concat(i.noSwipingClass))[0]) return void (t.allowClick = !0);
  if (i.swipeHandler && !r.closest(i.swipeHandler)[0]) return;
  a.currentX = "touchstart" === n.type ? n.targetTouches[0].pageX : n.pageX, a.currentY = "touchstart" === n.type ? n.targetTouches[0].pageY : n.pageY;
  var l = a.currentX,
      o = a.currentY,
      d = i.edgeSwipeDetection || i.iOSEdgeSwipeDetection,
      p = i.edgeSwipeThreshold || i.iOSEdgeSwipeThreshold;

  if (!d || !(l <= p || l >= win.screen.width - p)) {
    if (Utils.extend(s, {
      isTouched: !0,
      isMoved: !1,
      allowTouchCallbacks: !0,
      isScrolling: void 0,
      startMoving: void 0
    }), a.startX = l, a.startY = o, s.touchStartTime = Utils.now(), t.allowClick = !0, t.updateSize(), t.swipeDirection = void 0, i.threshold > 0 && (s.allowThresholdMove = !1), "touchstart" !== n.type) {
      var _e42 = !0;

      r.is(s.formElements) && (_e42 = !1), doc.activeElement && $(doc.activeElement).is(s.formElements) && doc.activeElement !== r[0] && doc.activeElement.blur();

      var _a7 = _e42 && t.allowTouchMove && i.touchStartPreventDefault;

      (i.touchStartForcePreventDefault || _a7) && n.preventDefault();
    }

    t.emit("touchStart", n);
  }
}

function onTouchMove(e) {
  var t = this,
      s = t.touchEventsData,
      i = t.params,
      a = t.touches,
      n = t.rtlTranslate;
  var r = e;
  if (r.originalEvent && (r = r.originalEvent), !s.isTouched) return void (s.startMoving && s.isScrolling && t.emit("touchMoveOpposite", r));
  if (s.isTouchEvent && "mousemove" === r.type) return;
  var l = "touchmove" === r.type && r.targetTouches && (r.targetTouches[0] || r.changedTouches[0]),
      o = "touchmove" === r.type ? l.pageX : r.pageX,
      d = "touchmove" === r.type ? l.pageY : r.pageY;
  if (r.preventedByNestedSwiper) return a.startX = o, void (a.startY = d);
  if (!t.allowTouchMove) return t.allowClick = !1, void (s.isTouched && (Utils.extend(a, {
    startX: o,
    startY: d,
    currentX: o,
    currentY: d
  }), s.touchStartTime = Utils.now()));
  if (s.isTouchEvent && i.touchReleaseOnEdges && !i.loop) if (t.isVertical()) {
    if (d < a.startY && t.translate <= t.maxTranslate() || d > a.startY && t.translate >= t.minTranslate()) return s.isTouched = !1, void (s.isMoved = !1);
  } else if (o < a.startX && t.translate <= t.maxTranslate() || o > a.startX && t.translate >= t.minTranslate()) return;
  if (s.isTouchEvent && doc.activeElement && r.target === doc.activeElement && $(r.target).is(s.formElements)) return s.isMoved = !0, void (t.allowClick = !1);
  if (s.allowTouchCallbacks && t.emit("touchMove", r), r.targetTouches && r.targetTouches.length > 1) return;
  a.currentX = o, a.currentY = d;
  var p = a.currentX - a.startX,
      c = a.currentY - a.startY;
  if (t.params.threshold && Math.sqrt(Math.pow(p, 2) + Math.pow(c, 2)) < t.params.threshold) return;

  if (void 0 === s.isScrolling) {
    var _e43;

    t.isHorizontal() && a.currentY === a.startY || t.isVertical() && a.currentX === a.startX ? s.isScrolling = !1 : p * p + c * c >= 25 && (_e43 = 180 * Math.atan2(Math.abs(c), Math.abs(p)) / Math.PI, s.isScrolling = t.isHorizontal() ? _e43 > i.touchAngle : 90 - _e43 > i.touchAngle);
  }

  if (s.isScrolling && t.emit("touchMoveOpposite", r), void 0 === s.startMoving && (a.currentX === a.startX && a.currentY === a.startY || (s.startMoving = !0)), s.isScrolling) return void (s.isTouched = !1);
  if (!s.startMoving) return;
  t.allowClick = !1, i.cssMode || r.preventDefault(), i.touchMoveStopPropagation && !i.nested && r.stopPropagation(), s.isMoved || (i.loop && t.loopFix(), s.startTranslate = t.getTranslate(), t.setTransition(0), t.animating && t.$wrapperEl.trigger("webkitTransitionEnd transitionend"), s.allowMomentumBounce = !1, !i.grabCursor || !0 !== t.allowSlideNext && !0 !== t.allowSlidePrev || t.setGrabCursor(!0), t.emit("sliderFirstMove", r)), t.emit("sliderMove", r), s.isMoved = !0;
  var h = t.isHorizontal() ? p : c;
  a.diff = h, h *= i.touchRatio, n && (h = -h), t.swipeDirection = h > 0 ? "prev" : "next", s.currentTranslate = h + s.startTranslate;
  var u = !0,
      m = i.resistanceRatio;

  if (i.touchReleaseOnEdges && (m = 0), h > 0 && s.currentTranslate > t.minTranslate() ? (u = !1, i.resistance && (s.currentTranslate = t.minTranslate() - 1 + Math.pow(-t.minTranslate() + s.startTranslate + h, m))) : h < 0 && s.currentTranslate < t.maxTranslate() && (u = !1, i.resistance && (s.currentTranslate = t.maxTranslate() + 1 - Math.pow(t.maxTranslate() - s.startTranslate - h, m))), u && (r.preventedByNestedSwiper = !0), !t.allowSlideNext && "next" === t.swipeDirection && s.currentTranslate < s.startTranslate && (s.currentTranslate = s.startTranslate), !t.allowSlidePrev && "prev" === t.swipeDirection && s.currentTranslate > s.startTranslate && (s.currentTranslate = s.startTranslate), i.threshold > 0) {
    if (!(Math.abs(h) > i.threshold || s.allowThresholdMove)) return void (s.currentTranslate = s.startTranslate);
    if (!s.allowThresholdMove) return s.allowThresholdMove = !0, a.startX = a.currentX, a.startY = a.currentY, s.currentTranslate = s.startTranslate, void (a.diff = t.isHorizontal() ? a.currentX - a.startX : a.currentY - a.startY);
  }

  i.followFinger && !i.cssMode && ((i.freeMode || i.watchSlidesProgress || i.watchSlidesVisibility) && (t.updateActiveIndex(), t.updateSlidesClasses()), i.freeMode && (0 === s.velocities.length && s.velocities.push({
    position: a[t.isHorizontal() ? "startX" : "startY"],
    time: s.touchStartTime
  }), s.velocities.push({
    position: a[t.isHorizontal() ? "currentX" : "currentY"],
    time: Utils.now()
  })), t.updateProgress(s.currentTranslate), t.setTranslate(s.currentTranslate));
}

function onTouchEnd(e) {
  var t = this,
      s = t.touchEventsData,
      i = t.params,
      a = t.touches,
      n = t.rtlTranslate,
      r = t.$wrapperEl,
      l = t.slidesGrid,
      o = t.snapGrid;
  var d = e;
  if (d.originalEvent && (d = d.originalEvent), s.allowTouchCallbacks && t.emit("touchEnd", d), s.allowTouchCallbacks = !1, !s.isTouched) return s.isMoved && i.grabCursor && t.setGrabCursor(!1), s.isMoved = !1, void (s.startMoving = !1);
  i.grabCursor && s.isMoved && s.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
  var p = Utils.now(),
      c = p - s.touchStartTime;
  if (t.allowClick && (t.updateClickedSlide(d), t.emit("tap click", d), c < 300 && p - s.lastClickTime < 300 && t.emit("doubleTap doubleClick", d)), s.lastClickTime = Utils.now(), Utils.nextTick(function () {
    t.destroyed || (t.allowClick = !0);
  }), !s.isTouched || !s.isMoved || !t.swipeDirection || 0 === a.diff || s.currentTranslate === s.startTranslate) return s.isTouched = !1, s.isMoved = !1, void (s.startMoving = !1);
  var h;
  if (s.isTouched = !1, s.isMoved = !1, s.startMoving = !1, h = i.followFinger ? n ? t.translate : -t.translate : -s.currentTranslate, i.cssMode) return;

  if (i.freeMode) {
    if (h < -t.minTranslate()) return void t.slideTo(t.activeIndex);
    if (h > -t.maxTranslate()) return void (t.slides.length < o.length ? t.slideTo(o.length - 1) : t.slideTo(t.slides.length - 1));

    if (i.freeModeMomentum) {
      if (s.velocities.length > 1) {
        var _e45 = s.velocities.pop(),
            _a9 = s.velocities.pop(),
            _n7 = _e45.position - _a9.position,
            _r4 = _e45.time - _a9.time;

        t.velocity = _n7 / _r4, t.velocity /= 2, Math.abs(t.velocity) < i.freeModeMinimumVelocity && (t.velocity = 0), (_r4 > 150 || Utils.now() - _e45.time > 300) && (t.velocity = 0);
      } else t.velocity = 0;

      t.velocity *= i.freeModeMomentumVelocityRatio, s.velocities.length = 0;

      var _e44 = 1e3 * i.freeModeMomentumRatio;

      var _a8 = t.velocity * _e44;

      var _l3 = t.translate + _a8;

      n && (_l3 = -_l3);

      var _d2,
          _p = !1;

      var _c = 20 * Math.abs(t.velocity) * i.freeModeMomentumBounceRatio;

      var _h;

      if (_l3 < t.maxTranslate()) i.freeModeMomentumBounce ? (_l3 + t.maxTranslate() < -_c && (_l3 = t.maxTranslate() - _c), _d2 = t.maxTranslate(), _p = !0, s.allowMomentumBounce = !0) : _l3 = t.maxTranslate(), i.loop && i.centeredSlides && (_h = !0);else if (_l3 > t.minTranslate()) i.freeModeMomentumBounce ? (_l3 - t.minTranslate() > _c && (_l3 = t.minTranslate() + _c), _d2 = t.minTranslate(), _p = !0, s.allowMomentumBounce = !0) : _l3 = t.minTranslate(), i.loop && i.centeredSlides && (_h = !0);else if (i.freeModeSticky) {
        var _e46;

        for (var _t23 = 0; _t23 < o.length; _t23 += 1) {
          if (o[_t23] > -_l3) {
            _e46 = _t23;
            break;
          }
        }

        _l3 = -(_l3 = Math.abs(o[_e46] - _l3) < Math.abs(o[_e46 - 1] - _l3) || "next" === t.swipeDirection ? o[_e46] : o[_e46 - 1]);
      }

      if (_h && t.once("transitionEnd", function () {
        t.loopFix();
      }), 0 !== t.velocity) {
        if (_e44 = n ? Math.abs((-_l3 - t.translate) / t.velocity) : Math.abs((_l3 - t.translate) / t.velocity), i.freeModeSticky) {
          var _s15 = Math.abs((n ? -_l3 : _l3) - t.translate),
              _a10 = t.slidesSizesGrid[t.activeIndex];

          _e44 = _s15 < _a10 ? i.speed : _s15 < 2 * _a10 ? 1.5 * i.speed : 2.5 * i.speed;
        }
      } else if (i.freeModeSticky) return void t.slideToClosest();

      i.freeModeMomentumBounce && _p ? (t.updateProgress(_d2), t.setTransition(_e44), t.setTranslate(_l3), t.transitionStart(!0, t.swipeDirection), t.animating = !0, r.transitionEnd(function () {
        t && !t.destroyed && s.allowMomentumBounce && (t.emit("momentumBounce"), t.setTransition(i.speed), t.setTranslate(_d2), r.transitionEnd(function () {
          t && !t.destroyed && t.transitionEnd();
        }));
      })) : t.velocity ? (t.updateProgress(_l3), t.setTransition(_e44), t.setTranslate(_l3), t.transitionStart(!0, t.swipeDirection), t.animating || (t.animating = !0, r.transitionEnd(function () {
        t && !t.destroyed && t.transitionEnd();
      }))) : t.updateProgress(_l3), t.updateActiveIndex(), t.updateSlidesClasses();
    } else if (i.freeModeSticky) return void t.slideToClosest();

    return void ((!i.freeModeMomentum || c >= i.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses()));
  }

  var u = 0,
      m = t.slidesSizesGrid[0];

  for (var _e47 = 0; _e47 < l.length; _e47 += _e47 < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup) {
    var _t24 = _e47 < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;

    void 0 !== l[_e47 + _t24] ? h >= l[_e47] && h < l[_e47 + _t24] && (u = _e47, m = l[_e47 + _t24] - l[_e47]) : h >= l[_e47] && (u = _e47, m = l[l.length - 1] - l[l.length - 2]);
  }

  var f = (h - l[u]) / m,
      g = u < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;

  if (c > i.longSwipesMs) {
    if (!i.longSwipes) return void t.slideTo(t.activeIndex);
    "next" === t.swipeDirection && (f >= i.longSwipesRatio ? t.slideTo(u + g) : t.slideTo(u)), "prev" === t.swipeDirection && (f > 1 - i.longSwipesRatio ? t.slideTo(u + g) : t.slideTo(u));
  } else {
    if (!i.shortSwipes) return void t.slideTo(t.activeIndex);
    t.navigation && (d.target === t.navigation.nextEl || d.target === t.navigation.prevEl) ? d.target === t.navigation.nextEl ? t.slideTo(u + g) : t.slideTo(u) : ("next" === t.swipeDirection && t.slideTo(u + g), "prev" === t.swipeDirection && t.slideTo(u));
  }
}

function onResize() {
  var e = this,
      t = e.params,
      s = e.el;
  if (s && 0 === s.offsetWidth) return;
  t.breakpoints && e.setBreakpoint();
  var i = e.allowSlideNext,
      a = e.allowSlidePrev,
      n = e.snapGrid;
  e.allowSlideNext = !0, e.allowSlidePrev = !0, e.updateSize(), e.updateSlides(), e.updateSlidesClasses(), ("auto" === t.slidesPerView || t.slidesPerView > 1) && e.isEnd && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0), e.autoplay && e.autoplay.running && e.autoplay.paused && e.autoplay.run(), e.allowSlidePrev = a, e.allowSlideNext = i, e.params.watchOverflow && n !== e.snapGrid && e.checkOverflow();
}

function onClick(e) {
  var t = this;
  t.allowClick || (t.params.preventClicks && e.preventDefault(), t.params.preventClicksPropagation && t.animating && (e.stopPropagation(), e.stopImmediatePropagation()));
}

function onScroll() {
  var e = this,
      t = e.wrapperEl;
  var s;
  e.previousTranslate = e.translate, e.translate = e.isHorizontal() ? -t.scrollLeft : -t.scrollTop, -0 === e.translate && (e.translate = 0), e.updateActiveIndex(), e.updateSlidesClasses();
  var i = e.maxTranslate() - e.minTranslate();
  (s = 0 === i ? 0 : (e.translate - e.minTranslate()) / i) !== e.progress && e.updateProgress(e.translate), e.emit("setTranslate", e.translate, !1);
}

var dummyEventAttached = !1;

function dummyEventListener() {}

function attachEvents() {
  var e = this,
      t = e.params,
      s = e.touchEvents,
      i = e.el,
      a = e.wrapperEl;
  e.onTouchStart = onTouchStart.bind(e), e.onTouchMove = onTouchMove.bind(e), e.onTouchEnd = onTouchEnd.bind(e), t.cssMode && (e.onScroll = onScroll.bind(e)), e.onClick = onClick.bind(e);
  var n = !!t.nested;
  if (!Support.touch && Support.pointerEvents) i.addEventListener(s.start, e.onTouchStart, !1), doc.addEventListener(s.move, e.onTouchMove, n), doc.addEventListener(s.end, e.onTouchEnd, !1);else {
    if (Support.touch) {
      var _a11 = !("touchstart" !== s.start || !Support.passiveListener || !t.passiveListeners) && {
        passive: !0,
        capture: !1
      };

      i.addEventListener(s.start, e.onTouchStart, _a11), i.addEventListener(s.move, e.onTouchMove, Support.passiveListener ? {
        passive: !1,
        capture: n
      } : n), i.addEventListener(s.end, e.onTouchEnd, _a11), s.cancel && i.addEventListener(s.cancel, e.onTouchEnd, _a11), dummyEventAttached || (doc.addEventListener("touchstart", dummyEventListener), dummyEventAttached = !0);
    }

    (t.simulateTouch && !Device.ios && !Device.android || t.simulateTouch && !Support.touch && Device.ios) && (i.addEventListener("mousedown", e.onTouchStart, !1), doc.addEventListener("mousemove", e.onTouchMove, n), doc.addEventListener("mouseup", e.onTouchEnd, !1));
  }
  (t.preventClicks || t.preventClicksPropagation) && i.addEventListener("click", e.onClick, !0), t.cssMode && a.addEventListener("scroll", e.onScroll), t.updateOnWindowResize ? e.on(Device.ios || Device.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize, !0) : e.on("observerUpdate", onResize, !0);
}

function detachEvents() {
  var e = this,
      t = e.params,
      s = e.touchEvents,
      i = e.el,
      a = e.wrapperEl,
      n = !!t.nested;
  if (!Support.touch && Support.pointerEvents) i.removeEventListener(s.start, e.onTouchStart, !1), doc.removeEventListener(s.move, e.onTouchMove, n), doc.removeEventListener(s.end, e.onTouchEnd, !1);else {
    if (Support.touch) {
      var _a12 = !("onTouchStart" !== s.start || !Support.passiveListener || !t.passiveListeners) && {
        passive: !0,
        capture: !1
      };

      i.removeEventListener(s.start, e.onTouchStart, _a12), i.removeEventListener(s.move, e.onTouchMove, n), i.removeEventListener(s.end, e.onTouchEnd, _a12), s.cancel && i.removeEventListener(s.cancel, e.onTouchEnd, _a12);
    }

    (t.simulateTouch && !Device.ios && !Device.android || t.simulateTouch && !Support.touch && Device.ios) && (i.removeEventListener("mousedown", e.onTouchStart, !1), doc.removeEventListener("mousemove", e.onTouchMove, n), doc.removeEventListener("mouseup", e.onTouchEnd, !1));
  }
  (t.preventClicks || t.preventClicksPropagation) && i.removeEventListener("click", e.onClick, !0), t.cssMode && a.removeEventListener("scroll", e.onScroll), e.off(Device.ios || Device.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize);
}

var events = {
  attachEvents: attachEvents,
  detachEvents: detachEvents
};

function setBreakpoint() {
  var e = this,
      t = e.activeIndex,
      s = e.initialized,
      _e$loopedSlides = e.loopedSlides,
      i = _e$loopedSlides === void 0 ? 0 : _e$loopedSlides,
      a = e.params,
      n = e.$el,
      r = a.breakpoints;
  if (!r || r && 0 === Object.keys(r).length) return;
  var l = e.getBreakpoint(r);

  if (l && e.currentBreakpoint !== l) {
    var o = l in r ? r[l] : void 0;
    o && ["slidesPerView", "spaceBetween", "slidesPerGroup", "slidesPerGroupSkip", "slidesPerColumn"].forEach(function (e) {
      var t = o[e];
      void 0 !== t && (o[e] = "slidesPerView" !== e || "AUTO" !== t && "auto" !== t ? "slidesPerView" === e ? parseFloat(t) : parseInt(t, 10) : "auto");
    });
    var d = o || e.originalParams,
        p = a.slidesPerColumn > 1,
        c = d.slidesPerColumn > 1;
    p && !c ? n.removeClass("".concat(a.containerModifierClass, "multirow ").concat(a.containerModifierClass, "multirow-column")) : !p && c && (n.addClass("".concat(a.containerModifierClass, "multirow")), "column" === d.slidesPerColumnFill && n.addClass("".concat(a.containerModifierClass, "multirow-column")));
    var h = d.direction && d.direction !== a.direction,
        u = a.loop && (d.slidesPerView !== a.slidesPerView || h);
    h && s && e.changeDirection(), Utils.extend(e.params, d), Utils.extend(e, {
      allowTouchMove: e.params.allowTouchMove,
      allowSlideNext: e.params.allowSlideNext,
      allowSlidePrev: e.params.allowSlidePrev
    }), e.currentBreakpoint = l, u && s && (e.loopDestroy(), e.loopCreate(), e.updateSlides(), e.slideTo(t - i + e.loopedSlides, 0, !1)), e.emit("breakpoint", d);
  }
}

function getBreakpoint(e) {
  if (!e) return;
  var t = !1;
  var s = Object.keys(e).map(function (e) {
    if ("string" == typeof e && e.startsWith("@")) {
      var _t25 = parseFloat(e.substr(1));

      return {
        value: win.innerHeight * _t25,
        point: e
      };
    }

    return {
      value: e,
      point: e
    };
  });
  s.sort(function (e, t) {
    return parseInt(e.value, 10) - parseInt(t.value, 10);
  });

  for (var _e48 = 0; _e48 < s.length; _e48 += 1) {
    var _s$_e = s[_e48],
        i = _s$_e.point,
        a = _s$_e.value;
    a <= win.innerWidth && (t = i);
  }

  return t || "max";
}

var breakpoints = {
  setBreakpoint: setBreakpoint,
  getBreakpoint: getBreakpoint
};

function addClasses() {
  var e = this.classNames,
      t = this.params,
      s = this.rtl,
      i = this.$el,
      a = [];
  a.push("initialized"), a.push(t.direction), t.freeMode && a.push("free-mode"), t.autoHeight && a.push("autoheight"), s && a.push("rtl"), t.slidesPerColumn > 1 && (a.push("multirow"), "column" === t.slidesPerColumnFill && a.push("multirow-column")), Device.android && a.push("android"), Device.ios && a.push("ios"), t.cssMode && a.push("css-mode"), a.forEach(function (s) {
    e.push(t.containerModifierClass + s);
  }), i.addClass(e.join(" "));
}

function removeClasses() {
  var e = this.$el,
      t = this.classNames;
  e.removeClass(t.join(" "));
}

var classes = {
  addClasses: addClasses,
  removeClasses: removeClasses
};

function loadImage(e, t, s, i, a, n) {
  var r;

  function l() {
    n && n();
  }

  e.complete && a ? l() : t ? ((r = new win.Image()).onload = l, r.onerror = l, i && (r.sizes = i), s && (r.srcset = s), t && (r.src = t)) : l();
}

function preloadImages() {
  var e = this;

  function t() {
    null != e && e && !e.destroyed && (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1), e.imagesLoaded === e.imagesToLoad.length && (e.params.updateOnImagesReady && e.update(), e.emit("imagesReady")));
  }

  e.imagesToLoad = e.$el.find("img");

  for (var s = 0; s < e.imagesToLoad.length; s += 1) {
    var i = e.imagesToLoad[s];
    e.loadImage(i, i.currentSrc || i.getAttribute("src"), i.srcset || i.getAttribute("srcset"), i.sizes || i.getAttribute("sizes"), !0, t);
  }
}

var images = {
  loadImage: loadImage,
  preloadImages: preloadImages
};

function checkOverflow() {
  var e = this,
      t = e.params,
      s = e.isLocked,
      i = e.slides.length > 0 && t.slidesOffsetBefore + t.spaceBetween * (e.slides.length - 1) + e.slides[0].offsetWidth * e.slides.length;
  t.slidesOffsetBefore && t.slidesOffsetAfter && i ? e.isLocked = i <= e.size : e.isLocked = 1 === e.snapGrid.length, e.allowSlideNext = !e.isLocked, e.allowSlidePrev = !e.isLocked, s !== e.isLocked && e.emit(e.isLocked ? "lock" : "unlock"), s && s !== e.isLocked && (e.isEnd = !1, e.navigation.update());
}

var checkOverflow$1 = {
  checkOverflow: checkOverflow
},
    defaults = {
  init: !0,
  direction: "horizontal",
  touchEventsTarget: "container",
  initialSlide: 0,
  speed: 300,
  cssMode: !1,
  updateOnWindowResize: !0,
  preventInteractionOnTransition: !1,
  edgeSwipeDetection: !1,
  edgeSwipeThreshold: 20,
  freeMode: !1,
  freeModeMomentum: !0,
  freeModeMomentumRatio: 1,
  freeModeMomentumBounce: !0,
  freeModeMomentumBounceRatio: 1,
  freeModeMomentumVelocityRatio: 1,
  freeModeSticky: !1,
  freeModeMinimumVelocity: .02,
  autoHeight: !1,
  setWrapperSize: !1,
  virtualTranslate: !1,
  effect: "slide",
  breakpoints: void 0,
  spaceBetween: 0,
  slidesPerView: 1,
  slidesPerColumn: 1,
  slidesPerColumnFill: "column",
  slidesPerGroup: 1,
  slidesPerGroupSkip: 0,
  centeredSlides: !1,
  centeredSlidesBounds: !1,
  slidesOffsetBefore: 0,
  slidesOffsetAfter: 0,
  normalizeSlideIndex: !0,
  centerInsufficientSlides: !1,
  watchOverflow: !1,
  roundLengths: !1,
  touchRatio: 1,
  touchAngle: 45,
  simulateTouch: !0,
  shortSwipes: !0,
  longSwipes: !0,
  longSwipesRatio: .5,
  longSwipesMs: 300,
  followFinger: !0,
  allowTouchMove: !0,
  threshold: 0,
  touchMoveStopPropagation: !1,
  touchStartPreventDefault: !0,
  touchStartForcePreventDefault: !1,
  touchReleaseOnEdges: !1,
  uniqueNavElements: !0,
  resistance: !0,
  resistanceRatio: .85,
  watchSlidesProgress: !1,
  watchSlidesVisibility: !1,
  grabCursor: !1,
  preventClicks: !0,
  preventClicksPropagation: !0,
  slideToClickedSlide: !1,
  preloadImages: !0,
  updateOnImagesReady: !0,
  loop: !1,
  loopAdditionalSlides: 0,
  loopedSlides: null,
  loopFillGroupWithBlank: !1,
  allowSlidePrev: !0,
  allowSlideNext: !0,
  swipeHandler: null,
  noSwiping: !0,
  noSwipingClass: "swiper-no-swiping",
  noSwipingSelector: null,
  passiveListeners: !0,
  containerModifierClass: "swiper-container-",
  slideClass: "swiper-slide",
  slideBlankClass: "swiper-slide-invisible-blank",
  slideActiveClass: "swiper-slide-active",
  slideDuplicateActiveClass: "swiper-slide-duplicate-active",
  slideVisibleClass: "swiper-slide-visible",
  slideDuplicateClass: "swiper-slide-duplicate",
  slideNextClass: "swiper-slide-next",
  slideDuplicateNextClass: "swiper-slide-duplicate-next",
  slidePrevClass: "swiper-slide-prev",
  slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
  wrapperClass: "swiper-wrapper",
  runCallbacksOnInit: !0
};
var prototypes = {
  update: update,
  translate: translate,
  transition: transition$1,
  slide: slide,
  loop: loop,
  grabCursor: grabCursor,
  manipulation: manipulation,
  events: events,
  breakpoints: breakpoints,
  checkOverflow: checkOverflow$1,
  classes: classes,
  images: images
},
    extendedDefaults = {};

var Swiper =
/*#__PURE__*/
function (_SwiperClass) {
  _inherits(Swiper, _SwiperClass);

  function Swiper() {
    var _e49, _e50;

    var _this;

    _classCallCheck(this, Swiper);

    var t, s;

    for (var _len9 = arguments.length, e = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
      e[_key9] = arguments[_key9];
    }

    1 === e.length && e[0].constructor && e[0].constructor === Object ? s = e[0] : (_e49 = e, _e50 = _slicedToArray(_e49, 2), t = _e50[0], s = _e50[1], _e49), s || (s = {}), s = Utils.extend({}, s), t && !s.el && (s.el = t), _this = _possibleConstructorReturn(this, _getPrototypeOf(Swiper).call(this, s)), Object.keys(prototypes).forEach(function (e) {
      Object.keys(prototypes[e]).forEach(function (t) {
        Swiper.prototype[t] || (Swiper.prototype[t] = prototypes[e][t]);
      });
    });

    var i = _assertThisInitialized(_this);

    void 0 === i.modules && (i.modules = {}), Object.keys(i.modules).forEach(function (e) {
      var t = i.modules[e];

      if (t.params) {
        var _e51 = Object.keys(t.params)[0],
            _i9 = t.params[_e51];
        if ("object" != _typeof(_i9) || null === _i9) return;
        if (!(_e51 in s && "enabled" in _i9)) return;
        !0 === s[_e51] && (s[_e51] = {
          enabled: !0
        }), "object" != _typeof(s[_e51]) || "enabled" in s[_e51] || (s[_e51].enabled = !0), s[_e51] || (s[_e51] = {
          enabled: !1
        });
      }
    });
    var a = Utils.extend({}, defaults);
    i.useModulesParams(a), i.params = Utils.extend({}, a, extendedDefaults, s), i.originalParams = Utils.extend({}, i.params), i.passedParams = Utils.extend({}, s), i.$ = $;
    var n = $(i.params.el);
    if (!(t = n[0])) return _possibleConstructorReturn(_this);

    if (n.length > 1) {
      var _e52 = [];
      return _possibleConstructorReturn(_this, (n.each(function (t, i) {
        var a = Utils.extend({}, s, {
          el: i
        });

        _e52.push(new Swiper(a));
      }), _e52));
    }

    var r;
    return _possibleConstructorReturn(_this, (t.swiper = i, n.data("swiper", i), t && t.shadowRoot && t.shadowRoot.querySelector ? (r = $(t.shadowRoot.querySelector(".".concat(i.params.wrapperClass)))).children = function (e) {
      return n.children(e);
    } : r = n.children(".".concat(i.params.wrapperClass)), Utils.extend(i, {
      $el: n,
      el: t,
      $wrapperEl: r,
      wrapperEl: r[0],
      classNames: [],
      slides: $(),
      slidesGrid: [],
      snapGrid: [],
      slidesSizesGrid: [],
      isHorizontal: function isHorizontal() {
        return "horizontal" === i.params.direction;
      },
      isVertical: function isVertical() {
        return "vertical" === i.params.direction;
      },
      rtl: "rtl" === t.dir.toLowerCase() || "rtl" === n.css("direction"),
      rtlTranslate: "horizontal" === i.params.direction && ("rtl" === t.dir.toLowerCase() || "rtl" === n.css("direction")),
      wrongRTL: "-webkit-box" === r.css("display"),
      activeIndex: 0,
      realIndex: 0,
      isBeginning: !0,
      isEnd: !1,
      translate: 0,
      previousTranslate: 0,
      progress: 0,
      velocity: 0,
      animating: !1,
      allowSlideNext: i.params.allowSlideNext,
      allowSlidePrev: i.params.allowSlidePrev,
      touchEvents: function () {
        var e = ["touchstart", "touchmove", "touchend", "touchcancel"];
        var t = ["mousedown", "mousemove", "mouseup"];
        return Support.pointerEvents && (t = ["pointerdown", "pointermove", "pointerup"]), i.touchEventsTouch = {
          start: e[0],
          move: e[1],
          end: e[2],
          cancel: e[3]
        }, i.touchEventsDesktop = {
          start: t[0],
          move: t[1],
          end: t[2]
        }, Support.touch || !i.params.simulateTouch ? i.touchEventsTouch : i.touchEventsDesktop;
      }(),
      touchEventsData: {
        isTouched: void 0,
        isMoved: void 0,
        allowTouchCallbacks: void 0,
        touchStartTime: void 0,
        isScrolling: void 0,
        currentTranslate: void 0,
        startTranslate: void 0,
        allowThresholdMove: void 0,
        formElements: "input, select, option, textarea, button, video",
        lastClickTime: Utils.now(),
        clickTimeout: void 0,
        velocities: [],
        allowMomentumBounce: void 0,
        isTouchEvent: void 0,
        startMoving: void 0
      },
      allowClick: !0,
      allowTouchMove: i.params.allowTouchMove,
      touches: {
        startX: 0,
        startY: 0,
        currentX: 0,
        currentY: 0,
        diff: 0
      },
      imagesToLoad: [],
      imagesLoaded: 0
    }), i.useModules(), i.params.init && i.init(), i));
  }

  _createClass(Swiper, [{
    key: "slidesPerViewDynamic",
    value: function slidesPerViewDynamic() {
      var e = this.params,
          t = this.slides,
          s = this.slidesGrid,
          i = this.size,
          a = this.activeIndex;
      var n = 1;

      if (e.centeredSlides) {
        var _e53,
            _s16 = t[a].swiperSlideSize;

        for (var r = a + 1; r < t.length; r += 1) {
          t[r] && !_e53 && (n += 1, (_s16 += t[r].swiperSlideSize) > i && (_e53 = !0));
        }

        for (var _r5 = a - 1; _r5 >= 0; _r5 -= 1) {
          t[_r5] && !_e53 && (n += 1, (_s16 += t[_r5].swiperSlideSize) > i && (_e53 = !0));
        }
      } else for (var _e54 = a + 1; _e54 < t.length; _e54 += 1) {
        s[_e54] - s[a] < i && (n += 1);
      }

      return n;
    }
  }, {
    key: "update",
    value: function update() {
      var e = this;
      if (!e || e.destroyed) return;
      var t = e.snapGrid,
          s = e.params;

      function i() {
        var t = e.rtlTranslate ? -1 * e.translate : e.translate,
            s = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
        e.setTranslate(s), e.updateActiveIndex(), e.updateSlidesClasses();
      }

      var a;
      s.breakpoints && e.setBreakpoint(), e.updateSize(), e.updateSlides(), e.updateProgress(), e.updateSlidesClasses(), e.params.freeMode ? (i(), e.params.autoHeight && e.updateAutoHeight()) : (a = ("auto" === e.params.slidesPerView || e.params.slidesPerView > 1) && e.isEnd && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0)) || i(), s.watchOverflow && t !== e.snapGrid && e.checkOverflow(), e.emit("update");
    }
  }, {
    key: "changeDirection",
    value: function changeDirection(e) {
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
      var s = this,
          i = s.params.direction;
      return e || (e = "horizontal" === i ? "vertical" : "horizontal"), e === i || "horizontal" !== e && "vertical" !== e ? s : (s.$el.removeClass("".concat(s.params.containerModifierClass).concat(i)).addClass("".concat(s.params.containerModifierClass).concat(e)), s.params.direction = e, s.slides.each(function (t, s) {
        "vertical" === e ? s.style.width = "" : s.style.height = "";
      }), s.emit("changeDirection"), t && s.update(), s);
    }
  }, {
    key: "init",
    value: function init() {
      var e = this;
      e.initialized || (e.emit("beforeInit"), e.params.breakpoints && e.setBreakpoint(), e.addClasses(), e.params.loop && e.loopCreate(), e.updateSize(), e.updateSlides(), e.params.watchOverflow && e.checkOverflow(), e.params.grabCursor && e.setGrabCursor(), e.params.preloadImages && e.preloadImages(), e.params.loop ? e.slideTo(e.params.initialSlide + e.loopedSlides, 0, e.params.runCallbacksOnInit) : e.slideTo(e.params.initialSlide, 0, e.params.runCallbacksOnInit), e.attachEvents(), e.initialized = !0, e.emit("init"));
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
      var s = this,
          i = s.params,
          a = s.$el,
          n = s.$wrapperEl,
          r = s.slides;
      return void 0 === s.params || s.destroyed ? null : (s.emit("beforeDestroy"), s.initialized = !1, s.detachEvents(), i.loop && s.loopDestroy(), t && (s.removeClasses(), a.removeAttr("style"), n.removeAttr("style"), r && r.length && r.removeClass([i.slideVisibleClass, i.slideActiveClass, i.slideNextClass, i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")), s.emit("destroy"), Object.keys(s.eventsListeners).forEach(function (e) {
        s.off(e);
      }), !1 !== e && (s.$el[0].swiper = null, s.$el.data("swiper", null), Utils.deleteProps(s)), s.destroyed = !0, null);
    }
  }], [{
    key: "extendDefaults",
    value: function extendDefaults(e) {
      Utils.extend(extendedDefaults, e);
    }
  }, {
    key: "extendedDefaults",
    get: function get() {
      return extendedDefaults;
    }
  }, {
    key: "defaults",
    get: function get() {
      return defaults;
    }
  }, {
    key: "Class",
    get: function get() {
      return SwiperClass;
    }
  }, {
    key: "$",
    get: function get() {
      return $;
    }
  }]);

  return Swiper;
}(SwiperClass);

var Device$1 = {
  name: "device",
  proto: {
    device: Device
  },
  "static": {
    device: Device
  }
},
    Support$1 = {
  name: "support",
  proto: {
    support: Support
  },
  "static": {
    support: Support
  }
};
var Browser = {
  isEdge: !!win.navigator.userAgent.match(/Edge/g),
  isSafari: function () {
    var e = win.navigator.userAgent.toLowerCase();
    return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0;
  }(),
  isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent)
};
var Browser$1 = {
  name: "browser",
  proto: {
    browser: Browser
  },
  "static": {
    browser: Browser
  }
},
    Resize = {
  name: "resize",
  create: function create() {
    var e = this;
    Utils.extend(e, {
      resize: {
        resizeHandler: function resizeHandler() {
          e && !e.destroyed && e.initialized && (e.emit("beforeResize"), e.emit("resize"));
        },
        orientationChangeHandler: function orientationChangeHandler() {
          e && !e.destroyed && e.initialized && e.emit("orientationchange");
        }
      }
    });
  },
  on: {
    init: function init() {
      win.addEventListener("resize", this.resize.resizeHandler), win.addEventListener("orientationchange", this.resize.orientationChangeHandler);
    },
    destroy: function destroy() {
      win.removeEventListener("resize", this.resize.resizeHandler), win.removeEventListener("orientationchange", this.resize.orientationChangeHandler);
    }
  }
};
var Observer = {
  func: win.MutationObserver || win.WebkitMutationObserver,
  attach: function attach(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var s = this,
        i = new (0, Observer.func)(function (e) {
      if (1 === e.length) return void s.emit("observerUpdate", e[0]);

      var t = function t() {
        s.emit("observerUpdate", e[0]);
      };

      win.requestAnimationFrame ? win.requestAnimationFrame(t) : win.setTimeout(t, 0);
    });
    i.observe(e, {
      attributes: void 0 === t.attributes || t.attributes,
      childList: void 0 === t.childList || t.childList,
      characterData: void 0 === t.characterData || t.characterData
    }), s.observer.observers.push(i);
  },
  init: function init() {
    var e = this;

    if (Support.observer && e.params.observer) {
      if (e.params.observeParents) {
        var _t26 = e.$el.parents();

        for (var s = 0; s < _t26.length; s += 1) {
          e.observer.attach(_t26[s]);
        }
      }

      e.observer.attach(e.$el[0], {
        childList: e.params.observeSlideChildren
      }), e.observer.attach(e.$wrapperEl[0], {
        attributes: !1
      });
    }
  },
  destroy: function destroy() {
    this.observer.observers.forEach(function (e) {
      e.disconnect();
    }), this.observer.observers = [];
  }
};
var Observer$1 = {
  name: "observer",
  params: {
    observer: !1,
    observeParents: !1,
    observeSlideChildren: !1
  },
  create: function create() {
    Utils.extend(this, {
      observer: {
        init: Observer.init.bind(this),
        attach: Observer.attach.bind(this),
        destroy: Observer.destroy.bind(this),
        observers: []
      }
    });
  },
  on: {
    init: function init() {
      this.observer.init();
    },
    destroy: function destroy() {
      this.observer.destroy();
    }
  }
};
var Virtual = {
  update: function update(e) {
    var t = this,
        _t$params = t.params,
        s = _t$params.slidesPerView,
        i = _t$params.slidesPerGroup,
        a = _t$params.centeredSlides,
        _t$params$virtual = t.params.virtual,
        n = _t$params$virtual.addSlidesBefore,
        r = _t$params$virtual.addSlidesAfter,
        _t$virtual = t.virtual,
        l = _t$virtual.from,
        o = _t$virtual.to,
        d = _t$virtual.slides,
        p = _t$virtual.slidesGrid,
        c = _t$virtual.renderSlide,
        h = _t$virtual.offset;
    t.updateActiveIndex();
    var u = t.activeIndex || 0;
    var m, f, g;
    m = t.rtlTranslate ? "right" : t.isHorizontal() ? "left" : "top", a ? (f = Math.floor(s / 2) + i + n, g = Math.floor(s / 2) + i + r) : (f = s + (i - 1) + n, g = i + r);
    var v = Math.max((u || 0) - g, 0),
        w = Math.min((u || 0) + f, d.length - 1),
        b = (t.slidesGrid[v] || 0) - (t.slidesGrid[0] || 0);

    function y() {
      t.updateSlides(), t.updateProgress(), t.updateSlidesClasses(), t.lazy && t.params.lazy.enabled && t.lazy.load();
    }

    if (Utils.extend(t.virtual, {
      from: v,
      to: w,
      offset: b,
      slidesGrid: t.slidesGrid
    }), l === v && o === w && !e) return t.slidesGrid !== p && b !== h && t.slides.css(m, "".concat(b, "px")), void t.updateProgress();
    if (t.params.virtual.renderExternal) return t.params.virtual.renderExternal.call(t, {
      offset: b,
      from: v,
      to: w,
      slides: function () {
        var e = [];

        for (var _t27 = v; _t27 <= w; _t27 += 1) {
          e.push(d[_t27]);
        }

        return e;
      }()
    }), void y();
    var x = [],
        S = [];
    if (e) t.$wrapperEl.find(".".concat(t.params.slideClass)).remove();else for (var _e55 = l; _e55 <= o; _e55 += 1) {
      (_e55 < v || _e55 > w) && t.$wrapperEl.find(".".concat(t.params.slideClass, "[data-swiper-slide-index=\"").concat(_e55, "\"]")).remove();
    }

    for (var _t28 = 0; _t28 < d.length; _t28 += 1) {
      _t28 >= v && _t28 <= w && (void 0 === o || e ? S.push(_t28) : (_t28 > o && S.push(_t28), _t28 < l && x.push(_t28)));
    }

    S.forEach(function (e) {
      t.$wrapperEl.append(c(d[e], e));
    }), x.sort(function (e, t) {
      return t - e;
    }).forEach(function (e) {
      t.$wrapperEl.prepend(c(d[e], e));
    }), t.$wrapperEl.children(".swiper-slide").css(m, "".concat(b, "px")), y();
  },
  renderSlide: function renderSlide(e, t) {
    var s = this,
        i = s.params.virtual;
    if (i.cache && s.virtual.cache[t]) return s.virtual.cache[t];
    var a = i.renderSlide ? $(i.renderSlide.call(s, e, t)) : $("<div class=\"".concat(s.params.slideClass, "\" data-swiper-slide-index=\"").concat(t, "\">").concat(e, "</div>"));
    return a.attr("data-swiper-slide-index") || a.attr("data-swiper-slide-index", t), i.cache && (s.virtual.cache[t] = a), a;
  },
  appendSlide: function appendSlide(e) {
    var t = this;
    if ("object" == _typeof(e) && "length" in e) for (var s = 0; s < e.length; s += 1) {
      e[s] && t.virtual.slides.push(e[s]);
    } else t.virtual.slides.push(e);
    t.virtual.update(!0);
  },
  prependSlide: function prependSlide(e) {
    var t = this,
        s = t.activeIndex;
    var i = s + 1,
        a = 1;

    if (Array.isArray(e)) {
      for (var _s17 = 0; _s17 < e.length; _s17 += 1) {
        e[_s17] && t.virtual.slides.unshift(e[_s17]);
      }

      i = s + e.length, a = e.length;
    } else t.virtual.slides.unshift(e);

    if (t.params.virtual.cache) {
      var _e56 = t.virtual.cache,
          _s18 = {};
      Object.keys(_e56).forEach(function (t) {
        var i = _e56[t],
            n = i.attr("data-swiper-slide-index");
        n && i.attr("data-swiper-slide-index", parseInt(n, 10) + 1), _s18[parseInt(t, 10) + a] = i;
      }), t.virtual.cache = _s18;
    }

    t.virtual.update(!0), t.slideTo(i, 0);
  },
  removeSlide: function removeSlide(e) {
    var t = this;
    if (null == e) return;
    var s = t.activeIndex;
    if (Array.isArray(e)) for (var i = e.length - 1; i >= 0; i -= 1) {
      t.virtual.slides.splice(e[i], 1), t.params.virtual.cache && delete t.virtual.cache[e[i]], e[i] < s && (s -= 1), s = Math.max(s, 0);
    } else t.virtual.slides.splice(e, 1), t.params.virtual.cache && delete t.virtual.cache[e], e < s && (s -= 1), s = Math.max(s, 0);
    t.virtual.update(!0), t.slideTo(s, 0);
  },
  removeAllSlides: function removeAllSlides() {
    var e = this;
    e.virtual.slides = [], e.params.virtual.cache && (e.virtual.cache = {}), e.virtual.update(!0), e.slideTo(0, 0);
  }
};
var Virtual$1 = {
  name: "virtual",
  params: {
    virtual: {
      enabled: !1,
      slides: [],
      cache: !0,
      renderSlide: null,
      renderExternal: null,
      addSlidesBefore: 0,
      addSlidesAfter: 0
    }
  },
  create: function create() {
    Utils.extend(this, {
      virtual: {
        update: Virtual.update.bind(this),
        appendSlide: Virtual.appendSlide.bind(this),
        prependSlide: Virtual.prependSlide.bind(this),
        removeSlide: Virtual.removeSlide.bind(this),
        removeAllSlides: Virtual.removeAllSlides.bind(this),
        renderSlide: Virtual.renderSlide.bind(this),
        slides: this.params.virtual.slides,
        cache: {}
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var e = this;
      if (!e.params.virtual.enabled) return;
      e.classNames.push("".concat(e.params.containerModifierClass, "virtual"));
      var t = {
        watchSlidesProgress: !0
      };
      Utils.extend(e.params, t), Utils.extend(e.originalParams, t), e.params.initialSlide || e.virtual.update();
    },
    setTranslate: function setTranslate() {
      this.params.virtual.enabled && this.virtual.update();
    }
  }
};
var Keyboard = {
  handle: function handle(e) {
    var t = this,
        s = t.rtlTranslate;
    var i = e;
    i.originalEvent && (i = i.originalEvent);
    var a = i.keyCode || i.charCode;
    if (!t.allowSlideNext && (t.isHorizontal() && 39 === a || t.isVertical() && 40 === a || 34 === a)) return !1;
    if (!t.allowSlidePrev && (t.isHorizontal() && 37 === a || t.isVertical() && 38 === a || 33 === a)) return !1;

    if (!(i.shiftKey || i.altKey || i.ctrlKey || i.metaKey || doc.activeElement && doc.activeElement.nodeName && ("input" === doc.activeElement.nodeName.toLowerCase() || "textarea" === doc.activeElement.nodeName.toLowerCase()))) {
      if (t.params.keyboard.onlyInViewport && (33 === a || 34 === a || 37 === a || 39 === a || 38 === a || 40 === a)) {
        var _e57 = !1;

        if (t.$el.parents(".".concat(t.params.slideClass)).length > 0 && 0 === t.$el.parents(".".concat(t.params.slideActiveClass)).length) return;
        var _i10 = win.innerWidth,
            _a13 = win.innerHeight,
            n = t.$el.offset();
        s && (n.left -= t.$el[0].scrollLeft);
        var r = [[n.left, n.top], [n.left + t.width, n.top], [n.left, n.top + t.height], [n.left + t.width, n.top + t.height]];

        for (var _t29 = 0; _t29 < r.length; _t29 += 1) {
          var _s19 = r[_t29];
          _s19[0] >= 0 && _s19[0] <= _i10 && _s19[1] >= 0 && _s19[1] <= _a13 && (_e57 = !0);
        }

        if (!_e57) return;
      }

      t.isHorizontal() ? (33 !== a && 34 !== a && 37 !== a && 39 !== a || (i.preventDefault ? i.preventDefault() : i.returnValue = !1), (34 !== a && 39 !== a || s) && (33 !== a && 37 !== a || !s) || t.slideNext(), (33 !== a && 37 !== a || s) && (34 !== a && 39 !== a || !s) || t.slidePrev()) : (33 !== a && 34 !== a && 38 !== a && 40 !== a || (i.preventDefault ? i.preventDefault() : i.returnValue = !1), 34 !== a && 40 !== a || t.slideNext(), 33 !== a && 38 !== a || t.slidePrev()), t.emit("keyPress", a);
    }
  },
  enable: function enable() {
    this.keyboard.enabled || ($(doc).on("keydown", this.keyboard.handle), this.keyboard.enabled = !0);
  },
  disable: function disable() {
    this.keyboard.enabled && ($(doc).off("keydown", this.keyboard.handle), this.keyboard.enabled = !1);
  }
};
var Keyboard$1 = {
  name: "keyboard",
  params: {
    keyboard: {
      enabled: !1,
      onlyInViewport: !0
    }
  },
  create: function create() {
    Utils.extend(this, {
      keyboard: {
        enabled: !1,
        enable: Keyboard.enable.bind(this),
        disable: Keyboard.disable.bind(this),
        handle: Keyboard.handle.bind(this)
      }
    });
  },
  on: {
    init: function init() {
      var e = this;
      e.params.keyboard.enabled && e.keyboard.enable();
    },
    destroy: function destroy() {
      var e = this;
      e.keyboard.enabled && e.keyboard.disable();
    }
  }
};

function isEventSupported() {
  var e = "onwheel" in doc;

  if (!e) {
    var _t30 = doc.createElement("div");

    _t30.setAttribute("onwheel", "return;"), e = "function" == typeof _t30.onwheel;
  }

  return !e && doc.implementation && doc.implementation.hasFeature && !0 !== doc.implementation.hasFeature("", "") && (e = doc.implementation.hasFeature("Events.wheel", "3.0")), e;
}

var Mousewheel = {
  lastScrollTime: Utils.now(),
  lastEventBeforeSnap: void 0,
  recentWheelEvents: [],
  event: function event() {
    return win.navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : isEventSupported() ? "wheel" : "mousewheel";
  },
  normalize: function normalize(e) {
    var t = 0,
        s = 0,
        i = 0,
        a = 0;
    return "detail" in e && (s = e.detail), "wheelDelta" in e && (s = -e.wheelDelta / 120), "wheelDeltaY" in e && (s = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (t = s, s = 0), i = 10 * t, a = 10 * s, "deltaY" in e && (a = e.deltaY), "deltaX" in e && (i = e.deltaX), e.shiftKey && !i && (i = a, a = 0), (i || a) && e.deltaMode && (1 === e.deltaMode ? (i *= 40, a *= 40) : (i *= 800, a *= 800)), i && !t && (t = i < 1 ? -1 : 1), a && !s && (s = a < 1 ? -1 : 1), {
      spinX: t,
      spinY: s,
      pixelX: i,
      pixelY: a
    };
  },
  handleMouseEnter: function handleMouseEnter() {
    this.mouseEntered = !0;
  },
  handleMouseLeave: function handleMouseLeave() {
    this.mouseEntered = !1;
  },
  handle: function handle(e) {
    var t = e;
    var s = this,
        i = s.params.mousewheel;
    s.params.cssMode && t.preventDefault();
    var a = s.$el;
    if ("container" !== s.params.mousewheel.eventsTarged && (a = $(s.params.mousewheel.eventsTarged)), !s.mouseEntered && !a[0].contains(t.target) && !i.releaseOnEdges) return !0;
    t.originalEvent && (t = t.originalEvent);
    var n = 0;
    var r = s.rtlTranslate ? -1 : 1,
        l = Mousewheel.normalize(t);
    if (i.forceToAxis) {
      if (s.isHorizontal()) {
        if (!(Math.abs(l.pixelX) > Math.abs(l.pixelY))) return !0;
        n = l.pixelX * r;
      } else {
        if (!(Math.abs(l.pixelY) > Math.abs(l.pixelX))) return !0;
        n = l.pixelY;
      }
    } else n = Math.abs(l.pixelX) > Math.abs(l.pixelY) ? -l.pixelX * r : -l.pixelY;
    if (0 === n) return !0;

    if (i.invert && (n = -n), s.params.freeMode) {
      var _e58 = {
        time: Utils.now(),
        delta: Math.abs(n),
        direction: Math.sign(n)
      },
          _a14 = s.mousewheel.lastEventBeforeSnap,
          _r6 = _a14 && _e58.time < _a14.time + 500 && _e58.delta <= _a14.delta && _e58.direction === _a14.direction;

      if (!_r6) {
        s.mousewheel.lastEventBeforeSnap = void 0, s.params.loop && s.loopFix();

        var _a15 = s.getTranslate() + n * i.sensitivity;

        var _l4 = s.isBeginning,
            o = s.isEnd;

        if (_a15 >= s.minTranslate() && (_a15 = s.minTranslate()), _a15 <= s.maxTranslate() && (_a15 = s.maxTranslate()), s.setTransition(0), s.setTranslate(_a15), s.updateProgress(), s.updateActiveIndex(), s.updateSlidesClasses(), (!_l4 && s.isBeginning || !o && s.isEnd) && s.updateSlidesClasses(), s.params.freeModeSticky) {
          clearTimeout(s.mousewheel.timeout), s.mousewheel.timeout = void 0;
          var _t31 = s.mousewheel.recentWheelEvents;
          _t31.length >= 15 && _t31.shift();

          var _i11 = _t31.length ? _t31[_t31.length - 1] : void 0,
              _a16 = _t31[0];

          if (_t31.push(_e58), _i11 && (_e58.delta > _i11.delta || _e58.direction !== _i11.direction)) _t31.splice(0);else if (_t31.length >= 15 && _e58.time - _a16.time < 500 && _a16.delta - _e58.delta >= 1 && _e58.delta <= 6) {
            var _i12 = n > 0 ? .8 : .2;

            s.mousewheel.lastEventBeforeSnap = _e58, _t31.splice(0), s.mousewheel.timeout = Utils.nextTick(function () {
              s.slideToClosest(s.params.speed, !0, void 0, _i12);
            }, 0);
          }
          s.mousewheel.timeout || (s.mousewheel.timeout = Utils.nextTick(function () {
            s.mousewheel.lastEventBeforeSnap = _e58, _t31.splice(0), s.slideToClosest(s.params.speed, !0, void 0, .5);
          }, 500));
        }

        if (_r6 || s.emit("scroll", t), s.params.autoplay && s.params.autoplayDisableOnInteraction && s.autoplay.stop(), _a15 === s.minTranslate() || _a15 === s.maxTranslate()) return !0;
      }
    } else {
      var _t32 = {
        time: Utils.now(),
        delta: Math.abs(n),
        direction: Math.sign(n),
        raw: e
      },
          _i13 = s.mousewheel.recentWheelEvents;
      _i13.length >= 2 && _i13.shift();

      var _a17 = _i13.length ? _i13[_i13.length - 1] : void 0;

      if (_i13.push(_t32), _a17 ? (_t32.direction !== _a17.direction || _t32.delta > _a17.delta) && s.mousewheel.animateSlider(_t32) : s.mousewheel.animateSlider(_t32), s.mousewheel.releaseScroll(_t32)) return !0;
    }

    return t.preventDefault ? t.preventDefault() : t.returnValue = !1, !1;
  },
  animateSlider: function animateSlider(e) {
    var t = this;
    return e.delta >= 6 && Utils.now() - t.mousewheel.lastScrollTime < 60 || (e.direction < 0 ? t.isEnd && !t.params.loop || t.animating || (t.slideNext(), t.emit("scroll", e.raw)) : t.isBeginning && !t.params.loop || t.animating || (t.slidePrev(), t.emit("scroll", e.raw)), t.mousewheel.lastScrollTime = new win.Date().getTime(), !1);
  },
  releaseScroll: function releaseScroll(e) {
    var t = this,
        s = t.params.mousewheel;

    if (e.direction < 0) {
      if (t.isEnd && !t.params.loop && s.releaseOnEdges) return !0;
    } else if (t.isBeginning && !t.params.loop && s.releaseOnEdges) return !0;

    return !1;
  },
  enable: function enable() {
    var e = this,
        t = Mousewheel.event();
    if (e.params.cssMode) return e.wrapperEl.removeEventListener(t, e.mousewheel.handle), !0;
    if (!t) return !1;
    if (e.mousewheel.enabled) return !1;
    var s = e.$el;
    return "container" !== e.params.mousewheel.eventsTarged && (s = $(e.params.mousewheel.eventsTarged)), s.on("mouseenter", e.mousewheel.handleMouseEnter), s.on("mouseleave", e.mousewheel.handleMouseLeave), s.on(t, e.mousewheel.handle), e.mousewheel.enabled = !0, !0;
  },
  disable: function disable() {
    var e = this,
        t = Mousewheel.event();
    if (e.params.cssMode) return e.wrapperEl.addEventListener(t, e.mousewheel.handle), !0;
    if (!t) return !1;
    if (!e.mousewheel.enabled) return !1;
    var s = e.$el;
    return "container" !== e.params.mousewheel.eventsTarged && (s = $(e.params.mousewheel.eventsTarged)), s.off(t, e.mousewheel.handle), e.mousewheel.enabled = !1, !0;
  }
};
var Mousewheel$1 = {
  name: "mousewheel",
  params: {
    mousewheel: {
      enabled: !1,
      releaseOnEdges: !1,
      invert: !1,
      forceToAxis: !1,
      sensitivity: 1,
      eventsTarged: "container"
    }
  },
  create: function create() {
    Utils.extend(this, {
      mousewheel: {
        enabled: !1,
        enable: Mousewheel.enable.bind(this),
        disable: Mousewheel.disable.bind(this),
        handle: Mousewheel.handle.bind(this),
        handleMouseEnter: Mousewheel.handleMouseEnter.bind(this),
        handleMouseLeave: Mousewheel.handleMouseLeave.bind(this),
        animateSlider: Mousewheel.animateSlider.bind(this),
        releaseScroll: Mousewheel.releaseScroll.bind(this),
        lastScrollTime: Utils.now(),
        lastEventBeforeSnap: void 0,
        recentWheelEvents: []
      }
    });
  },
  on: {
    init: function init() {
      var e = this;
      !e.params.mousewheel.enabled && e.params.cssMode && e.mousewheel.disable(), e.params.mousewheel.enabled && e.mousewheel.enable();
    },
    destroy: function destroy() {
      var e = this;
      e.params.cssMode && e.mousewheel.enable(), e.mousewheel.enabled && e.mousewheel.disable();
    }
  }
};
var Navigation = {
  update: function update() {
    var e = this,
        t = e.params.navigation;
    if (e.params.loop) return;
    var _e$navigation = e.navigation,
        s = _e$navigation.$nextEl,
        i = _e$navigation.$prevEl;
    i && i.length > 0 && (e.isBeginning ? i.addClass(t.disabledClass) : i.removeClass(t.disabledClass), i[e.params.watchOverflow && e.isLocked ? "addClass" : "removeClass"](t.lockClass)), s && s.length > 0 && (e.isEnd ? s.addClass(t.disabledClass) : s.removeClass(t.disabledClass), s[e.params.watchOverflow && e.isLocked ? "addClass" : "removeClass"](t.lockClass));
  },
  onPrevClick: function onPrevClick(e) {
    e.preventDefault(), this.isBeginning && !this.params.loop || this.slidePrev();
  },
  onNextClick: function onNextClick(e) {
    e.preventDefault(), this.isEnd && !this.params.loop || this.slideNext();
  },
  init: function init() {
    var e = this,
        t = e.params.navigation;
    if (!t.nextEl && !t.prevEl) return;
    var s, i;
    t.nextEl && (s = $(t.nextEl), e.params.uniqueNavElements && "string" == typeof t.nextEl && s.length > 1 && 1 === e.$el.find(t.nextEl).length && (s = e.$el.find(t.nextEl))), t.prevEl && (i = $(t.prevEl), e.params.uniqueNavElements && "string" == typeof t.prevEl && i.length > 1 && 1 === e.$el.find(t.prevEl).length && (i = e.$el.find(t.prevEl))), s && s.length > 0 && s.on("click", e.navigation.onNextClick), i && i.length > 0 && i.on("click", e.navigation.onPrevClick), Utils.extend(e.navigation, {
      $nextEl: s,
      nextEl: s && s[0],
      $prevEl: i,
      prevEl: i && i[0]
    });
  },
  destroy: function destroy() {
    var e = this,
        _e$navigation2 = e.navigation,
        t = _e$navigation2.$nextEl,
        s = _e$navigation2.$prevEl;
    t && t.length && (t.off("click", e.navigation.onNextClick), t.removeClass(e.params.navigation.disabledClass)), s && s.length && (s.off("click", e.navigation.onPrevClick), s.removeClass(e.params.navigation.disabledClass));
  }
};
var Navigation$1 = {
  name: "navigation",
  params: {
    navigation: {
      nextEl: null,
      prevEl: null,
      hideOnClick: !1,
      disabledClass: "swiper-button-disabled",
      hiddenClass: "swiper-button-hidden",
      lockClass: "swiper-button-lock"
    }
  },
  create: function create() {
    Utils.extend(this, {
      navigation: {
        init: Navigation.init.bind(this),
        update: Navigation.update.bind(this),
        destroy: Navigation.destroy.bind(this),
        onNextClick: Navigation.onNextClick.bind(this),
        onPrevClick: Navigation.onPrevClick.bind(this)
      }
    });
  },
  on: {
    init: function init() {
      this.navigation.init(), this.navigation.update();
    },
    toEdge: function toEdge() {
      this.navigation.update();
    },
    fromEdge: function fromEdge() {
      this.navigation.update();
    },
    destroy: function destroy() {
      this.navigation.destroy();
    },
    click: function click(e) {
      var t = this,
          _t$navigation = t.navigation,
          s = _t$navigation.$nextEl,
          i = _t$navigation.$prevEl;

      if (t.params.navigation.hideOnClick && !$(e.target).is(i) && !$(e.target).is(s)) {
        var _e59;

        s ? _e59 = s.hasClass(t.params.navigation.hiddenClass) : i && (_e59 = i.hasClass(t.params.navigation.hiddenClass)), !0 === _e59 ? t.emit("navigationShow", t) : t.emit("navigationHide", t), s && s.toggleClass(t.params.navigation.hiddenClass), i && i.toggleClass(t.params.navigation.hiddenClass);
      }
    }
  }
};
var Pagination = {
  update: function update() {
    var e = this,
        t = e.rtl,
        s = e.params.pagination;
    if (!s.el || !e.pagination.el || !e.pagination.$el || 0 === e.pagination.$el.length) return;
    var i = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length,
        a = e.pagination.$el;
    var n;
    var r = e.params.loop ? Math.ceil((i - 2 * e.loopedSlides) / e.params.slidesPerGroup) : e.snapGrid.length;

    if (e.params.loop ? ((n = Math.ceil((e.activeIndex - e.loopedSlides) / e.params.slidesPerGroup)) > i - 1 - 2 * e.loopedSlides && (n -= i - 2 * e.loopedSlides), n > r - 1 && (n -= r), n < 0 && "bullets" !== e.params.paginationType && (n = r + n)) : n = void 0 !== e.snapIndex ? e.snapIndex : e.activeIndex || 0, "bullets" === s.type && e.pagination.bullets && e.pagination.bullets.length > 0) {
      var _i14 = e.pagination.bullets;

      var _r7, l, o;

      if (s.dynamicBullets && (e.pagination.bulletSize = _i14.eq(0)[e.isHorizontal() ? "outerWidth" : "outerHeight"](!0), a.css(e.isHorizontal() ? "width" : "height", "".concat(e.pagination.bulletSize * (s.dynamicMainBullets + 4), "px")), s.dynamicMainBullets > 1 && void 0 !== e.previousIndex && (e.pagination.dynamicBulletIndex += n - e.previousIndex, e.pagination.dynamicBulletIndex > s.dynamicMainBullets - 1 ? e.pagination.dynamicBulletIndex = s.dynamicMainBullets - 1 : e.pagination.dynamicBulletIndex < 0 && (e.pagination.dynamicBulletIndex = 0)), _r7 = n - e.pagination.dynamicBulletIndex, o = ((l = _r7 + (Math.min(_i14.length, s.dynamicMainBullets) - 1)) + _r7) / 2), _i14.removeClass("".concat(s.bulletActiveClass, " ").concat(s.bulletActiveClass, "-next ").concat(s.bulletActiveClass, "-next-next ").concat(s.bulletActiveClass, "-prev ").concat(s.bulletActiveClass, "-prev-prev ").concat(s.bulletActiveClass, "-main")), a.length > 1) _i14.each(function (e, t) {
        var i = $(t),
            a = i.index();
        a === n && i.addClass(s.bulletActiveClass), s.dynamicBullets && (a >= _r7 && a <= l && i.addClass("".concat(s.bulletActiveClass, "-main")), a === _r7 && i.prev().addClass("".concat(s.bulletActiveClass, "-prev")).prev().addClass("".concat(s.bulletActiveClass, "-prev-prev")), a === l && i.next().addClass("".concat(s.bulletActiveClass, "-next")).next().addClass("".concat(s.bulletActiveClass, "-next-next")));
      });else {
        var _t33 = _i14.eq(n),
            _a18 = _t33.index();

        if (_t33.addClass(s.bulletActiveClass), s.dynamicBullets) {
          var _t34 = _i14.eq(_r7),
              _n8 = _i14.eq(l);

          for (var _e60 = _r7; _e60 <= l; _e60 += 1) {
            _i14.eq(_e60).addClass("".concat(s.bulletActiveClass, "-main"));
          }

          if (e.params.loop) {
            if (_a18 >= _i14.length - s.dynamicMainBullets) {
              for (var _e61 = s.dynamicMainBullets; _e61 >= 0; _e61 -= 1) {
                _i14.eq(_i14.length - _e61).addClass("".concat(s.bulletActiveClass, "-main"));
              }

              _i14.eq(_i14.length - s.dynamicMainBullets - 1).addClass("".concat(s.bulletActiveClass, "-prev"));
            } else _t34.prev().addClass("".concat(s.bulletActiveClass, "-prev")).prev().addClass("".concat(s.bulletActiveClass, "-prev-prev")), _n8.next().addClass("".concat(s.bulletActiveClass, "-next")).next().addClass("".concat(s.bulletActiveClass, "-next-next"));
          } else _t34.prev().addClass("".concat(s.bulletActiveClass, "-prev")).prev().addClass("".concat(s.bulletActiveClass, "-prev-prev")), _n8.next().addClass("".concat(s.bulletActiveClass, "-next")).next().addClass("".concat(s.bulletActiveClass, "-next-next"));
        }
      }

      if (s.dynamicBullets) {
        var _a19 = Math.min(_i14.length, s.dynamicMainBullets + 4),
            _n9 = (e.pagination.bulletSize * _a19 - e.pagination.bulletSize) / 2 - o * e.pagination.bulletSize,
            _r8 = t ? "right" : "left";

        _i14.css(e.isHorizontal() ? _r8 : "top", "".concat(_n9, "px"));
      }
    }

    if ("fraction" === s.type && (a.find(".".concat(s.currentClass)).text(s.formatFractionCurrent(n + 1)), a.find(".".concat(s.totalClass)).text(s.formatFractionTotal(r))), "progressbar" === s.type) {
      var _t35;

      _t35 = s.progressbarOpposite ? e.isHorizontal() ? "vertical" : "horizontal" : e.isHorizontal() ? "horizontal" : "vertical";

      var _i15 = (n + 1) / r;

      var _l5 = 1,
          _o2 = 1;
      "horizontal" === _t35 ? _l5 = _i15 : _o2 = _i15, a.find(".".concat(s.progressbarFillClass)).transform("translate3d(0,0,0) scaleX(".concat(_l5, ") scaleY(").concat(_o2, ")")).transition(e.params.speed);
    }

    "custom" === s.type && s.renderCustom ? (a.html(s.renderCustom(e, n + 1, r)), e.emit("paginationRender", e, a[0])) : e.emit("paginationUpdate", e, a[0]), a[e.params.watchOverflow && e.isLocked ? "addClass" : "removeClass"](s.lockClass);
  },
  render: function render() {
    var e = this,
        t = e.params.pagination;
    if (!t.el || !e.pagination.el || !e.pagination.$el || 0 === e.pagination.$el.length) return;
    var s = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length,
        i = e.pagination.$el;
    var a = "";

    if ("bullets" === t.type) {
      var n = e.params.loop ? Math.ceil((s - 2 * e.loopedSlides) / e.params.slidesPerGroup) : e.snapGrid.length;

      for (var _s20 = 0; _s20 < n; _s20 += 1) {
        t.renderBullet ? a += t.renderBullet.call(e, _s20, t.bulletClass) : a += "<".concat(t.bulletElement, " class=\"").concat(t.bulletClass, "\"></").concat(t.bulletElement, ">");
      }

      i.html(a), e.pagination.bullets = i.find(".".concat(t.bulletClass));
    }

    "fraction" === t.type && (a = t.renderFraction ? t.renderFraction.call(e, t.currentClass, t.totalClass) : "<span class=\"".concat(t.currentClass, "\"></span>") + " / " + "<span class=\"".concat(t.totalClass, "\"></span>"), i.html(a)), "progressbar" === t.type && (a = t.renderProgressbar ? t.renderProgressbar.call(e, t.progressbarFillClass) : "<span class=\"".concat(t.progressbarFillClass, "\"></span>"), i.html(a)), "custom" !== t.type && e.emit("paginationRender", e.pagination.$el[0]);
  },
  init: function init() {
    var e = this,
        t = e.params.pagination;
    if (!t.el) return;
    var s = $(t.el);
    0 !== s.length && (e.params.uniqueNavElements && "string" == typeof t.el && s.length > 1 && 1 === e.$el.find(t.el).length && (s = e.$el.find(t.el)), "bullets" === t.type && t.clickable && s.addClass(t.clickableClass), s.addClass(t.modifierClass + t.type), "bullets" === t.type && t.dynamicBullets && (s.addClass("".concat(t.modifierClass).concat(t.type, "-dynamic")), e.pagination.dynamicBulletIndex = 0, t.dynamicMainBullets < 1 && (t.dynamicMainBullets = 1)), "progressbar" === t.type && t.progressbarOpposite && s.addClass(t.progressbarOppositeClass), t.clickable && s.on("click", ".".concat(t.bulletClass), function (t) {
      t.preventDefault();
      var s = $(this).index() * e.params.slidesPerGroup;
      e.params.loop && (s += e.loopedSlides), e.slideTo(s);
    }), Utils.extend(e.pagination, {
      $el: s,
      el: s[0]
    }));
  },
  destroy: function destroy() {
    var e = this.params.pagination;
    if (!e.el || !this.pagination.el || !this.pagination.$el || 0 === this.pagination.$el.length) return;
    var t = this.pagination.$el;
    t.removeClass(e.hiddenClass), t.removeClass(e.modifierClass + e.type), this.pagination.bullets && this.pagination.bullets.removeClass(e.bulletActiveClass), e.clickable && t.off("click", ".".concat(e.bulletClass));
  }
};
var Pagination$1 = {
  name: "pagination",
  params: {
    pagination: {
      el: null,
      bulletElement: "span",
      clickable: !1,
      hideOnClick: !1,
      renderBullet: null,
      renderProgressbar: null,
      renderFraction: null,
      renderCustom: null,
      progressbarOpposite: !1,
      type: "bullets",
      dynamicBullets: !1,
      dynamicMainBullets: 1,
      formatFractionCurrent: function formatFractionCurrent(e) {
        return e;
      },
      formatFractionTotal: function formatFractionTotal(e) {
        return e;
      },
      bulletClass: "swiper-pagination-bullet",
      bulletActiveClass: "swiper-pagination-bullet-active",
      modifierClass: "swiper-pagination-",
      currentClass: "swiper-pagination-current",
      totalClass: "swiper-pagination-total",
      hiddenClass: "swiper-pagination-hidden",
      progressbarFillClass: "swiper-pagination-progressbar-fill",
      progressbarOppositeClass: "swiper-pagination-progressbar-opposite",
      clickableClass: "swiper-pagination-clickable",
      lockClass: "swiper-pagination-lock"
    }
  },
  create: function create() {
    Utils.extend(this, {
      pagination: {
        init: Pagination.init.bind(this),
        render: Pagination.render.bind(this),
        update: Pagination.update.bind(this),
        destroy: Pagination.destroy.bind(this),
        dynamicBulletIndex: 0
      }
    });
  },
  on: {
    init: function init() {
      this.pagination.init(), this.pagination.render(), this.pagination.update();
    },
    activeIndexChange: function activeIndexChange() {
      var e = this;
      e.params.loop ? e.pagination.update() : void 0 === e.snapIndex && e.pagination.update();
    },
    snapIndexChange: function snapIndexChange() {
      var e = this;
      e.params.loop || e.pagination.update();
    },
    slidesLengthChange: function slidesLengthChange() {
      var e = this;
      e.params.loop && (e.pagination.render(), e.pagination.update());
    },
    snapGridLengthChange: function snapGridLengthChange() {
      var e = this;
      e.params.loop || (e.pagination.render(), e.pagination.update());
    },
    destroy: function destroy() {
      this.pagination.destroy();
    },
    click: function click(e) {
      var t = this;

      if (t.params.pagination.el && t.params.pagination.hideOnClick && t.pagination.$el.length > 0 && !$(e.target).hasClass(t.params.pagination.bulletClass)) {
        !0 === t.pagination.$el.hasClass(t.params.pagination.hiddenClass) ? t.emit("paginationShow", t) : t.emit("paginationHide", t), t.pagination.$el.toggleClass(t.params.pagination.hiddenClass);
      }
    }
  }
};
var Scrollbar = {
  setTranslate: function setTranslate() {
    var e = this;
    if (!e.params.scrollbar.el || !e.scrollbar.el) return;
    var t = e.scrollbar,
        s = e.rtlTranslate,
        i = e.progress,
        a = t.dragSize,
        n = t.trackSize,
        r = t.$dragEl,
        l = t.$el,
        o = e.params.scrollbar;
    var d = a,
        p = (n - a) * i;
    s ? (p = -p) > 0 ? (d = a - p, p = 0) : -p + a > n && (d = n + p) : p < 0 ? (d = a + p, p = 0) : p + a > n && (d = n - p), e.isHorizontal() ? (r.transform("translate3d(".concat(p, "px, 0, 0)")), r[0].style.width = "".concat(d, "px")) : (r.transform("translate3d(0px, ".concat(p, "px, 0)")), r[0].style.height = "".concat(d, "px")), o.hide && (clearTimeout(e.scrollbar.timeout), l[0].style.opacity = 1, e.scrollbar.timeout = setTimeout(function () {
      l[0].style.opacity = 0, l.transition(400);
    }, 1e3));
  },
  setTransition: function setTransition(e) {
    this.params.scrollbar.el && this.scrollbar.el && this.scrollbar.$dragEl.transition(e);
  },
  updateSize: function updateSize() {
    var e = this;
    if (!e.params.scrollbar.el || !e.scrollbar.el) return;
    var t = e.scrollbar,
        s = t.$dragEl,
        i = t.$el;
    s[0].style.width = "", s[0].style.height = "";
    var a = e.isHorizontal() ? i[0].offsetWidth : i[0].offsetHeight,
        n = e.size / e.virtualSize,
        r = n * (a / e.size);
    var l;
    l = "auto" === e.params.scrollbar.dragSize ? a * n : parseInt(e.params.scrollbar.dragSize, 10), e.isHorizontal() ? s[0].style.width = "".concat(l, "px") : s[0].style.height = "".concat(l, "px"), i[0].style.display = n >= 1 ? "none" : "", e.params.scrollbar.hide && (i[0].style.opacity = 0), Utils.extend(t, {
      trackSize: a,
      divider: n,
      moveDivider: r,
      dragSize: l
    }), t.$el[e.params.watchOverflow && e.isLocked ? "addClass" : "removeClass"](e.params.scrollbar.lockClass);
  },
  getPointerPosition: function getPointerPosition(e) {
    return this.isHorizontal() ? "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientX : e.clientX : "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientY : e.clientY;
  },
  setDragPosition: function setDragPosition(e) {
    var t = this.scrollbar,
        s = this.rtlTranslate,
        i = t.$el,
        a = t.dragSize,
        n = t.trackSize,
        r = t.dragStartPos;
    var l;
    l = (t.getPointerPosition(e) - i.offset()[this.isHorizontal() ? "left" : "top"] - (null !== r ? r : a / 2)) / (n - a), l = Math.max(Math.min(l, 1), 0), s && (l = 1 - l);
    var o = this.minTranslate() + (this.maxTranslate() - this.minTranslate()) * l;
    this.updateProgress(o), this.setTranslate(o), this.updateActiveIndex(), this.updateSlidesClasses();
  },
  onDragStart: function onDragStart(e) {
    var t = this,
        s = t.params.scrollbar,
        i = t.scrollbar,
        a = t.$wrapperEl,
        n = i.$el,
        r = i.$dragEl;
    t.scrollbar.isTouched = !0, t.scrollbar.dragStartPos = e.target === r[0] || e.target === r ? i.getPointerPosition(e) - e.target.getBoundingClientRect()[t.isHorizontal() ? "left" : "top"] : null, e.preventDefault(), e.stopPropagation(), a.transition(100), r.transition(100), i.setDragPosition(e), clearTimeout(t.scrollbar.dragTimeout), n.transition(0), s.hide && n.css("opacity", 1), t.params.cssMode && t.$wrapperEl.css("scroll-snap-type", "none"), t.emit("scrollbarDragStart", e);
  },
  onDragMove: function onDragMove(e) {
    var t = this.scrollbar,
        s = this.$wrapperEl,
        i = t.$el,
        a = t.$dragEl;
    this.scrollbar.isTouched && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, t.setDragPosition(e), s.transition(0), i.transition(0), a.transition(0), this.emit("scrollbarDragMove", e));
  },
  onDragEnd: function onDragEnd(e) {
    var t = this,
        s = t.params.scrollbar,
        i = t.scrollbar,
        a = t.$wrapperEl,
        n = i.$el;
    t.scrollbar.isTouched && (t.scrollbar.isTouched = !1, t.params.cssMode && (t.$wrapperEl.css("scroll-snap-type", ""), a.transition("")), s.hide && (clearTimeout(t.scrollbar.dragTimeout), t.scrollbar.dragTimeout = Utils.nextTick(function () {
      n.css("opacity", 0), n.transition(400);
    }, 1e3)), t.emit("scrollbarDragEnd", e), s.snapOnRelease && t.slideToClosest());
  },
  enableDraggable: function enableDraggable() {
    var e = this;
    if (!e.params.scrollbar.el) return;
    var t = e.scrollbar,
        s = e.touchEventsTouch,
        i = e.touchEventsDesktop,
        a = e.params,
        n = t.$el[0],
        r = !(!Support.passiveListener || !a.passiveListeners) && {
      passive: !1,
      capture: !1
    },
        l = !(!Support.passiveListener || !a.passiveListeners) && {
      passive: !0,
      capture: !1
    };
    Support.touch ? (n.addEventListener(s.start, e.scrollbar.onDragStart, r), n.addEventListener(s.move, e.scrollbar.onDragMove, r), n.addEventListener(s.end, e.scrollbar.onDragEnd, l)) : (n.addEventListener(i.start, e.scrollbar.onDragStart, r), doc.addEventListener(i.move, e.scrollbar.onDragMove, r), doc.addEventListener(i.end, e.scrollbar.onDragEnd, l));
  },
  disableDraggable: function disableDraggable() {
    var e = this;
    if (!e.params.scrollbar.el) return;
    var t = e.scrollbar,
        s = e.touchEventsTouch,
        i = e.touchEventsDesktop,
        a = e.params,
        n = t.$el[0],
        r = !(!Support.passiveListener || !a.passiveListeners) && {
      passive: !1,
      capture: !1
    },
        l = !(!Support.passiveListener || !a.passiveListeners) && {
      passive: !0,
      capture: !1
    };
    Support.touch ? (n.removeEventListener(s.start, e.scrollbar.onDragStart, r), n.removeEventListener(s.move, e.scrollbar.onDragMove, r), n.removeEventListener(s.end, e.scrollbar.onDragEnd, l)) : (n.removeEventListener(i.start, e.scrollbar.onDragStart, r), doc.removeEventListener(i.move, e.scrollbar.onDragMove, r), doc.removeEventListener(i.end, e.scrollbar.onDragEnd, l));
  },
  init: function init() {
    var e = this;
    if (!e.params.scrollbar.el) return;
    var t = e.scrollbar,
        s = e.$el,
        i = e.params.scrollbar;
    var a = $(i.el);
    e.params.uniqueNavElements && "string" == typeof i.el && a.length > 1 && 1 === s.find(i.el).length && (a = s.find(i.el));
    var n = a.find(".".concat(e.params.scrollbar.dragClass));
    0 === n.length && (n = $("<div class=\"".concat(e.params.scrollbar.dragClass, "\"></div>")), a.append(n)), Utils.extend(t, {
      $el: a,
      el: a[0],
      $dragEl: n,
      dragEl: n[0]
    }), i.draggable && t.enableDraggable();
  },
  destroy: function destroy() {
    this.scrollbar.disableDraggable();
  }
};
var Scrollbar$1 = {
  name: "scrollbar",
  params: {
    scrollbar: {
      el: null,
      dragSize: "auto",
      hide: !1,
      draggable: !1,
      snapOnRelease: !0,
      lockClass: "swiper-scrollbar-lock",
      dragClass: "swiper-scrollbar-drag"
    }
  },
  create: function create() {
    Utils.extend(this, {
      scrollbar: {
        init: Scrollbar.init.bind(this),
        destroy: Scrollbar.destroy.bind(this),
        updateSize: Scrollbar.updateSize.bind(this),
        setTranslate: Scrollbar.setTranslate.bind(this),
        setTransition: Scrollbar.setTransition.bind(this),
        enableDraggable: Scrollbar.enableDraggable.bind(this),
        disableDraggable: Scrollbar.disableDraggable.bind(this),
        setDragPosition: Scrollbar.setDragPosition.bind(this),
        getPointerPosition: Scrollbar.getPointerPosition.bind(this),
        onDragStart: Scrollbar.onDragStart.bind(this),
        onDragMove: Scrollbar.onDragMove.bind(this),
        onDragEnd: Scrollbar.onDragEnd.bind(this),
        isTouched: !1,
        timeout: null,
        dragTimeout: null
      }
    });
  },
  on: {
    init: function init() {
      this.scrollbar.init(), this.scrollbar.updateSize(), this.scrollbar.setTranslate();
    },
    update: function update() {
      this.scrollbar.updateSize();
    },
    resize: function resize() {
      this.scrollbar.updateSize();
    },
    observerUpdate: function observerUpdate() {
      this.scrollbar.updateSize();
    },
    setTranslate: function setTranslate() {
      this.scrollbar.setTranslate();
    },
    setTransition: function setTransition(e) {
      this.scrollbar.setTransition(e);
    },
    destroy: function destroy() {
      this.scrollbar.destroy();
    }
  }
};
var Parallax = {
  setTransform: function setTransform(e, t) {
    var s = this.rtl,
        i = $(e),
        a = s ? -1 : 1,
        n = i.attr("data-swiper-parallax") || "0";
    var r = i.attr("data-swiper-parallax-x"),
        l = i.attr("data-swiper-parallax-y");
    var o = i.attr("data-swiper-parallax-scale"),
        d = i.attr("data-swiper-parallax-opacity");

    if (r || l ? (r = r || "0", l = l || "0") : this.isHorizontal() ? (r = n, l = "0") : (l = n, r = "0"), r = r.indexOf("%") >= 0 ? "".concat(parseInt(r, 10) * t * a, "%") : "".concat(r * t * a, "px"), l = l.indexOf("%") >= 0 ? "".concat(parseInt(l, 10) * t, "%") : "".concat(l * t, "px"), null != d) {
      var _e62 = d - (d - 1) * (1 - Math.abs(t));

      i[0].style.opacity = _e62;
    }

    if (null == o) i.transform("translate3d(".concat(r, ", ").concat(l, ", 0px)"));else {
      var _e63 = o - (o - 1) * (1 - Math.abs(t));

      i.transform("translate3d(".concat(r, ", ").concat(l, ", 0px) scale(").concat(_e63, ")"));
    }
  },
  setTranslate: function setTranslate() {
    var e = this,
        t = e.$el,
        s = e.slides,
        i = e.progress,
        a = e.snapGrid;
    t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, s) {
      e.parallax.setTransform(s, i);
    }), s.each(function (t, s) {
      var n = s.progress;
      e.params.slidesPerGroup > 1 && "auto" !== e.params.slidesPerView && (n += Math.ceil(t / 2) - i * (a.length - 1)), n = Math.min(Math.max(n, -1), 1), $(s).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, s) {
        e.parallax.setTransform(s, n);
      });
    });
  },
  setTransition: function setTransition() {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
    var t = this.$el;
    t.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, s) {
      var i = $(s);
      var a = parseInt(i.attr("data-swiper-parallax-duration"), 10) || e;
      0 === e && (a = 0), i.transition(a);
    });
  }
};
var Parallax$1 = {
  name: "parallax",
  params: {
    parallax: {
      enabled: !1
    }
  },
  create: function create() {
    Utils.extend(this, {
      parallax: {
        setTransform: Parallax.setTransform.bind(this),
        setTranslate: Parallax.setTranslate.bind(this),
        setTransition: Parallax.setTransition.bind(this)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      this.params.parallax.enabled && (this.params.watchSlidesProgress = !0, this.originalParams.watchSlidesProgress = !0);
    },
    init: function init() {
      this.params.parallax.enabled && this.parallax.setTranslate();
    },
    setTranslate: function setTranslate() {
      this.params.parallax.enabled && this.parallax.setTranslate();
    },
    setTransition: function setTransition(e) {
      this.params.parallax.enabled && this.parallax.setTransition(e);
    }
  }
};
var Zoom = {
  getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
    if (e.targetTouches.length < 2) return 1;
    var t = e.targetTouches[0].pageX,
        s = e.targetTouches[0].pageY,
        i = e.targetTouches[1].pageX,
        a = e.targetTouches[1].pageY;
    return Math.sqrt(Math.pow(i - t, 2) + Math.pow(a - s, 2));
  },
  onGestureStart: function onGestureStart(e) {
    var t = this,
        s = t.params.zoom,
        i = t.zoom,
        a = i.gesture;

    if (i.fakeGestureTouched = !1, i.fakeGestureMoved = !1, !Support.gestures) {
      if ("touchstart" !== e.type || "touchstart" === e.type && e.targetTouches.length < 2) return;
      i.fakeGestureTouched = !0, a.scaleStart = Zoom.getDistanceBetweenTouches(e);
    }

    a.$slideEl && a.$slideEl.length || (a.$slideEl = $(e.target).closest(".swiper-slide"), 0 === a.$slideEl.length && (a.$slideEl = t.slides.eq(t.activeIndex)), a.$imageEl = a.$slideEl.find("img, svg, canvas"), a.$imageWrapEl = a.$imageEl.parent(".".concat(s.containerClass)), a.maxRatio = a.$imageWrapEl.attr("data-swiper-zoom") || s.maxRatio, 0 !== a.$imageWrapEl.length) ? (a.$imageEl.transition(0), t.zoom.isScaling = !0) : a.$imageEl = void 0;
  },
  onGestureChange: function onGestureChange(e) {
    var t = this.params.zoom,
        s = this.zoom,
        i = s.gesture;

    if (!Support.gestures) {
      if ("touchmove" !== e.type || "touchmove" === e.type && e.targetTouches.length < 2) return;
      s.fakeGestureMoved = !0, i.scaleMove = Zoom.getDistanceBetweenTouches(e);
    }

    i.$imageEl && 0 !== i.$imageEl.length && (Support.gestures ? s.scale = e.scale * s.currentScale : s.scale = i.scaleMove / i.scaleStart * s.currentScale, s.scale > i.maxRatio && (s.scale = i.maxRatio - 1 + Math.pow(s.scale - i.maxRatio + 1, .5)), s.scale < t.minRatio && (s.scale = t.minRatio + 1 - Math.pow(t.minRatio - s.scale + 1, .5)), i.$imageEl.transform("translate3d(0,0,0) scale(".concat(s.scale, ")")));
  },
  onGestureEnd: function onGestureEnd(e) {
    var t = this.params.zoom,
        s = this.zoom,
        i = s.gesture;

    if (!Support.gestures) {
      if (!s.fakeGestureTouched || !s.fakeGestureMoved) return;
      if ("touchend" !== e.type || "touchend" === e.type && e.changedTouches.length < 2 && !Device.android) return;
      s.fakeGestureTouched = !1, s.fakeGestureMoved = !1;
    }

    i.$imageEl && 0 !== i.$imageEl.length && (s.scale = Math.max(Math.min(s.scale, i.maxRatio), t.minRatio), i.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale(".concat(s.scale, ")")), s.currentScale = s.scale, s.isScaling = !1, 1 === s.scale && (i.$slideEl = void 0));
  },
  onTouchStart: function onTouchStart(e) {
    var t = this.zoom,
        s = t.gesture,
        i = t.image;
    s.$imageEl && 0 !== s.$imageEl.length && (i.isTouched || (Device.android && e.preventDefault(), i.isTouched = !0, i.touchesStart.x = "touchstart" === e.type ? e.targetTouches[0].pageX : e.pageX, i.touchesStart.y = "touchstart" === e.type ? e.targetTouches[0].pageY : e.pageY));
  },
  onTouchMove: function onTouchMove(e) {
    var t = this,
        s = t.zoom,
        i = s.gesture,
        a = s.image,
        n = s.velocity;
    if (!i.$imageEl || 0 === i.$imageEl.length) return;
    if (t.allowClick = !1, !a.isTouched || !i.$slideEl) return;
    a.isMoved || (a.width = i.$imageEl[0].offsetWidth, a.height = i.$imageEl[0].offsetHeight, a.startX = Utils.getTranslate(i.$imageWrapEl[0], "x") || 0, a.startY = Utils.getTranslate(i.$imageWrapEl[0], "y") || 0, i.slideWidth = i.$slideEl[0].offsetWidth, i.slideHeight = i.$slideEl[0].offsetHeight, i.$imageWrapEl.transition(0), t.rtl && (a.startX = -a.startX, a.startY = -a.startY));
    var r = a.width * s.scale,
        l = a.height * s.scale;

    if (!(r < i.slideWidth && l < i.slideHeight)) {
      if (a.minX = Math.min(i.slideWidth / 2 - r / 2, 0), a.maxX = -a.minX, a.minY = Math.min(i.slideHeight / 2 - l / 2, 0), a.maxY = -a.minY, a.touchesCurrent.x = "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX, a.touchesCurrent.y = "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY, !a.isMoved && !s.isScaling) {
        if (t.isHorizontal() && (Math.floor(a.minX) === Math.floor(a.startX) && a.touchesCurrent.x < a.touchesStart.x || Math.floor(a.maxX) === Math.floor(a.startX) && a.touchesCurrent.x > a.touchesStart.x)) return void (a.isTouched = !1);
        if (!t.isHorizontal() && (Math.floor(a.minY) === Math.floor(a.startY) && a.touchesCurrent.y < a.touchesStart.y || Math.floor(a.maxY) === Math.floor(a.startY) && a.touchesCurrent.y > a.touchesStart.y)) return void (a.isTouched = !1);
      }

      e.preventDefault(), e.stopPropagation(), a.isMoved = !0, a.currentX = a.touchesCurrent.x - a.touchesStart.x + a.startX, a.currentY = a.touchesCurrent.y - a.touchesStart.y + a.startY, a.currentX < a.minX && (a.currentX = a.minX + 1 - Math.pow(a.minX - a.currentX + 1, .8)), a.currentX > a.maxX && (a.currentX = a.maxX - 1 + Math.pow(a.currentX - a.maxX + 1, .8)), a.currentY < a.minY && (a.currentY = a.minY + 1 - Math.pow(a.minY - a.currentY + 1, .8)), a.currentY > a.maxY && (a.currentY = a.maxY - 1 + Math.pow(a.currentY - a.maxY + 1, .8)), n.prevPositionX || (n.prevPositionX = a.touchesCurrent.x), n.prevPositionY || (n.prevPositionY = a.touchesCurrent.y), n.prevTime || (n.prevTime = Date.now()), n.x = (a.touchesCurrent.x - n.prevPositionX) / (Date.now() - n.prevTime) / 2, n.y = (a.touchesCurrent.y - n.prevPositionY) / (Date.now() - n.prevTime) / 2, Math.abs(a.touchesCurrent.x - n.prevPositionX) < 2 && (n.x = 0), Math.abs(a.touchesCurrent.y - n.prevPositionY) < 2 && (n.y = 0), n.prevPositionX = a.touchesCurrent.x, n.prevPositionY = a.touchesCurrent.y, n.prevTime = Date.now(), i.$imageWrapEl.transform("translate3d(".concat(a.currentX, "px, ").concat(a.currentY, "px,0)"));
    }
  },
  onTouchEnd: function onTouchEnd() {
    var e = this.zoom,
        t = e.gesture,
        s = e.image,
        i = e.velocity;
    if (!t.$imageEl || 0 === t.$imageEl.length) return;
    if (!s.isTouched || !s.isMoved) return s.isTouched = !1, void (s.isMoved = !1);
    s.isTouched = !1, s.isMoved = !1;
    var a = 300,
        n = 300;
    var r = i.x * a,
        l = s.currentX + r,
        o = i.y * n,
        d = s.currentY + o;
    0 !== i.x && (a = Math.abs((l - s.currentX) / i.x)), 0 !== i.y && (n = Math.abs((d - s.currentY) / i.y));
    var p = Math.max(a, n);
    s.currentX = l, s.currentY = d;
    var c = s.width * e.scale,
        h = s.height * e.scale;
    s.minX = Math.min(t.slideWidth / 2 - c / 2, 0), s.maxX = -s.minX, s.minY = Math.min(t.slideHeight / 2 - h / 2, 0), s.maxY = -s.minY, s.currentX = Math.max(Math.min(s.currentX, s.maxX), s.minX), s.currentY = Math.max(Math.min(s.currentY, s.maxY), s.minY), t.$imageWrapEl.transition(p).transform("translate3d(".concat(s.currentX, "px, ").concat(s.currentY, "px,0)"));
  },
  onTransitionEnd: function onTransitionEnd() {
    var e = this.zoom,
        t = e.gesture;
    t.$slideEl && this.previousIndex !== this.activeIndex && (t.$imageEl.transform("translate3d(0,0,0) scale(1)"), t.$imageWrapEl.transform("translate3d(0,0,0)"), e.scale = 1, e.currentScale = 1, t.$slideEl = void 0, t.$imageEl = void 0, t.$imageWrapEl = void 0);
  },
  toggle: function toggle(e) {
    var t = this.zoom;
    t.scale && 1 !== t.scale ? t.out() : t["in"](e);
  },
  "in": function _in(e) {
    var t = this,
        s = t.zoom,
        i = t.params.zoom,
        a = s.gesture,
        n = s.image;
    if (a.$slideEl || (a.$slideEl = t.clickedSlide ? $(t.clickedSlide) : t.slides.eq(t.activeIndex), a.$imageEl = a.$slideEl.find("img, svg, canvas"), a.$imageWrapEl = a.$imageEl.parent(".".concat(i.containerClass))), !a.$imageEl || 0 === a.$imageEl.length) return;
    var r, l, o, d, p, c, h, u, m, f, g, v, w, b, y, x, S, T;
    a.$slideEl.addClass("".concat(i.zoomedSlideClass)), void 0 === n.touchesStart.x && e ? (r = "touchend" === e.type ? e.changedTouches[0].pageX : e.pageX, l = "touchend" === e.type ? e.changedTouches[0].pageY : e.pageY) : (r = n.touchesStart.x, l = n.touchesStart.y), s.scale = a.$imageWrapEl.attr("data-swiper-zoom") || i.maxRatio, s.currentScale = a.$imageWrapEl.attr("data-swiper-zoom") || i.maxRatio, e ? (S = a.$slideEl[0].offsetWidth, T = a.$slideEl[0].offsetHeight, p = (o = a.$slideEl.offset().left) + S / 2 - r, c = (d = a.$slideEl.offset().top) + T / 2 - l, m = a.$imageEl[0].offsetWidth, f = a.$imageEl[0].offsetHeight, g = m * s.scale, v = f * s.scale, y = -(w = Math.min(S / 2 - g / 2, 0)), x = -(b = Math.min(T / 2 - v / 2, 0)), (h = p * s.scale) < w && (h = w), h > y && (h = y), (u = c * s.scale) < b && (u = b), u > x && (u = x)) : (h = 0, u = 0), a.$imageWrapEl.transition(300).transform("translate3d(".concat(h, "px, ").concat(u, "px,0)")), a.$imageEl.transition(300).transform("translate3d(0,0,0) scale(".concat(s.scale, ")"));
  },
  out: function out() {
    var e = this,
        t = e.zoom,
        s = e.params.zoom,
        i = t.gesture;
    i.$slideEl || (i.$slideEl = e.clickedSlide ? $(e.clickedSlide) : e.slides.eq(e.activeIndex), i.$imageEl = i.$slideEl.find("img, svg, canvas"), i.$imageWrapEl = i.$imageEl.parent(".".concat(s.containerClass))), i.$imageEl && 0 !== i.$imageEl.length && (t.scale = 1, t.currentScale = 1, i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"), i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"), i.$slideEl.removeClass("".concat(s.zoomedSlideClass)), i.$slideEl = void 0);
  },
  enable: function enable() {
    var e = this,
        t = e.zoom;
    if (t.enabled) return;
    t.enabled = !0;
    var s = !("touchstart" !== e.touchEvents.start || !Support.passiveListener || !e.params.passiveListeners) && {
      passive: !0,
      capture: !1
    },
        i = !Support.passiveListener || {
      passive: !1,
      capture: !0
    };
    Support.gestures ? (e.$wrapperEl.on("gesturestart", ".swiper-slide", t.onGestureStart, s), e.$wrapperEl.on("gesturechange", ".swiper-slide", t.onGestureChange, s), e.$wrapperEl.on("gestureend", ".swiper-slide", t.onGestureEnd, s)) : "touchstart" === e.touchEvents.start && (e.$wrapperEl.on(e.touchEvents.start, ".swiper-slide", t.onGestureStart, s), e.$wrapperEl.on(e.touchEvents.move, ".swiper-slide", t.onGestureChange, i), e.$wrapperEl.on(e.touchEvents.end, ".swiper-slide", t.onGestureEnd, s), e.touchEvents.cancel && e.$wrapperEl.on(e.touchEvents.cancel, ".swiper-slide", t.onGestureEnd, s)), e.$wrapperEl.on(e.touchEvents.move, ".".concat(e.params.zoom.containerClass), t.onTouchMove, i);
  },
  disable: function disable() {
    var e = this,
        t = e.zoom;
    if (!t.enabled) return;
    e.zoom.enabled = !1;
    var s = !("touchstart" !== e.touchEvents.start || !Support.passiveListener || !e.params.passiveListeners) && {
      passive: !0,
      capture: !1
    },
        i = !Support.passiveListener || {
      passive: !1,
      capture: !0
    };
    Support.gestures ? (e.$wrapperEl.off("gesturestart", ".swiper-slide", t.onGestureStart, s), e.$wrapperEl.off("gesturechange", ".swiper-slide", t.onGestureChange, s), e.$wrapperEl.off("gestureend", ".swiper-slide", t.onGestureEnd, s)) : "touchstart" === e.touchEvents.start && (e.$wrapperEl.off(e.touchEvents.start, ".swiper-slide", t.onGestureStart, s), e.$wrapperEl.off(e.touchEvents.move, ".swiper-slide", t.onGestureChange, i), e.$wrapperEl.off(e.touchEvents.end, ".swiper-slide", t.onGestureEnd, s), e.touchEvents.cancel && e.$wrapperEl.off(e.touchEvents.cancel, ".swiper-slide", t.onGestureEnd, s)), e.$wrapperEl.off(e.touchEvents.move, ".".concat(e.params.zoom.containerClass), t.onTouchMove, i);
  }
};
var Zoom$1 = {
  name: "zoom",
  params: {
    zoom: {
      enabled: !1,
      maxRatio: 3,
      minRatio: 1,
      toggle: !0,
      containerClass: "swiper-zoom-container",
      zoomedSlideClass: "swiper-slide-zoomed"
    }
  },
  create: function create() {
    var e = this,
        t = {
      enabled: !1,
      scale: 1,
      currentScale: 1,
      isScaling: !1,
      gesture: {
        $slideEl: void 0,
        slideWidth: void 0,
        slideHeight: void 0,
        $imageEl: void 0,
        $imageWrapEl: void 0,
        maxRatio: 3
      },
      image: {
        isTouched: void 0,
        isMoved: void 0,
        currentX: void 0,
        currentY: void 0,
        minX: void 0,
        minY: void 0,
        maxX: void 0,
        maxY: void 0,
        width: void 0,
        height: void 0,
        startX: void 0,
        startY: void 0,
        touchesStart: {},
        touchesCurrent: {}
      },
      velocity: {
        x: void 0,
        y: void 0,
        prevPositionX: void 0,
        prevPositionY: void 0,
        prevTime: void 0
      }
    };
    "onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function (s) {
      t[s] = Zoom[s].bind(e);
    }), Utils.extend(e, {
      zoom: t
    });
    var s = 1;
    Object.defineProperty(e.zoom, "scale", {
      get: function get() {
        return s;
      },
      set: function set(t) {
        if (s !== t) {
          var _s21 = e.zoom.gesture.$imageEl ? e.zoom.gesture.$imageEl[0] : void 0,
              i = e.zoom.gesture.$slideEl ? e.zoom.gesture.$slideEl[0] : void 0;

          e.emit("zoomChange", t, _s21, i);
        }

        s = t;
      }
    });
  },
  on: {
    init: function init() {
      var e = this;
      e.params.zoom.enabled && e.zoom.enable();
    },
    destroy: function destroy() {
      this.zoom.disable();
    },
    touchStart: function touchStart(e) {
      this.zoom.enabled && this.zoom.onTouchStart(e);
    },
    touchEnd: function touchEnd(e) {
      this.zoom.enabled && this.zoom.onTouchEnd(e);
    },
    doubleTap: function doubleTap(e) {
      var t = this;
      t.params.zoom.enabled && t.zoom.enabled && t.params.zoom.toggle && t.zoom.toggle(e);
    },
    transitionEnd: function transitionEnd() {
      var e = this;
      e.zoom.enabled && e.params.zoom.enabled && e.zoom.onTransitionEnd();
    },
    slideChange: function slideChange() {
      var e = this;
      e.zoom.enabled && e.params.zoom.enabled && e.params.cssMode && e.zoom.onTransitionEnd();
    }
  }
};
var Lazy = {
  loadInSlide: function loadInSlide(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
    var s = this,
        i = s.params.lazy;
    if (void 0 === e) return;
    if (0 === s.slides.length) return;
    var a = s.virtual && s.params.virtual.enabled ? s.$wrapperEl.children(".".concat(s.params.slideClass, "[data-swiper-slide-index=\"").concat(e, "\"]")) : s.slides.eq(e);
    var n = a.find(".".concat(i.elementClass, ":not(.").concat(i.loadedClass, "):not(.").concat(i.loadingClass, ")"));
    !a.hasClass(i.elementClass) || a.hasClass(i.loadedClass) || a.hasClass(i.loadingClass) || (n = n.add(a[0])), 0 !== n.length && n.each(function (e, n) {
      var r = $(n);
      r.addClass(i.loadingClass);
      var l = r.attr("data-background"),
          o = r.attr("data-src"),
          d = r.attr("data-srcset"),
          p = r.attr("data-sizes");
      s.loadImage(r[0], o || l, d, p, !1, function () {
        if (null != s && s && (!s || s.params) && !s.destroyed) {
          if (l ? (r.css("background-image", "url(\"".concat(l, "\")")), r.removeAttr("data-background")) : (d && (r.attr("srcset", d), r.removeAttr("data-srcset")), p && (r.attr("sizes", p), r.removeAttr("data-sizes")), o && (r.attr("src", o), r.removeAttr("data-src"))), r.addClass(i.loadedClass).removeClass(i.loadingClass), a.find(".".concat(i.preloaderClass)).remove(), s.params.loop && t) {
            var _e64 = a.attr("data-swiper-slide-index");

            if (a.hasClass(s.params.slideDuplicateClass)) {
              var _t36 = s.$wrapperEl.children("[data-swiper-slide-index=\"".concat(_e64, "\"]:not(.").concat(s.params.slideDuplicateClass, ")"));

              s.lazy.loadInSlide(_t36.index(), !1);
            } else {
              var _t37 = s.$wrapperEl.children(".".concat(s.params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(_e64, "\"]"));

              s.lazy.loadInSlide(_t37.index(), !1);
            }
          }

          s.emit("lazyImageReady", a[0], r[0]);
        }
      }), s.emit("lazyImageLoad", a[0], r[0]);
    });
  },
  load: function load() {
    var e = this,
        t = e.$wrapperEl,
        s = e.params,
        i = e.slides,
        a = e.activeIndex,
        n = e.virtual && s.virtual.enabled,
        r = s.lazy;
    var l = s.slidesPerView;

    function o(e) {
      if (n) {
        if (t.children(".".concat(s.slideClass, "[data-swiper-slide-index=\"").concat(e, "\"]")).length) return !0;
      } else if (i[e]) return !0;

      return !1;
    }

    function d(e) {
      return n ? $(e).attr("data-swiper-slide-index") : $(e).index();
    }

    if ("auto" === l && (l = 0), e.lazy.initialImageLoaded || (e.lazy.initialImageLoaded = !0), e.params.watchSlidesVisibility) t.children(".".concat(s.slideVisibleClass)).each(function (t, s) {
      var i = n ? $(s).attr("data-swiper-slide-index") : $(s).index();
      e.lazy.loadInSlide(i);
    });else if (l > 1) for (var _t38 = a; _t38 < a + l; _t38 += 1) {
      o(_t38) && e.lazy.loadInSlide(_t38);
    } else e.lazy.loadInSlide(a);
    if (r.loadPrevNext) if (l > 1 || r.loadPrevNextAmount && r.loadPrevNextAmount > 1) {
      var _t39 = r.loadPrevNextAmount,
          _s22 = l,
          _n10 = Math.min(a + _s22 + Math.max(_t39, _s22), i.length),
          _d3 = Math.max(a - Math.max(_s22, _t39), 0);

      for (var _t40 = a + l; _t40 < _n10; _t40 += 1) {
        o(_t40) && e.lazy.loadInSlide(_t40);
      }

      for (var _t41 = _d3; _t41 < a; _t41 += 1) {
        o(_t41) && e.lazy.loadInSlide(_t41);
      }
    } else {
      var _i16 = t.children(".".concat(s.slideNextClass));

      _i16.length > 0 && e.lazy.loadInSlide(d(_i16));

      var _a20 = t.children(".".concat(s.slidePrevClass));

      _a20.length > 0 && e.lazy.loadInSlide(d(_a20));
    }
  }
};
var Lazy$1 = {
  name: "lazy",
  params: {
    lazy: {
      enabled: !1,
      loadPrevNext: !1,
      loadPrevNextAmount: 1,
      loadOnTransitionStart: !1,
      elementClass: "swiper-lazy",
      loadingClass: "swiper-lazy-loading",
      loadedClass: "swiper-lazy-loaded",
      preloaderClass: "swiper-lazy-preloader"
    }
  },
  create: function create() {
    Utils.extend(this, {
      lazy: {
        initialImageLoaded: !1,
        load: Lazy.load.bind(this),
        loadInSlide: Lazy.loadInSlide.bind(this)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var e = this;
      e.params.lazy.enabled && e.params.preloadImages && (e.params.preloadImages = !1);
    },
    init: function init() {
      var e = this;
      e.params.lazy.enabled && !e.params.loop && 0 === e.params.initialSlide && e.lazy.load();
    },
    scroll: function scroll() {
      var e = this;
      e.params.freeMode && !e.params.freeModeSticky && e.lazy.load();
    },
    resize: function resize() {
      var e = this;
      e.params.lazy.enabled && e.lazy.load();
    },
    scrollbarDragMove: function scrollbarDragMove() {
      var e = this;
      e.params.lazy.enabled && e.lazy.load();
    },
    transitionStart: function transitionStart() {
      var e = this;
      e.params.lazy.enabled && (e.params.lazy.loadOnTransitionStart || !e.params.lazy.loadOnTransitionStart && !e.lazy.initialImageLoaded) && e.lazy.load();
    },
    transitionEnd: function transitionEnd() {
      var e = this;
      e.params.lazy.enabled && !e.params.lazy.loadOnTransitionStart && e.lazy.load();
    },
    slideChange: function slideChange() {
      var e = this;
      e.params.lazy.enabled && e.params.cssMode && e.lazy.load();
    }
  }
};
var Controller = {
  LinearSpline: function LinearSpline(e, t) {
    var s = function () {
      var e, t, s;
      return function (i, a) {
        for (t = -1, e = i.length; e - t > 1;) {
          i[s = e + t >> 1] <= a ? t = s : e = s;
        }

        return e;
      };
    }();

    var i, a;
    return this.x = e, this.y = t, this.lastIndex = e.length - 1, this.interpolate = function (e) {
      return e ? (a = s(this.x, e), i = a - 1, (e - this.x[i]) * (this.y[a] - this.y[i]) / (this.x[a] - this.x[i]) + this.y[i]) : 0;
    }, this;
  },
  getInterpolateFunction: function getInterpolateFunction(e) {
    var t = this;
    t.controller.spline || (t.controller.spline = t.params.loop ? new Controller.LinearSpline(t.slidesGrid, e.slidesGrid) : new Controller.LinearSpline(t.snapGrid, e.snapGrid));
  },
  setTranslate: function setTranslate(e, t) {
    var s = this,
        i = s.controller.control;
    var a, n;

    function r(e) {
      var t = s.rtlTranslate ? -s.translate : s.translate;
      "slide" === s.params.controller.by && (s.controller.getInterpolateFunction(e), n = -s.controller.spline.interpolate(-t)), n && "container" !== s.params.controller.by || (a = (e.maxTranslate() - e.minTranslate()) / (s.maxTranslate() - s.minTranslate()), n = (t - s.minTranslate()) * a + e.minTranslate()), s.params.controller.inverse && (n = e.maxTranslate() - n), e.updateProgress(n), e.setTranslate(n, s), e.updateActiveIndex(), e.updateSlidesClasses();
    }

    if (Array.isArray(i)) for (var _e65 = 0; _e65 < i.length; _e65 += 1) {
      i[_e65] !== t && i[_e65] instanceof Swiper && r(i[_e65]);
    } else i instanceof Swiper && t !== i && r(i);
  },
  setTransition: function setTransition(e, t) {
    var s = this,
        i = s.controller.control;
    var a;

    function n(t) {
      t.setTransition(e, s), 0 !== e && (t.transitionStart(), t.params.autoHeight && Utils.nextTick(function () {
        t.updateAutoHeight();
      }), t.$wrapperEl.transitionEnd(function () {
        i && (t.params.loop && "slide" === s.params.controller.by && t.loopFix(), t.transitionEnd());
      }));
    }

    if (Array.isArray(i)) for (a = 0; a < i.length; a += 1) {
      i[a] !== t && i[a] instanceof Swiper && n(i[a]);
    } else i instanceof Swiper && t !== i && n(i);
  }
};
var Controller$1 = {
  name: "controller",
  params: {
    controller: {
      control: void 0,
      inverse: !1,
      by: "slide"
    }
  },
  create: function create() {
    Utils.extend(this, {
      controller: {
        control: this.params.controller.control,
        getInterpolateFunction: Controller.getInterpolateFunction.bind(this),
        setTranslate: Controller.setTranslate.bind(this),
        setTransition: Controller.setTransition.bind(this)
      }
    });
  },
  on: {
    update: function update() {
      var e = this;
      e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline);
    },
    resize: function resize() {
      var e = this;
      e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline);
    },
    observerUpdate: function observerUpdate() {
      var e = this;
      e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline);
    },
    setTranslate: function setTranslate(e, t) {
      this.controller.control && this.controller.setTranslate(e, t);
    },
    setTransition: function setTransition(e, t) {
      this.controller.control && this.controller.setTransition(e, t);
    }
  }
};
var a11y = {
  makeElFocusable: function makeElFocusable(e) {
    return e.attr("tabIndex", "0"), e;
  },
  addElRole: function addElRole(e, t) {
    return e.attr("role", t), e;
  },
  addElLabel: function addElLabel(e, t) {
    return e.attr("aria-label", t), e;
  },
  disableEl: function disableEl(e) {
    return e.attr("aria-disabled", !0), e;
  },
  enableEl: function enableEl(e) {
    return e.attr("aria-disabled", !1), e;
  },
  onEnterKey: function onEnterKey(e) {
    var t = this,
        s = t.params.a11y;
    if (13 !== e.keyCode) return;
    var i = $(e.target);
    t.navigation && t.navigation.$nextEl && i.is(t.navigation.$nextEl) && (t.isEnd && !t.params.loop || t.slideNext(), t.isEnd ? t.a11y.notify(s.lastSlideMessage) : t.a11y.notify(s.nextSlideMessage)), t.navigation && t.navigation.$prevEl && i.is(t.navigation.$prevEl) && (t.isBeginning && !t.params.loop || t.slidePrev(), t.isBeginning ? t.a11y.notify(s.firstSlideMessage) : t.a11y.notify(s.prevSlideMessage)), t.pagination && i.is(".".concat(t.params.pagination.bulletClass)) && i[0].click();
  },
  notify: function notify(e) {
    var t = this.a11y.liveRegion;
    0 !== t.length && (t.html(""), t.html(e));
  },
  updateNavigation: function updateNavigation() {
    var e = this;
    if (e.params.loop || !e.navigation) return;
    var _e$navigation3 = e.navigation,
        t = _e$navigation3.$nextEl,
        s = _e$navigation3.$prevEl;
    s && s.length > 0 && (e.isBeginning ? e.a11y.disableEl(s) : e.a11y.enableEl(s)), t && t.length > 0 && (e.isEnd ? e.a11y.disableEl(t) : e.a11y.enableEl(t));
  },
  updatePagination: function updatePagination() {
    var e = this,
        t = e.params.a11y;
    e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.bullets.each(function (s, i) {
      var a = $(i);
      e.a11y.makeElFocusable(a), e.a11y.addElRole(a, "button"), e.a11y.addElLabel(a, t.paginationBulletMessage.replace(/{{index}}/, a.index() + 1));
    });
  },
  init: function init() {
    var e = this;
    e.$el.append(e.a11y.liveRegion);
    var t = e.params.a11y;
    var s, i;
    e.navigation && e.navigation.$nextEl && (s = e.navigation.$nextEl), e.navigation && e.navigation.$prevEl && (i = e.navigation.$prevEl), s && (e.a11y.makeElFocusable(s), e.a11y.addElRole(s, "button"), e.a11y.addElLabel(s, t.nextSlideMessage), s.on("keydown", e.a11y.onEnterKey)), i && (e.a11y.makeElFocusable(i), e.a11y.addElRole(i, "button"), e.a11y.addElLabel(i, t.prevSlideMessage), i.on("keydown", e.a11y.onEnterKey)), e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.$el.on("keydown", ".".concat(e.params.pagination.bulletClass), e.a11y.onEnterKey);
  },
  destroy: function destroy() {
    var e = this;
    var t, s;
    e.a11y.liveRegion && e.a11y.liveRegion.length > 0 && e.a11y.liveRegion.remove(), e.navigation && e.navigation.$nextEl && (t = e.navigation.$nextEl), e.navigation && e.navigation.$prevEl && (s = e.navigation.$prevEl), t && t.off("keydown", e.a11y.onEnterKey), s && s.off("keydown", e.a11y.onEnterKey), e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.$el.off("keydown", ".".concat(e.params.pagination.bulletClass), e.a11y.onEnterKey);
  }
};
var A11y = {
  name: "a11y",
  params: {
    a11y: {
      enabled: !0,
      notificationClass: "swiper-notification",
      prevSlideMessage: "Previous slide",
      nextSlideMessage: "Next slide",
      firstSlideMessage: "This is the first slide",
      lastSlideMessage: "This is the last slide",
      paginationBulletMessage: "Go to slide {{index}}"
    }
  },
  create: function create() {
    var e = this;
    Utils.extend(e, {
      a11y: {
        liveRegion: $("<span class=\"".concat(e.params.a11y.notificationClass, "\" aria-live=\"assertive\" aria-atomic=\"true\"></span>"))
      }
    }), Object.keys(a11y).forEach(function (t) {
      e.a11y[t] = a11y[t].bind(e);
    });
  },
  on: {
    init: function init() {
      this.params.a11y.enabled && (this.a11y.init(), this.a11y.updateNavigation());
    },
    toEdge: function toEdge() {
      this.params.a11y.enabled && this.a11y.updateNavigation();
    },
    fromEdge: function fromEdge() {
      this.params.a11y.enabled && this.a11y.updateNavigation();
    },
    paginationUpdate: function paginationUpdate() {
      this.params.a11y.enabled && this.a11y.updatePagination();
    },
    destroy: function destroy() {
      this.params.a11y.enabled && this.a11y.destroy();
    }
  }
};
var History = {
  init: function init() {
    var e = this;
    if (!e.params.history) return;
    if (!win.history || !win.history.pushState) return e.params.history.enabled = !1, void (e.params.hashNavigation.enabled = !0);
    var t = e.history;
    t.initialized = !0, t.paths = History.getPathValues(), (t.paths.key || t.paths.value) && (t.scrollToSlide(0, t.paths.value, e.params.runCallbacksOnInit), e.params.history.replaceState || win.addEventListener("popstate", e.history.setHistoryPopState));
  },
  destroy: function destroy() {
    var e = this;
    e.params.history.replaceState || win.removeEventListener("popstate", e.history.setHistoryPopState);
  },
  setHistoryPopState: function setHistoryPopState() {
    this.history.paths = History.getPathValues(), this.history.scrollToSlide(this.params.speed, this.history.paths.value, !1);
  },
  getPathValues: function getPathValues() {
    var e = win.location.pathname.slice(1).split("/").filter(function (e) {
      return "" !== e;
    }),
        t = e.length;
    return {
      key: e[t - 2],
      value: e[t - 1]
    };
  },
  setHistory: function setHistory(e, t) {
    if (!this.history.initialized || !this.params.history.enabled) return;
    var s = this.slides.eq(t);
    var i = History.slugify(s.attr("data-history"));
    win.location.pathname.includes(e) || (i = "".concat(e, "/").concat(i));
    var a = win.history.state;
    a && a.value === i || (this.params.history.replaceState ? win.history.replaceState({
      value: i
    }, null, i) : win.history.pushState({
      value: i
    }, null, i));
  },
  slugify: function slugify(e) {
    return e.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
  },
  scrollToSlide: function scrollToSlide(e, t, s) {
    var i = this;
    if (t) for (var a = 0, n = i.slides.length; a < n; a += 1) {
      var _n11 = i.slides.eq(a);

      if (History.slugify(_n11.attr("data-history")) === t && !_n11.hasClass(i.params.slideDuplicateClass)) {
        var _t42 = _n11.index();

        i.slideTo(_t42, e, s);
      }
    } else i.slideTo(0, e, s);
  }
};
var History$1 = {
  name: "history",
  params: {
    history: {
      enabled: !1,
      replaceState: !1,
      key: "slides"
    }
  },
  create: function create() {
    Utils.extend(this, {
      history: {
        init: History.init.bind(this),
        setHistory: History.setHistory.bind(this),
        setHistoryPopState: History.setHistoryPopState.bind(this),
        scrollToSlide: History.scrollToSlide.bind(this),
        destroy: History.destroy.bind(this)
      }
    });
  },
  on: {
    init: function init() {
      var e = this;
      e.params.history.enabled && e.history.init();
    },
    destroy: function destroy() {
      var e = this;
      e.params.history.enabled && e.history.destroy();
    },
    transitionEnd: function transitionEnd() {
      var e = this;
      e.history.initialized && e.history.setHistory(e.params.history.key, e.activeIndex);
    },
    slideChange: function slideChange() {
      var e = this;
      e.history.initialized && e.params.cssMode && e.history.setHistory(e.params.history.key, e.activeIndex);
    }
  }
};
var HashNavigation = {
  onHashCange: function onHashCange() {
    var e = this,
        t = doc.location.hash.replace("#", "");

    if (t !== e.slides.eq(e.activeIndex).attr("data-hash")) {
      var s = e.$wrapperEl.children(".".concat(e.params.slideClass, "[data-hash=\"").concat(t, "\"]")).index();
      if (void 0 === s) return;
      e.slideTo(s);
    }
  },
  setHash: function setHash() {
    var e = this;
    if (e.hashNavigation.initialized && e.params.hashNavigation.enabled) if (e.params.hashNavigation.replaceState && win.history && win.history.replaceState) win.history.replaceState(null, null, "#".concat(e.slides.eq(e.activeIndex).attr("data-hash")) || "");else {
      var _t43 = e.slides.eq(e.activeIndex),
          s = _t43.attr("data-hash") || _t43.attr("data-history");

      doc.location.hash = s || "";
    }
  },
  init: function init() {
    var e = this;
    if (!e.params.hashNavigation.enabled || e.params.history && e.params.history.enabled) return;
    e.hashNavigation.initialized = !0;
    var t = doc.location.hash.replace("#", "");

    if (t) {
      var s = 0;

      for (var i = 0, a = e.slides.length; i < a; i += 1) {
        var _a21 = e.slides.eq(i);

        if ((_a21.attr("data-hash") || _a21.attr("data-history")) === t && !_a21.hasClass(e.params.slideDuplicateClass)) {
          var _t44 = _a21.index();

          e.slideTo(_t44, s, e.params.runCallbacksOnInit, !0);
        }
      }
    }

    e.params.hashNavigation.watchState && $(win).on("hashchange", e.hashNavigation.onHashCange);
  },
  destroy: function destroy() {
    var e = this;
    e.params.hashNavigation.watchState && $(win).off("hashchange", e.hashNavigation.onHashCange);
  }
};
var HashNavigation$1 = {
  name: "hash-navigation",
  params: {
    hashNavigation: {
      enabled: !1,
      replaceState: !1,
      watchState: !1
    }
  },
  create: function create() {
    Utils.extend(this, {
      hashNavigation: {
        initialized: !1,
        init: HashNavigation.init.bind(this),
        destroy: HashNavigation.destroy.bind(this),
        setHash: HashNavigation.setHash.bind(this),
        onHashCange: HashNavigation.onHashCange.bind(this)
      }
    });
  },
  on: {
    init: function init() {
      var e = this;
      e.params.hashNavigation.enabled && e.hashNavigation.init();
    },
    destroy: function destroy() {
      var e = this;
      e.params.hashNavigation.enabled && e.hashNavigation.destroy();
    },
    transitionEnd: function transitionEnd() {
      var e = this;
      e.hashNavigation.initialized && e.hashNavigation.setHash();
    },
    slideChange: function slideChange() {
      var e = this;
      e.hashNavigation.initialized && e.params.cssMode && e.hashNavigation.setHash();
    }
  }
};
var Autoplay = {
  run: function run() {
    var e = this,
        t = e.slides.eq(e.activeIndex);
    var s = e.params.autoplay.delay;
    t.attr("data-swiper-autoplay") && (s = t.attr("data-swiper-autoplay") || e.params.autoplay.delay), clearTimeout(e.autoplay.timeout), e.autoplay.timeout = Utils.nextTick(function () {
      e.params.autoplay.reverseDirection ? e.params.loop ? (e.loopFix(), e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.isBeginning ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (e.slideTo(e.slides.length - 1, e.params.speed, !0, !0), e.emit("autoplay")) : (e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.params.loop ? (e.loopFix(), e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")) : e.isEnd ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (e.slideTo(0, e.params.speed, !0, !0), e.emit("autoplay")) : (e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")), e.params.cssMode && e.autoplay.running && e.autoplay.run();
    }, s);
  },
  start: function start() {
    return void 0 === this.autoplay.timeout && !this.autoplay.running && (this.autoplay.running = !0, this.emit("autoplayStart"), this.autoplay.run(), !0);
  },
  stop: function stop() {
    var e = this;
    return !!e.autoplay.running && void 0 !== e.autoplay.timeout && (e.autoplay.timeout && (clearTimeout(e.autoplay.timeout), e.autoplay.timeout = void 0), e.autoplay.running = !1, e.emit("autoplayStop"), !0);
  },
  pause: function pause(e) {
    var t = this;
    t.autoplay.running && (t.autoplay.paused || (t.autoplay.timeout && clearTimeout(t.autoplay.timeout), t.autoplay.paused = !0, 0 !== e && t.params.autoplay.waitForTransition ? (t.$wrapperEl[0].addEventListener("transitionend", t.autoplay.onTransitionEnd), t.$wrapperEl[0].addEventListener("webkitTransitionEnd", t.autoplay.onTransitionEnd)) : (t.autoplay.paused = !1, t.autoplay.run())));
  }
};
var Autoplay$1 = {
  name: "autoplay",
  params: {
    autoplay: {
      enabled: !1,
      delay: 3e3,
      waitForTransition: !0,
      disableOnInteraction: !0,
      stopOnLastSlide: !1,
      reverseDirection: !1
    }
  },
  create: function create() {
    var e = this;
    Utils.extend(e, {
      autoplay: {
        running: !1,
        paused: !1,
        run: Autoplay.run.bind(e),
        start: Autoplay.start.bind(e),
        stop: Autoplay.stop.bind(e),
        pause: Autoplay.pause.bind(e),
        onVisibilityChange: function onVisibilityChange() {
          "hidden" === document.visibilityState && e.autoplay.running && e.autoplay.pause(), "visible" === document.visibilityState && e.autoplay.paused && (e.autoplay.run(), e.autoplay.paused = !1);
        },
        onTransitionEnd: function onTransitionEnd(t) {
          e && !e.destroyed && e.$wrapperEl && t.target === this && (e.$wrapperEl[0].removeEventListener("transitionend", e.autoplay.onTransitionEnd), e.$wrapperEl[0].removeEventListener("webkitTransitionEnd", e.autoplay.onTransitionEnd), e.autoplay.paused = !1, e.autoplay.running ? e.autoplay.run() : e.autoplay.stop());
        }
      }
    });
  },
  on: {
    init: function init() {
      var e = this;
      e.params.autoplay.enabled && (e.autoplay.start(), document.addEventListener("visibilitychange", e.autoplay.onVisibilityChange));
    },
    beforeTransitionStart: function beforeTransitionStart(e, t) {
      var s = this;
      s.autoplay.running && (t || !s.params.autoplay.disableOnInteraction ? s.autoplay.pause(e) : s.autoplay.stop());
    },
    sliderFirstMove: function sliderFirstMove() {
      var e = this;
      e.autoplay.running && (e.params.autoplay.disableOnInteraction ? e.autoplay.stop() : e.autoplay.pause());
    },
    touchEnd: function touchEnd() {
      var e = this;
      e.params.cssMode && e.autoplay.paused && !e.params.autoplay.disableOnInteraction && e.autoplay.run();
    },
    destroy: function destroy() {
      var e = this;
      e.autoplay.running && e.autoplay.stop(), document.removeEventListener("visibilitychange", e.autoplay.onVisibilityChange);
    }
  }
};
var Fade = {
  setTranslate: function setTranslate() {
    var e = this,
        t = e.slides;

    for (var s = 0; s < t.length; s += 1) {
      var _t45 = e.slides.eq(s);

      var i = -_t45[0].swiperSlideOffset;
      e.params.virtualTranslate || (i -= e.translate);
      var a = 0;
      e.isHorizontal() || (a = i, i = 0);
      var n = e.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(_t45[0].progress), 0) : 1 + Math.min(Math.max(_t45[0].progress, -1), 0);

      _t45.css({
        opacity: n
      }).transform("translate3d(".concat(i, "px, ").concat(a, "px, 0px)"));
    }
  },
  setTransition: function setTransition(e) {
    var t = this,
        s = t.slides,
        i = t.$wrapperEl;

    if (s.transition(e), t.params.virtualTranslate && 0 !== e) {
      var _e66 = !1;

      s.transitionEnd(function () {
        if (_e66) return;
        if (!t || t.destroyed) return;
        _e66 = !0, t.animating = !1;
        var s = ["webkitTransitionEnd", "transitionend"];

        for (var _e67 = 0; _e67 < s.length; _e67 += 1) {
          i.trigger(s[_e67]);
        }
      });
    }
  }
};
var EffectFade = {
  name: "effect-fade",
  params: {
    fadeEffect: {
      crossFade: !1
    }
  },
  create: function create() {
    Utils.extend(this, {
      fadeEffect: {
        setTranslate: Fade.setTranslate.bind(this),
        setTransition: Fade.setTransition.bind(this)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      if ("fade" !== this.params.effect) return;
      this.classNames.push("".concat(this.params.containerModifierClass, "fade"));
      var e = {
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: !0,
        spaceBetween: 0,
        virtualTranslate: !0
      };
      Utils.extend(this.params, e), Utils.extend(this.originalParams, e);
    },
    setTranslate: function setTranslate() {
      "fade" === this.params.effect && this.fadeEffect.setTranslate();
    },
    setTransition: function setTransition(e) {
      "fade" === this.params.effect && this.fadeEffect.setTransition(e);
    }
  }
};
var Cube = {
  setTranslate: function setTranslate() {
    var e = this.$el,
        t = this.$wrapperEl,
        s = this.slides,
        i = this.width,
        a = this.height,
        n = this.rtlTranslate,
        r = this.size,
        l = this.params.cubeEffect,
        o = this.isHorizontal(),
        d = this.virtual && this.params.virtual.enabled;
    var p,
        c = 0;
    l.shadow && (o ? (0 === (p = t.find(".swiper-cube-shadow")).length && (p = $('<div class="swiper-cube-shadow"></div>'), t.append(p)), p.css({
      height: "".concat(i, "px")
    })) : 0 === (p = e.find(".swiper-cube-shadow")).length && (p = $('<div class="swiper-cube-shadow"></div>'), e.append(p)));

    for (var _e68 = 0; _e68 < s.length; _e68 += 1) {
      var _t46 = s.eq(_e68);

      var _i17 = _e68;
      d && (_i17 = parseInt(_t46.attr("data-swiper-slide-index"), 10));

      var _a22 = 90 * _i17,
          _p2 = Math.floor(_a22 / 360);

      n && (_a22 = -_a22, _p2 = Math.floor(-_a22 / 360));

      var _h2 = Math.max(Math.min(_t46[0].progress, 1), -1);

      var u = 0,
          m = 0,
          f = 0;
      _i17 % 4 == 0 ? (u = 4 * -_p2 * r, f = 0) : (_i17 - 1) % 4 == 0 ? (u = 0, f = 4 * -_p2 * r) : (_i17 - 2) % 4 == 0 ? (u = r + 4 * _p2 * r, f = r) : (_i17 - 3) % 4 == 0 && (u = -r, f = 3 * r + 4 * r * _p2), n && (u = -u), o || (m = u, u = 0);
      var g = "rotateX(".concat(o ? 0 : -_a22, "deg) rotateY(").concat(o ? _a22 : 0, "deg) translate3d(").concat(u, "px, ").concat(m, "px, ").concat(f, "px)");

      if (_h2 <= 1 && _h2 > -1 && (c = 90 * _i17 + 90 * _h2, n && (c = 90 * -_i17 - 90 * _h2)), _t46.transform(g), l.slideShadows) {
        var _e69 = o ? _t46.find(".swiper-slide-shadow-left") : _t46.find(".swiper-slide-shadow-top"),
            _s23 = o ? _t46.find(".swiper-slide-shadow-right") : _t46.find(".swiper-slide-shadow-bottom");

        0 === _e69.length && (_e69 = $("<div class=\"swiper-slide-shadow-".concat(o ? "left" : "top", "\"></div>")), _t46.append(_e69)), 0 === _s23.length && (_s23 = $("<div class=\"swiper-slide-shadow-".concat(o ? "right" : "bottom", "\"></div>")), _t46.append(_s23)), _e69.length && (_e69[0].style.opacity = Math.max(-_h2, 0)), _s23.length && (_s23[0].style.opacity = Math.max(_h2, 0));
      }
    }

    if (t.css({
      "-webkit-transform-origin": "50% 50% -".concat(r / 2, "px"),
      "-moz-transform-origin": "50% 50% -".concat(r / 2, "px"),
      "-ms-transform-origin": "50% 50% -".concat(r / 2, "px"),
      "transform-origin": "50% 50% -".concat(r / 2, "px")
    }), l.shadow) if (o) p.transform("translate3d(0px, ".concat(i / 2 + l.shadowOffset, "px, ").concat(-i / 2, "px) rotateX(90deg) rotateZ(0deg) scale(").concat(l.shadowScale, ")"));else {
      var _e70 = Math.abs(c) - 90 * Math.floor(Math.abs(c) / 90),
          _t47 = 1.5 - (Math.sin(2 * _e70 * Math.PI / 360) / 2 + Math.cos(2 * _e70 * Math.PI / 360) / 2),
          _s24 = l.shadowScale,
          _i18 = l.shadowScale / _t47,
          _n12 = l.shadowOffset;

      p.transform("scale3d(".concat(_s24, ", 1, ").concat(_i18, ") translate3d(0px, ").concat(a / 2 + _n12, "px, ").concat(-a / 2 / _i18, "px) rotateX(-90deg)"));
    }
    var h = Browser.isSafari || Browser.isUiWebView ? -r / 2 : 0;
    t.transform("translate3d(0px,0,".concat(h, "px) rotateX(").concat(this.isHorizontal() ? 0 : c, "deg) rotateY(").concat(this.isHorizontal() ? -c : 0, "deg)"));
  },
  setTransition: function setTransition(e) {
    var t = this.$el,
        s = this.slides;
    s.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), this.params.cubeEffect.shadow && !this.isHorizontal() && t.find(".swiper-cube-shadow").transition(e);
  }
};
var EffectCube = {
  name: "effect-cube",
  params: {
    cubeEffect: {
      slideShadows: !0,
      shadow: !0,
      shadowOffset: 20,
      shadowScale: .94
    }
  },
  create: function create() {
    Utils.extend(this, {
      cubeEffect: {
        setTranslate: Cube.setTranslate.bind(this),
        setTransition: Cube.setTransition.bind(this)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      if ("cube" !== this.params.effect) return;
      this.classNames.push("".concat(this.params.containerModifierClass, "cube")), this.classNames.push("".concat(this.params.containerModifierClass, "3d"));
      var e = {
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: !0,
        resistanceRatio: 0,
        spaceBetween: 0,
        centeredSlides: !1,
        virtualTranslate: !0
      };
      Utils.extend(this.params, e), Utils.extend(this.originalParams, e);
    },
    setTranslate: function setTranslate() {
      "cube" === this.params.effect && this.cubeEffect.setTranslate();
    },
    setTransition: function setTransition(e) {
      "cube" === this.params.effect && this.cubeEffect.setTransition(e);
    }
  }
};
var Flip = {
  setTranslate: function setTranslate() {
    var e = this,
        t = e.slides,
        s = e.rtlTranslate;

    for (var i = 0; i < t.length; i += 1) {
      var a = t.eq(i);
      var n = a[0].progress;
      e.params.flipEffect.limitRotation && (n = Math.max(Math.min(a[0].progress, 1), -1));
      var r = -180 * n,
          l = 0,
          o = -a[0].swiperSlideOffset,
          d = 0;

      if (e.isHorizontal() ? s && (r = -r) : (d = o, o = 0, l = -r, r = 0), a[0].style.zIndex = -Math.abs(Math.round(n)) + t.length, e.params.flipEffect.slideShadows) {
        var _t48 = e.isHorizontal() ? a.find(".swiper-slide-shadow-left") : a.find(".swiper-slide-shadow-top"),
            _s25 = e.isHorizontal() ? a.find(".swiper-slide-shadow-right") : a.find(".swiper-slide-shadow-bottom");

        0 === _t48.length && (_t48 = $("<div class=\"swiper-slide-shadow-".concat(e.isHorizontal() ? "left" : "top", "\"></div>")), a.append(_t48)), 0 === _s25.length && (_s25 = $("<div class=\"swiper-slide-shadow-".concat(e.isHorizontal() ? "right" : "bottom", "\"></div>")), a.append(_s25)), _t48.length && (_t48[0].style.opacity = Math.max(-n, 0)), _s25.length && (_s25[0].style.opacity = Math.max(n, 0));
      }

      a.transform("translate3d(".concat(o, "px, ").concat(d, "px, 0px) rotateX(").concat(l, "deg) rotateY(").concat(r, "deg)"));
    }
  },
  setTransition: function setTransition(e) {
    var t = this,
        s = t.slides,
        i = t.activeIndex,
        a = t.$wrapperEl;

    if (s.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), t.params.virtualTranslate && 0 !== e) {
      var _e71 = !1;

      s.eq(i).transitionEnd(function () {
        if (_e71) return;
        if (!t || t.destroyed) return;
        _e71 = !0, t.animating = !1;
        var s = ["webkitTransitionEnd", "transitionend"];

        for (var _e72 = 0; _e72 < s.length; _e72 += 1) {
          a.trigger(s[_e72]);
        }
      });
    }
  }
};
var EffectFlip = {
  name: "effect-flip",
  params: {
    flipEffect: {
      slideShadows: !0,
      limitRotation: !0
    }
  },
  create: function create() {
    Utils.extend(this, {
      flipEffect: {
        setTranslate: Flip.setTranslate.bind(this),
        setTransition: Flip.setTransition.bind(this)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      if ("flip" !== this.params.effect) return;
      this.classNames.push("".concat(this.params.containerModifierClass, "flip")), this.classNames.push("".concat(this.params.containerModifierClass, "3d"));
      var e = {
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: !0,
        spaceBetween: 0,
        virtualTranslate: !0
      };
      Utils.extend(this.params, e), Utils.extend(this.originalParams, e);
    },
    setTranslate: function setTranslate() {
      "flip" === this.params.effect && this.flipEffect.setTranslate();
    },
    setTransition: function setTransition(e) {
      "flip" === this.params.effect && this.flipEffect.setTransition(e);
    }
  }
};
var Coverflow = {
  setTranslate: function setTranslate() {
    var e = this.width,
        t = this.height,
        s = this.slides,
        i = this.$wrapperEl,
        a = this.slidesSizesGrid,
        n = this.params.coverflowEffect,
        r = this.isHorizontal(),
        l = this.translate,
        o = r ? e / 2 - l : t / 2 - l,
        d = r ? n.rotate : -n.rotate,
        p = n.depth;

    for (var _e73 = 0, _t49 = s.length; _e73 < _t49; _e73 += 1) {
      var _t50 = s.eq(_e73),
          _i19 = a[_e73],
          _l6 = (o - _t50[0].swiperSlideOffset - _i19 / 2) / _i19 * n.modifier;

      var c = r ? d * _l6 : 0,
          h = r ? 0 : d * _l6,
          u = -p * Math.abs(_l6),
          m = r ? 0 : n.stretch * _l6,
          f = r ? n.stretch * _l6 : 0;
      Math.abs(f) < .001 && (f = 0), Math.abs(m) < .001 && (m = 0), Math.abs(u) < .001 && (u = 0), Math.abs(c) < .001 && (c = 0), Math.abs(h) < .001 && (h = 0);
      var g = "translate3d(".concat(f, "px,").concat(m, "px,").concat(u, "px)  rotateX(").concat(h, "deg) rotateY(").concat(c, "deg)");

      if (_t50.transform(g), _t50[0].style.zIndex = 1 - Math.abs(Math.round(_l6)), n.slideShadows) {
        var _e74 = r ? _t50.find(".swiper-slide-shadow-left") : _t50.find(".swiper-slide-shadow-top"),
            _s26 = r ? _t50.find(".swiper-slide-shadow-right") : _t50.find(".swiper-slide-shadow-bottom");

        0 === _e74.length && (_e74 = $("<div class=\"swiper-slide-shadow-".concat(r ? "left" : "top", "\"></div>")), _t50.append(_e74)), 0 === _s26.length && (_s26 = $("<div class=\"swiper-slide-shadow-".concat(r ? "right" : "bottom", "\"></div>")), _t50.append(_s26)), _e74.length && (_e74[0].style.opacity = _l6 > 0 ? _l6 : 0), _s26.length && (_s26[0].style.opacity = -_l6 > 0 ? -_l6 : 0);
      }
    }

    if (Support.pointerEvents || Support.prefixedPointerEvents) {
      i[0].style.perspectiveOrigin = "".concat(o, "px 50%");
    }
  },
  setTransition: function setTransition(e) {
    this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e);
  }
};
var EffectCoverflow = {
  name: "effect-coverflow",
  params: {
    coverflowEffect: {
      rotate: 50,
      stretch: 0,
      depth: 100,
      modifier: 1,
      slideShadows: !0
    }
  },
  create: function create() {
    Utils.extend(this, {
      coverflowEffect: {
        setTranslate: Coverflow.setTranslate.bind(this),
        setTransition: Coverflow.setTransition.bind(this)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      "coverflow" === this.params.effect && (this.classNames.push("".concat(this.params.containerModifierClass, "coverflow")), this.classNames.push("".concat(this.params.containerModifierClass, "3d")), this.params.watchSlidesProgress = !0, this.originalParams.watchSlidesProgress = !0);
    },
    setTranslate: function setTranslate() {
      "coverflow" === this.params.effect && this.coverflowEffect.setTranslate();
    },
    setTransition: function setTransition(e) {
      "coverflow" === this.params.effect && this.coverflowEffect.setTransition(e);
    }
  }
};
var Thumbs = {
  init: function init() {
    var e = this,
        t = e.params.thumbs,
        s = e.constructor;
    t.swiper instanceof s ? (e.thumbs.swiper = t.swiper, Utils.extend(e.thumbs.swiper.originalParams, {
      watchSlidesProgress: !0,
      slideToClickedSlide: !1
    }), Utils.extend(e.thumbs.swiper.params, {
      watchSlidesProgress: !0,
      slideToClickedSlide: !1
    })) : Utils.isObject(t.swiper) && (e.thumbs.swiper = new s(Utils.extend({}, t.swiper, {
      watchSlidesVisibility: !0,
      watchSlidesProgress: !0,
      slideToClickedSlide: !1
    })), e.thumbs.swiperCreated = !0), e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass), e.thumbs.swiper.on("tap", e.thumbs.onThumbClick);
  },
  onThumbClick: function onThumbClick() {
    var e = this,
        t = e.thumbs.swiper;
    if (!t) return;
    var s = t.clickedIndex,
        i = t.clickedSlide;
    if (i && $(i).hasClass(e.params.thumbs.slideThumbActiveClass)) return;
    if (null == s) return;
    var a;

    if (a = t.params.loop ? parseInt($(t.clickedSlide).attr("data-swiper-slide-index"), 10) : s, e.params.loop) {
      var _t51 = e.activeIndex;
      e.slides.eq(_t51).hasClass(e.params.slideDuplicateClass) && (e.loopFix(), e._clientLeft = e.$wrapperEl[0].clientLeft, _t51 = e.activeIndex);

      var _s27 = e.slides.eq(_t51).prevAll("[data-swiper-slide-index=\"".concat(a, "\"]")).eq(0).index(),
          _i20 = e.slides.eq(_t51).nextAll("[data-swiper-slide-index=\"".concat(a, "\"]")).eq(0).index();

      a = void 0 === _s27 ? _i20 : void 0 === _i20 ? _s27 : _i20 - _t51 < _t51 - _s27 ? _i20 : _s27;
    }

    e.slideTo(a);
  },
  update: function update(e) {
    var t = this,
        s = t.thumbs.swiper;
    if (!s) return;
    var i = "auto" === s.params.slidesPerView ? s.slidesPerViewDynamic() : s.params.slidesPerView;

    if (t.realIndex !== s.realIndex) {
      var _a23,
          _n13 = s.activeIndex;

      if (s.params.loop) {
        s.slides.eq(_n13).hasClass(s.params.slideDuplicateClass) && (s.loopFix(), s._clientLeft = s.$wrapperEl[0].clientLeft, _n13 = s.activeIndex);

        var _e75 = s.slides.eq(_n13).prevAll("[data-swiper-slide-index=\"".concat(t.realIndex, "\"]")).eq(0).index(),
            _i21 = s.slides.eq(_n13).nextAll("[data-swiper-slide-index=\"".concat(t.realIndex, "\"]")).eq(0).index();

        _a23 = void 0 === _e75 ? _i21 : void 0 === _i21 ? _e75 : _i21 - _n13 == _n13 - _e75 ? _n13 : _i21 - _n13 < _n13 - _e75 ? _i21 : _e75;
      } else _a23 = t.realIndex;

      s.visibleSlidesIndexes && s.visibleSlidesIndexes.indexOf(_a23) < 0 && (s.params.centeredSlides ? _a23 = _a23 > _n13 ? _a23 - Math.floor(i / 2) + 1 : _a23 + Math.floor(i / 2) - 1 : _a23 > _n13 && (_a23 = _a23 - i + 1), s.slideTo(_a23, e ? 0 : void 0));
    }

    var a = 1;
    var n = t.params.thumbs.slideThumbActiveClass;
    if (t.params.slidesPerView > 1 && !t.params.centeredSlides && (a = t.params.slidesPerView), t.params.thumbs.multipleActiveThumbs || (a = 1), a = Math.floor(a), s.slides.removeClass(n), s.params.loop || s.params.virtual && s.params.virtual.enabled) for (var _e76 = 0; _e76 < a; _e76 += 1) {
      s.$wrapperEl.children("[data-swiper-slide-index=\"".concat(t.realIndex + _e76, "\"]")).addClass(n);
    } else for (var _e77 = 0; _e77 < a; _e77 += 1) {
      s.slides.eq(t.realIndex + _e77).addClass(n);
    }
  }
};
var Thumbs$1 = {
  name: "thumbs",
  params: {
    thumbs: {
      multipleActiveThumbs: !0,
      swiper: null,
      slideThumbActiveClass: "swiper-slide-thumb-active",
      thumbsContainerClass: "swiper-container-thumbs"
    }
  },
  create: function create() {
    Utils.extend(this, {
      thumbs: {
        swiper: null,
        init: Thumbs.init.bind(this),
        update: Thumbs.update.bind(this),
        onThumbClick: Thumbs.onThumbClick.bind(this)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var e = this.params.thumbs;
      e && e.swiper && (this.thumbs.init(), this.thumbs.update(!0));
    },
    slideChange: function slideChange() {
      this.thumbs.swiper && this.thumbs.update();
    },
    update: function update() {
      this.thumbs.swiper && this.thumbs.update();
    },
    resize: function resize() {
      this.thumbs.swiper && this.thumbs.update();
    },
    observerUpdate: function observerUpdate() {
      this.thumbs.swiper && this.thumbs.update();
    },
    setTransition: function setTransition(e) {
      var t = this.thumbs.swiper;
      t && t.setTransition(e);
    },
    beforeDestroy: function beforeDestroy() {
      var e = this.thumbs.swiper;
      e && this.thumbs.swiperCreated && e && e.destroy();
    }
  }
};
var components = [Device$1, Support$1, Browser$1, Resize, Observer$1, Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];
void 0 === Swiper.use && (Swiper.use = Swiper.Class.use, Swiper.installModule = Swiper.Class.installModule), Swiper.use(components);
var _default = Swiper;
exports["default"] = _default;